/* Generated by Yosys 0.57+125 (git sha1 5e550ddc3, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module soc(clk_i, rst_ni, cio_rx_i, cio_tx_o, cio_tx_en_o, cio_pwm_o, cio_pwm_en_o, cio_gpio_i, cio_gpio_o, cio_gpio_en_o);
  input clk_i;
  wire clk_i;
  input rst_ni;
  wire rst_ni;
  input cio_rx_i;
  wire cio_rx_i;
  output cio_tx_o;
  wire cio_tx_o;
  output cio_tx_en_o;
  wire cio_tx_en_o;
  output [1:0] cio_pwm_o;
  wire [1:0] cio_pwm_o;
  output [1:0] cio_pwm_en_o;
  wire [1:0] cio_pwm_en_o;
  input [3:0] cio_gpio_i;
  wire [3:0] cio_gpio_i;
  output [3:0] cio_gpio_o;
  wire [3:0] cio_gpio_o;
  output [3:0] cio_gpio_en_o;
  wire [3:0] cio_gpio_en_o;
  wire \$1001y ;
  wire \$1003y ;
  wire \$1009y ;
  wire [2:0] \$1010y ;
  wire \$1021y ;
  wire \$1023y ;
  wire \$1025y ;
  wire \$1027y ;
  wire [8:0] \$1040y ;
  wire [8:0] \$1042y ;
  wire \$1046y ;
  wire \$1047y ;
  wire \$1067y ;
  wire \$1068y ;
  wire \$1073y ;
  wire \$1079y ;
  wire \$1085y ;
  wire \$1103y ;
  wire \$1105y ;
  wire \$1107y ;
  wire \$1109y ;
  wire \$1111y ;
  wire \$1113y ;
  wire \$1115y ;
  wire \$1117y ;
  wire \$1119y ;
  wire \$1120y ;
  wire \$1128y ;
  wire \$1140y ;
  wire \$1143y ;
  wire \$1151y ;
  wire [2:0] \$1167y ;
  wire \$1175y ;
  wire [31:0] \$1176y ;
  wire \$1180y ;
  wire \$1181y ;
  wire \$124y ;
  wire \$125y ;
  wire \$126y ;
  wire \$1282y ;
  wire \$1299y ;
  wire \$1337y ;
  wire \$134y ;
  wire \$1354y ;
  wire \$135y ;
  wire \$136y ;
  wire \$1392y ;
  wire \$1409y ;
  wire \$1447y ;
  wire \$144y ;
  wire \$145y ;
  wire \$1464y ;
  wire \$146y ;
  wire \$1502y ;
  wire \$1519y ;
  wire \$154y ;
  wire \$1557y ;
  wire \$155y ;
  wire \$156y ;
  wire \$1574y ;
  wire \$1612y ;
  wire \$1629y ;
  wire \$164y ;
  wire \$165y ;
  wire \$1667y ;
  wire \$166y ;
  wire \$1684y ;
  wire \$1722y ;
  wire \$1739y ;
  wire \$174y ;
  wire \$1756y ;
  wire \$175y ;
  wire \$176y ;
  wire \$1987y ;
  wire \$1988y ;
  wire \$1989y ;
  wire [3:0] \$1992y ;
  wire \$1995y ;
  wire \$1998y ;
  wire \$1999y ;
  wire \$2000y ;
  wire \$2004y ;
  wire \$2005y ;
  wire \$2009y ;
  wire \$2010y ;
  wire \$2014y ;
  wire \$2015y ;
  wire \$2019y ;
  wire \$2020y ;
  wire \$2024y ;
  wire \$2025y ;
  wire \$2029y ;
  wire \$2030y ;
  wire \$2034y ;
  wire \$2035y ;
  wire \$2039y ;
  wire \$2040y ;
  wire \$2042y ;
  wire \$2043y ;
  wire \$2045y ;
  wire \$2048y ;
  wire \$2051y ;
  wire \$2054y ;
  wire \$2057y ;
  wire \$2060y ;
  wire \$2063y ;
  wire \$2066y ;
  wire \$2069y ;
  wire \$2081y ;
  wire \$2082y ;
  wire \$2083y ;
  wire \$2084y ;
  wire \$2085y ;
  wire \$2086y ;
  wire \$2087y ;
  wire \$2090y ;
  wire \$2091y ;
  wire \$2092y ;
  wire \$2093y ;
  wire \$2094y ;
  wire \$2095y ;
  wire [26:0] \$2098y ;
  wire [26:0] \$2099y ;
  wire [16:0] \$2118y ;
  wire \$2120y ;
  wire \$2121y ;
  wire \$2122y ;
  wire \$2123y ;
  wire \$2124y ;
  wire \$2125y ;
  wire [15:0] \$2126y ;
  wire [15:0] \$2127y ;
  wire [15:0] \$2128y ;
  wire [15:0] \$2135y ;
  wire \$2139y ;
  wire \$2140y ;
  wire \$2142y ;
  wire \$2143y ;
  wire \$2144y ;
  wire \$2145y ;
  wire \$2146y ;
  wire [15:0] \$2147y ;
  wire [15:0] \$2148y ;
  wire [15:0] \$2149y ;
  wire [15:0] \$2155y ;
  wire \$2167y ;
  wire \$2168y ;
  wire \$2169y ;
  wire \$2170y ;
  wire \$2171y ;
  wire \$2172y ;
  wire \$2173y ;
  wire \$2174y ;
  wire \$2175y ;
  wire \$2177y ;
  wire \$2178y ;
  wire \$2180y ;
  wire \$2181y ;
  wire \$2187y ;
  wire \$2188y ;
  wire \$2193y ;
  wire [16:0] \$2194y ;
  wire [16:0] \$2195y ;
  wire [16:0] \$2196y ;
  wire [16:0] \$2197y ;
  wire [16:0] \$2198y ;
  wire [16:0] \$2199y ;
  wire [2:0] \$21y ;
  wire \$2206y ;
  wire \$2207y ;
  wire \$2208y ;
  wire \$2209y ;
  wire \$2215y ;
  wire \$2216y ;
  wire [15:0] \$2219y ;
  wire [15:0] \$2222y ;
  wire [15:0] \$2227y ;
  wire [31:0] \$2229y ;
  wire [15:0] \$2231y ;
  wire \$2244y ;
  wire \$2245y ;
  wire \$2247y ;
  wire \$2248y ;
  wire \$2250y ;
  wire [16:0] \$2252y ;
  wire \$2254y ;
  wire \$2255y ;
  wire \$2256y ;
  wire \$2257y ;
  wire \$2258y ;
  wire \$2259y ;
  wire [15:0] \$2260y ;
  wire [15:0] \$2261y ;
  wire [15:0] \$2262y ;
  wire [15:0] \$2269y ;
  wire \$2273y ;
  wire \$2274y ;
  wire \$2276y ;
  wire \$2277y ;
  wire \$2278y ;
  wire \$2279y ;
  wire \$2280y ;
  wire [15:0] \$2281y ;
  wire [15:0] \$2282y ;
  wire [15:0] \$2283y ;
  wire [15:0] \$2289y ;
  wire \$2301y ;
  wire \$2302y ;
  wire \$2303y ;
  wire \$2304y ;
  wire \$2305y ;
  wire \$2306y ;
  wire \$2307y ;
  wire \$2308y ;
  wire \$2309y ;
  wire \$2311y ;
  wire \$2312y ;
  wire \$2314y ;
  wire \$2315y ;
  wire \$2321y ;
  wire \$2322y ;
  wire \$2327y ;
  wire [16:0] \$2328y ;
  wire [16:0] \$2329y ;
  wire [16:0] \$2330y ;
  wire [16:0] \$2331y ;
  wire [16:0] \$2332y ;
  wire [16:0] \$2333y ;
  wire \$2340y ;
  wire \$2341y ;
  wire \$2342y ;
  wire \$2343y ;
  wire \$2349y ;
  wire \$2350y ;
  wire [15:0] \$2353y ;
  wire [15:0] \$2356y ;
  wire [15:0] \$2361y ;
  wire \$2378y ;
  wire \$2379y ;
  wire \$2381y ;
  wire \$2382y ;
  wire \$2384y ;
  wire \$2404y ;
  wire \$2405y ;
  wire [3:0] \$2406y ;
  wire [3:0] \$2407y ;
  wire \$2428y ;
  wire \$2429y ;
  wire [3:0] \$2430y ;
  wire [3:0] \$2431y ;
  wire \$2452y ;
  wire \$2453y ;
  wire [3:0] \$2454y ;
  wire [3:0] \$2455y ;
  wire \$2476y ;
  wire \$2477y ;
  wire [3:0] \$2478y ;
  wire [3:0] \$2479y ;
  wire [1:0] \$2485y ;
  wire [1:0] \$2486y ;
  wire [1:0] \$2487y ;
  wire [1:0] \$2488y ;
  wire [1:0] \$2491y ;
  wire [1:0] \$2492y ;
  wire [1:0] \$2501y ;
  wire [1:0] \$2502y ;
  wire [1:0] \$2505y ;
  wire [1:0] \$2506y ;
  wire [3:0] \$2511y ;
  wire [3:0] \$2519y ;
  wire [3:0] \$2520y ;
  wire [3:0] \$2522y ;
  wire [3:0] \$2523y ;
  wire [3:0] \$2528y ;
  wire [3:0] \$2529y ;
  wire [2:0] \$2552y ;
  wire \$2560y ;
  wire [31:0] \$2561y ;
  wire [3:0] \$2645y ;
  wire [3:0] \$2646y ;
  wire [3:0] \$2647y ;
  wire \$2730y ;
  wire \$2731y ;
  wire \$2732y ;
  wire \$2742y ;
  wire \$2743y ;
  wire \$2748y ;
  wire \$2753y ;
  wire \$2757y ;
  wire \$2758y ;
  wire \$2762y ;
  wire \$2763y ;
  wire \$2767y ;
  wire \$2768y ;
  wire \$2772y ;
  wire \$2773y ;
  wire \$2777y ;
  wire \$2778y ;
  wire \$2782y ;
  wire \$2783y ;
  wire \$2787y ;
  wire \$2788y ;
  wire \$2792y ;
  wire \$2793y ;
  wire \$2797y ;
  wire \$2798y ;
  wire \$2802y ;
  wire \$2803y ;
  wire \$2807y ;
  wire \$2808y ;
  wire \$2810y ;
  wire \$2811y ;
  wire \$2813y ;
  wire \$2816y ;
  wire \$2822y ;
  wire \$2828y ;
  wire \$2834y ;
  wire \$2840y ;
  wire \$2846y ;
  wire \$2852y ;
  wire \$2855y ;
  wire \$2858y ;
  wire \$2861y ;
  wire \$2864y ;
  wire \$2867y ;
  wire \$2876y ;
  wire \$2878y ;
  wire \$2890y ;
  wire [11:0] \$2891y ;
  wire \$2894y ;
  wire \$2897y ;
  wire [2:0] \$2920y ;
  wire \$2928y ;
  wire [31:0] \$2929y ;
  wire \$29y ;
  wire \$3029y ;
  wire \$3030y ;
  wire \$3031y ;
  wire [31:0] \$30y ;
  wire \$3105y ;
  wire \$3106y ;
  wire \$3107y ;
  wire \$3113y ;
  wire \$3117y ;
  wire \$3118y ;
  wire \$3122y ;
  wire \$3123y ;
  wire \$3127y ;
  wire \$3128y ;
  wire \$3131y ;
  wire \$3132y ;
  wire \$3133y ;
  wire \$3137y ;
  wire \$3138y ;
  wire \$3142y ;
  wire \$3143y ;
  wire \$3147y ;
  wire \$3148y ;
  wire \$3152y ;
  wire \$3153y ;
  wire \$3155y ;
  wire \$3156y ;
  wire \$3158y ;
  wire \$3161y ;
  wire \$3164y ;
  wire \$3167y ;
  wire \$3170y ;
  wire \$3173y ;
  wire \$3176y ;
  wire \$3179y ;
  wire \$428y ;
  wire \$429y ;
  wire \$430y ;
  wire \$435y ;
  wire \$436y ;
  wire \$440y ;
  wire \$441y ;
  wire \$445y ;
  wire \$446y ;
  wire \$451y ;
  wire \$456y ;
  wire \$461y ;
  wire \$466y ;
  wire \$471y ;
  wire \$476y ;
  wire \$480y ;
  wire \$481y ;
  wire \$486y ;
  wire \$490y ;
  wire \$491y ;
  wire \$495y ;
  wire \$496y ;
  wire \$498y ;
  wire \$499y ;
  wire \$501y ;
  wire \$504y ;
  wire \$510y ;
  wire \$516y ;
  wire \$519y ;
  wire \$522y ;
  wire \$528y ;
  wire \$534y ;
  wire \$543y ;
  wire \$544y ;
  wire \$545y ;
  wire \$547y ;
  wire \$550y ;
  wire [4:0] \$551y ;
  wire [4:0] \$552y ;
  wire \$559y ;
  wire \$560y ;
  wire \$561y ;
  wire \$562y ;
  wire [16:0] \$580y ;
  wire \$582y ;
  wire \$587y ;
  wire \$589y ;
  wire \$592y ;
  wire \$595y ;
  wire \$597y ;
  wire \$604y ;
  wire [5:0] \$605y ;
  wire [5:0] \$606y ;
  wire [5:0] \$607y ;
  wire [5:0] \$608y ;
  wire [5:0] \$613y ;
  wire [5:0] \$620y ;
  wire \$624y ;
  wire \$627y ;
  wire \$630y ;
  wire [7:0] \$631y ;
  wire \$634y ;
  wire \$635y ;
  wire \$636y ;
  wire [7:0] \$637y ;
  wire [255:0] \$638y ;
  wire [255:0] \$640y ;
  wire [4:0] \$646y ;
  wire \$654y ;
  wire [3:0] \$655y ;
  wire \$656y ;
  wire \$657y ;
  wire [3:0] \$658y ;
  wire \$668y ;
  wire \$670y ;
  wire \$688y ;
  wire \$689y ;
  wire \$690y ;
  wire \$691y ;
  wire \$694y ;
  wire [4:0] \$701y ;
  wire \$704y ;
  wire \$705y ;
  wire \$707y ;
  wire \$708y ;
  wire \$710y ;
  wire \$711y ;
  wire [3:0] \$712y ;
  wire \$713y ;
  wire \$734y ;
  wire \$736y ;
  wire \$738y ;
  wire \$739y ;
  wire \$742y ;
  wire \$743y ;
  wire \$749y ;
  wire \$751y ;
  wire \$754y ;
  wire \$757y ;
  wire \$759y ;
  wire \$766y ;
  wire [6:0] \$767y ;
  wire [6:0] \$768y ;
  wire [6:0] \$769y ;
  wire [6:0] \$770y ;
  wire [6:0] \$775y ;
  wire [6:0] \$782y ;
  wire \$786y ;
  wire \$789y ;
  wire \$792y ;
  wire [7:0] \$793y ;
  wire \$796y ;
  wire \$797y ;
  wire \$798y ;
  wire [7:0] \$799y ;
  wire [511:0] \$800y ;
  wire [511:0] \$802y ;
  wire \$810y ;
  wire [5:0] \$811y ;
  wire \$816y ;
  wire \$817y ;
  wire \$823y ;
  wire \$824y ;
  wire [6:0] \$825y ;
  wire \$831y ;
  wire [23:0] \$832y ;
  wire [23:0] \$833y ;
  wire [23:0] \$834y ;
  wire [23:0] \$835y ;
  wire [23:0] \$836y ;
  wire \$838y ;
  wire \$845y ;
  wire \$880y ;
  wire \$888y ;
  wire \$896y ;
  wire \$904y ;
  wire \$912y ;
  wire \$920y ;
  wire \$929y ;
  wire \$935y ;
  wire \$936y ;
  wire \$940y ;
  wire [1:0] \$941y ;
  wire \$949y ;
  wire [127:0] \$auto$bmuxmap.cc:84:execute$2616 ;
  wire [63:0] \$auto$bmuxmap.cc:84:execute$2633 ;
  wire [31:0] \$auto$bmuxmap.cc:84:execute$2642 ;
  wire [15:0] \$auto$bmuxmap.cc:84:execute$2647 ;
  wire [7:0] \$auto$bmuxmap.cc:84:execute$2650 ;
  wire [255:0] \$auto$bmuxmap.cc:84:execute$2652 ;
  wire [127:0] \$auto$bmuxmap.cc:84:execute$2685 ;
  wire [63:0] \$auto$bmuxmap.cc:84:execute$2702 ;
  wire [31:0] \$auto$bmuxmap.cc:84:execute$2711 ;
  wire [15:0] \$auto$bmuxmap.cc:84:execute$2716 ;
  wire [7:0] \$auto$bmuxmap.cc:84:execute$2719 ;
  wire \$auto$demuxmap.cc:63:execute$2721 ;
  wire \$auto$demuxmap.cc:63:execute$2724 ;
  wire \$auto$demuxmap.cc:63:execute$2727 ;
  wire \$auto$demuxmap.cc:63:execute$2730 ;
  wire \$auto$demuxmap.cc:63:execute$2733 ;
  wire \$auto$demuxmap.cc:63:execute$2736 ;
  wire \$auto$demuxmap.cc:63:execute$2739 ;
  wire \$auto$demuxmap.cc:63:execute$2742 ;
  wire \$auto$demuxmap.cc:63:execute$2745 ;
  wire \$auto$demuxmap.cc:63:execute$2748 ;
  wire \$auto$demuxmap.cc:63:execute$2751 ;
  wire \$auto$demuxmap.cc:63:execute$2754 ;
  wire \$auto$demuxmap.cc:63:execute$2757 ;
  wire \$auto$demuxmap.cc:63:execute$2760 ;
  wire \$auto$demuxmap.cc:63:execute$2763 ;
  wire \$auto$demuxmap.cc:63:execute$2766 ;
  wire \$auto$demuxmap.cc:63:execute$2769 ;
  wire \$auto$demuxmap.cc:63:execute$2772 ;
  wire \$auto$demuxmap.cc:63:execute$2775 ;
  wire \$auto$demuxmap.cc:63:execute$2778 ;
  wire \$auto$demuxmap.cc:63:execute$2781 ;
  wire \$auto$demuxmap.cc:63:execute$2784 ;
  wire \$auto$demuxmap.cc:63:execute$2787 ;
  wire \$auto$demuxmap.cc:63:execute$2790 ;
  wire \$auto$demuxmap.cc:63:execute$2793 ;
  wire \$auto$demuxmap.cc:63:execute$2796 ;
  wire \$auto$demuxmap.cc:63:execute$2799 ;
  wire \$auto$demuxmap.cc:63:execute$2802 ;
  wire \$auto$demuxmap.cc:63:execute$2805 ;
  wire \$auto$demuxmap.cc:63:execute$2808 ;
  wire \$auto$demuxmap.cc:63:execute$2811 ;
  wire \$auto$demuxmap.cc:63:execute$2814 ;
  wire \$auto$demuxmap.cc:63:execute$2817 ;
  wire \$auto$demuxmap.cc:63:execute$2820 ;
  wire \$auto$demuxmap.cc:63:execute$2823 ;
  wire \$auto$demuxmap.cc:63:execute$2826 ;
  wire \$auto$demuxmap.cc:63:execute$2829 ;
  wire \$auto$demuxmap.cc:63:execute$2832 ;
  wire \$auto$demuxmap.cc:63:execute$2835 ;
  wire \$auto$demuxmap.cc:63:execute$2838 ;
  wire \$auto$demuxmap.cc:63:execute$2841 ;
  wire \$auto$demuxmap.cc:63:execute$2844 ;
  wire \$auto$demuxmap.cc:63:execute$2847 ;
  wire \$auto$demuxmap.cc:63:execute$2850 ;
  wire \$auto$demuxmap.cc:63:execute$2853 ;
  wire \$auto$demuxmap.cc:63:execute$2856 ;
  wire \$auto$demuxmap.cc:63:execute$2859 ;
  wire \$auto$demuxmap.cc:63:execute$2862 ;
  wire \$auto$demuxmap.cc:63:execute$2865 ;
  wire \$auto$demuxmap.cc:63:execute$2868 ;
  wire \$auto$demuxmap.cc:63:execute$2871 ;
  wire \$auto$demuxmap.cc:63:execute$2874 ;
  wire \$auto$demuxmap.cc:63:execute$2877 ;
  wire \$auto$demuxmap.cc:63:execute$2880 ;
  wire \$auto$demuxmap.cc:63:execute$2883 ;
  wire \$auto$demuxmap.cc:63:execute$2886 ;
  wire \$auto$demuxmap.cc:63:execute$2889 ;
  wire \$auto$demuxmap.cc:63:execute$2892 ;
  wire \$auto$demuxmap.cc:63:execute$2895 ;
  wire \$auto$demuxmap.cc:63:execute$2898 ;
  wire \$auto$demuxmap.cc:63:execute$2901 ;
  wire \$auto$demuxmap.cc:63:execute$2904 ;
  wire \$auto$demuxmap.cc:63:execute$2907 ;
  wire \$auto$demuxmap.cc:63:execute$2910 ;
  wire \$auto$demuxmap.cc:63:execute$2913 ;
  wire \$auto$demuxmap.cc:63:execute$2916 ;
  wire \$auto$demuxmap.cc:63:execute$2919 ;
  wire \$auto$demuxmap.cc:63:execute$2922 ;
  wire \$auto$demuxmap.cc:63:execute$2925 ;
  wire \$auto$demuxmap.cc:63:execute$2928 ;
  wire \$auto$demuxmap.cc:63:execute$2931 ;
  wire \$auto$demuxmap.cc:63:execute$2934 ;
  wire \$auto$demuxmap.cc:63:execute$2937 ;
  wire \$auto$demuxmap.cc:63:execute$2940 ;
  wire \$auto$demuxmap.cc:63:execute$2943 ;
  wire \$auto$demuxmap.cc:63:execute$2946 ;
  wire \$auto$demuxmap.cc:63:execute$2949 ;
  wire \$auto$demuxmap.cc:63:execute$2952 ;
  wire \$auto$demuxmap.cc:63:execute$2955 ;
  wire \$auto$demuxmap.cc:63:execute$2958 ;
  wire \$auto$demuxmap.cc:63:execute$2961 ;
  wire \$auto$demuxmap.cc:63:execute$2964 ;
  wire \$auto$demuxmap.cc:63:execute$2967 ;
  wire \$auto$demuxmap.cc:63:execute$2970 ;
  wire \$auto$demuxmap.cc:63:execute$2973 ;
  wire \$auto$demuxmap.cc:63:execute$2976 ;
  wire \$auto$demuxmap.cc:63:execute$2979 ;
  wire \$auto$demuxmap.cc:63:execute$2982 ;
  wire \$auto$demuxmap.cc:63:execute$2985 ;
  wire \$auto$demuxmap.cc:63:execute$2988 ;
  wire \$auto$demuxmap.cc:63:execute$2991 ;
  wire \$auto$demuxmap.cc:63:execute$2994 ;
  wire \$auto$demuxmap.cc:63:execute$2997 ;
  wire \$auto$demuxmap.cc:63:execute$3000 ;
  wire \$auto$demuxmap.cc:63:execute$3003 ;
  wire \$auto$demuxmap.cc:63:execute$3006 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2077 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2079 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2106 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2108 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2113 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2120 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2122 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2133 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2136 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2139 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2174 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2177 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2245 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2289 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2291 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2293 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2295 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2297 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2299 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2301 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2316 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2321 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2323 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2330 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2334 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2338 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2349 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2363 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2365 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2367 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2415 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2421 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2427 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2433 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2439 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2445 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2450 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2456 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2459 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2465 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2470 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2476 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2484 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2490 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2495 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2501 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2506 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2512 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2516 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2519 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2521 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2527 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2529 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2534 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2536 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2542 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2545 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2547 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2553 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2555 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2560 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2562 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2583 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2585 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2590 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2593 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2595 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2600 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2081 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2086 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2110 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2124 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2303 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2318 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2325 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2344 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2351 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2354 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2369 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2372 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2390 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2523 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2531 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2538 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2549 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2557 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2564 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2587 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2597 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2039 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2041 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2043 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2047 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2049 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2053 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2055 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2059 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2063 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2067 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2069 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2071 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$2075 ;
  wire [255:0] \$auto$rtlil.cc:3097:Not$2603 ;
  wire [511:0] \$auto$rtlil.cc:3097:Not$2610 ;
  wire [255:0] \$auto$rtlil.cc:3144:And$2605 ;
  wire [255:0] \$auto$rtlil.cc:3144:And$2607 ;
  wire [511:0] \$auto$rtlil.cc:3144:And$2612 ;
  wire [511:0] \$auto$rtlil.cc:3144:And$2614 ;
  wire [31:0] \$procmux$1000_Y ;
  wire \$procmux$1001_CMP ;
  wire [1:0] \$procmux$1006_Y ;
  wire [2:0] \$procmux$1014_Y ;
  wire [1:0] \$procmux$1023_Y ;
  wire \$procmux$1028_CMP ;
  wire [2:0] \$procmux$1035_Y ;
  wire \$procmux$1058_CMP ;
  wire [1:0] \$procmux$1086_Y ;
  wire [2:0] \$procmux$1095_Y ;
  wire [1:0] \$procmux$10_Y ;
  wire \$procmux$1101_CMP ;
  wire \$procmux$1102_CMP ;
  wire \$procmux$1104_CMP ;
  wire \$procmux$1110_CMP ;
  wire [2:0] \$procmux$1116_Y ;
  wire \$procmux$1185_Y ;
  wire \$procmux$1192_Y ;
  wire \$procmux$121_Y ;
  wire [11:0] \$procmux$124_Y ;
  wire [15:0] \$procmux$1250_Y ;
  wire [15:0] \$procmux$1253_Y ;
  wire [6:0] \$procmux$1310_Y ;
  wire [11:0] \$procmux$131_Y ;
  wire [6:0] \$procmux$1328_Y ;
  wire [6:0] \$procmux$1338_Y ;
  wire [6:0] \$procmux$1345_Y ;
  wire [6:0] \$procmux$1347_Y ;
  wire [6:0] \$procmux$1357_Y ;
  wire [2:0] \$procmux$135_Y ;
  wire [6:0] \$procmux$1364_Y ;
  wire \$procmux$1366_Y ;
  wire [2:0] \$procmux$1368_Y ;
  wire [31:0] \$procmux$1373_Y ;
  wire [2:0] \$procmux$1380_Y ;
  wire [31:0] \$procmux$1384_Y ;
  wire \$procmux$1387_Y ;
  wire [3:0] \$procmux$1398_Y ;
  wire [10:0] \$procmux$1409_Y ;
  wire [1:0] \$procmux$140_Y ;
  wire \$procmux$1420_Y ;
  wire [3:0] \$procmux$1429_Y ;
  wire [10:0] \$procmux$1438_Y ;
  wire [2:0] \$procmux$147_Y ;
  wire \$procmux$1481_Y ;
  wire [3:0] \$procmux$1486_Y ;
  wire \$procmux$1511_Y ;
  wire \$procmux$1518_Y ;
  wire [1:0] \$procmux$151_Y ;
  wire \$procmux$1537_Y ;
  wire \$procmux$153_Y ;
  wire \$procmux$1540_Y ;
  wire \$procmux$1547_Y ;
  wire \$procmux$1549_Y ;
  wire [10:0] \$procmux$1557_Y ;
  wire [3:0] \$procmux$1565_Y ;
  wire [10:0] \$procmux$1575_Y ;
  wire [3:0] \$procmux$1582_Y ;
  wire \$procmux$1589_Y ;
  wire \$procmux$1609_Y ;
  wire \$procmux$160_Y ;
  wire [5:0] \$procmux$1616_Y ;
  wire [5:0] \$procmux$1626_Y ;
  wire [5:0] \$procmux$1633_Y ;
  wire [5:0] \$procmux$1635_Y ;
  wire [5:0] \$procmux$1645_Y ;
  wire [5:0] \$procmux$1652_Y ;
  wire \$procmux$1654_Y ;
  wire \$procmux$1658_Y ;
  wire \$procmux$1663_Y ;
  wire \$procmux$1668_Y ;
  wire \$procmux$1674_CMP ;
  wire \$procmux$1675_CMP ;
  wire \$procmux$1676_CMP ;
  wire [1:0] \$procmux$17_Y ;
  wire [2:0] \$procmux$1982_Y ;
  wire [31:0] \$procmux$1987_Y ;
  wire [2:0] \$procmux$1994_Y ;
  wire [31:0] \$procmux$1998_Y ;
  wire [1:0] \$procmux$1_Y ;
  wire \$procmux$2000_Y ;
  wire \$procmux$2007_Y ;
  wire \$procmux$2030_Y ;
  wire [2:0] \$procmux$206_Y ;
  wire [31:0] \$procmux$211_Y ;
  wire [2:0] \$procmux$218_Y ;
  wire [31:0] \$procmux$222_Y ;
  wire \$procmux$224_Y ;
  wire \$procmux$231_Y ;
  wire [2:0] \$procmux$239_Y ;
  wire [1:0] \$procmux$244_Y ;
  wire [3:0] \$procmux$24_Y ;
  wire [2:0] \$procmux$251_Y ;
  wire [1:0] \$procmux$255_Y ;
  wire \$procmux$257_Y ;
  wire \$procmux$264_Y ;
  wire [1:0] \$procmux$32_Y ;
  wire [2:0] \$procmux$350_Y ;
  wire [31:0] \$procmux$355_Y ;
  wire [2:0] \$procmux$362_Y ;
  wire [31:0] \$procmux$366_Y ;
  wire \$procmux$368_Y ;
  wire \$procmux$375_Y ;
  wire [2:0] \$procmux$379_Y ;
  wire [31:0] \$procmux$384_Y ;
  wire [2:0] \$procmux$391_Y ;
  wire [31:0] \$procmux$395_Y ;
  wire \$procmux$397_Y ;
  wire \$procmux$404_Y ;
  wire [15:0] \$procmux$407_Y ;
  wire [1:0] \$procmux$41_Y ;
  wire \$procmux$449_Y ;
  wire \$procmux$465_Y ;
  wire \$procmux$478_Y ;
  wire \$procmux$488_Y ;
  wire [1:0] \$procmux$48_Y ;
  wire \$procmux$495_Y ;
  wire [15:0] \$procmux$504_Y ;
  wire [15:0] \$procmux$507_Y ;
  wire \$procmux$528_Y ;
  wire [15:0] \$procmux$531_Y ;
  wire \$procmux$538_Y ;
  wire [3:0] \$procmux$55_Y ;
  wire \$procmux$560_Y ;
  wire [65:0] \$procmux$582_Y ;
  wire [65:0] \$procmux$585_Y ;
  wire [65:0] \$procmux$587_Y ;
  wire \$procmux$593_Y ;
  wire \$procmux$596_Y ;
  wire \$procmux$599_Y ;
  wire \$procmux$601_Y ;
  wire [8:0] \$procmux$606_Y ;
  wire [8:0] \$procmux$614_Y ;
  wire [8:0] \$procmux$617_Y ;
  wire [2:0] \$procmux$625_Y ;
  wire [2:0] \$procmux$638_Y ;
  wire [2:0] \$procmux$648_Y ;
  wire \$procmux$658_Y ;
  wire [2:0] \$procmux$65_Y ;
  wire \$procmux$674_Y ;
  wire \$procmux$687_Y ;
  wire \$procmux$697_Y ;
  wire \$procmux$704_Y ;
  wire \$procmux$707_Y ;
  wire [31:0] \$procmux$70_Y ;
  wire [2:0] \$procmux$714_Y ;
  wire [31:0] \$procmux$719_Y ;
  wire [2:0] \$procmux$726_Y ;
  wire [31:0] \$procmux$730_Y ;
  wire \$procmux$732_Y ;
  wire [2:0] \$procmux$740_Y ;
  wire \$procmux$747_Y ;
  wire [3:0] \$procmux$756_Y ;
  wire [31:0] \$procmux$765_Y ;
  wire [1:0] \$procmux$774_Y ;
  wire [2:0] \$procmux$77_Y ;
  wire [2:0] \$procmux$783_Y ;
  wire \$procmux$792_Y ;
  wire [3:0] \$procmux$799_Y ;
  wire [31:0] \$procmux$806_Y ;
  wire [31:0] \$procmux$81_Y ;
  wire [1:0] \$procmux$820_Y ;
  wire [2:0] \$procmux$827_Y ;
  wire [1:0] \$procmux$836_Y ;
  wire \$procmux$83_Y ;
  wire [2:0] \$procmux$847_Y ;
  wire \$procmux$860_Y ;
  wire [3:0] \$procmux$873_Y ;
  wire [31:0] \$procmux$886_Y ;
  wire [1:0] \$procmux$899_Y ;
  wire \$procmux$90_Y ;
  wire \$procmux$912_Y ;
  wire [3:0] \$procmux$923_Y ;
  wire [31:0] \$procmux$934_Y ;
  wire [2:0] \$procmux$956_Y ;
  wire \$procmux$966_Y ;
  wire [3:0] \$procmux$974_Y ;
  wire [31:0] \$procmux$982_Y ;
  wire [65:0] tl_gpio_d2h;
  wire [108:0] tl_gpio_h2d;
  wire [65:0] tl_pwm_d2h;
  wire [108:0] tl_pwm_h2d;
  wire [65:0] tl_rv_timer_d2h;
  wire [108:0] tl_rv_timer_h2d;
  wire [65:0] tl_uart_d2h;
  wire [108:0] tl_uart_h2d;
  wire [65:0] tl_uart_host_d2h;
  wire [108:0] tl_uart_host_h2d;
  wire [3:0] \u_gpio.cio_gpio_en_o ;
  reg [3:0] \u_gpio.cio_gpio_en_q ;
  wire [3:0] \u_gpio.cio_gpio_i ;
  wire [3:0] \u_gpio.cio_gpio_o ;
  reg [3:0] \u_gpio.cio_gpio_q ;
  wire \u_gpio.clk_i ;
  wire [3:0] \u_gpio.data_in_d ;
  reg [3:0] \u_gpio.data_in_q ;
  wire [3:0] \u_gpio.event_intr_acthigh ;
  wire [3:0] \u_gpio.event_intr_actlow ;
  wire [3:0] \u_gpio.event_intr_combined ;
  wire [3:0] \u_gpio.event_intr_fall ;
  wire [3:0] \u_gpio.event_intr_rise ;
  wire \u_gpio.gen_filter[0].u_filter.clk_i ;
  wire [3:0] \u_gpio.gen_filter[0].u_filter.diff_ctr_d ;
  reg [3:0] \u_gpio.gen_filter[0].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[0].u_filter.enable_i ;
  wire \u_gpio.gen_filter[0].u_filter.filter_i ;
  wire \u_gpio.gen_filter[0].u_filter.filter_o ;
  reg \u_gpio.gen_filter[0].u_filter.filter_q ;
  wire \u_gpio.gen_filter[0].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[0].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[0].u_filter.stored_value_q ;
  wire [3:0] \u_gpio.gen_filter[0].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[0].u_filter.update_stored_value ;
  wire \u_gpio.gen_filter[1].u_filter.clk_i ;
  wire [3:0] \u_gpio.gen_filter[1].u_filter.diff_ctr_d ;
  reg [3:0] \u_gpio.gen_filter[1].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[1].u_filter.enable_i ;
  wire \u_gpio.gen_filter[1].u_filter.filter_i ;
  wire \u_gpio.gen_filter[1].u_filter.filter_o ;
  reg \u_gpio.gen_filter[1].u_filter.filter_q ;
  wire \u_gpio.gen_filter[1].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[1].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[1].u_filter.stored_value_q ;
  wire [3:0] \u_gpio.gen_filter[1].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[1].u_filter.update_stored_value ;
  wire \u_gpio.gen_filter[2].u_filter.clk_i ;
  wire [3:0] \u_gpio.gen_filter[2].u_filter.diff_ctr_d ;
  reg [3:0] \u_gpio.gen_filter[2].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[2].u_filter.enable_i ;
  wire \u_gpio.gen_filter[2].u_filter.filter_i ;
  wire \u_gpio.gen_filter[2].u_filter.filter_o ;
  reg \u_gpio.gen_filter[2].u_filter.filter_q ;
  wire \u_gpio.gen_filter[2].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[2].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[2].u_filter.stored_value_q ;
  wire [3:0] \u_gpio.gen_filter[2].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[2].u_filter.update_stored_value ;
  wire \u_gpio.gen_filter[3].u_filter.clk_i ;
  wire [3:0] \u_gpio.gen_filter[3].u_filter.diff_ctr_d ;
  reg [3:0] \u_gpio.gen_filter[3].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[3].u_filter.enable_i ;
  wire \u_gpio.gen_filter[3].u_filter.filter_i ;
  wire \u_gpio.gen_filter[3].u_filter.filter_o ;
  reg \u_gpio.gen_filter[3].u_filter.filter_q ;
  wire \u_gpio.gen_filter[3].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[3].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[3].u_filter.stored_value_q ;
  wire [3:0] \u_gpio.gen_filter[3].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[3].u_filter.update_stored_value ;
  wire [33:0] \u_gpio.hw2reg ;
  wire \u_gpio.intr_hw.clk_i ;
  wire [3:0] \u_gpio.intr_hw.event_intr_i ;
  wire [3:0] \u_gpio.intr_hw.g_intr_event.new_event ;
  wire [3:0] \u_gpio.intr_hw.hw2reg_intr_state_d_o ;
  wire \u_gpio.intr_hw.hw2reg_intr_state_de_o ;
  wire [3:0] \u_gpio.intr_hw.reg2hw_intr_enable_q_i ;
  wire [3:0] \u_gpio.intr_hw.reg2hw_intr_state_q_i ;
  wire [3:0] \u_gpio.intr_hw.reg2hw_intr_test_q_i ;
  wire \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  wire \u_gpio.intr_hw.rst_ni ;
  wire [3:0] \u_gpio.intr_hw.status ;
  wire [66:0] \u_gpio.reg2hw ;
  wire \u_gpio.rst_ni ;
  wire [108:0] \u_gpio.tl_i ;
  wire [65:0] \u_gpio.tl_o ;
  wire [14:0] \u_gpio.u_reg.addr_hit ;
  wire \u_gpio.u_reg.addrmiss ;
  wire \u_gpio.u_reg.clk_i ;
  wire [3:0] \u_gpio.u_reg.ctrl_en_input_filter_qs ;
  wire [3:0] \u_gpio.u_reg.ctrl_en_input_filter_wd ;
  wire \u_gpio.u_reg.ctrl_en_input_filter_we ;
  wire [3:0] \u_gpio.u_reg.data_in_qs ;
  wire \u_gpio.u_reg.devmode_i ;
  wire \u_gpio.u_reg.direct_oe_flds_we ;
  wire \u_gpio.u_reg.direct_oe_qe ;
  wire [3:0] \u_gpio.u_reg.direct_oe_qs ;
  wire [3:0] \u_gpio.u_reg.direct_oe_wd ;
  wire \u_gpio.u_reg.direct_oe_we ;
  wire \u_gpio.u_reg.direct_out_flds_we ;
  wire \u_gpio.u_reg.direct_out_qe ;
  wire [3:0] \u_gpio.u_reg.direct_out_qs ;
  wire [3:0] \u_gpio.u_reg.direct_out_wd ;
  wire \u_gpio.u_reg.direct_out_we ;
  wire [33:0] \u_gpio.u_reg.hw2reg ;
  wire [3:0] \u_gpio.u_reg.intr_ctrl_en_falling_qs ;
  wire [3:0] \u_gpio.u_reg.intr_ctrl_en_falling_wd ;
  wire \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  wire [3:0] \u_gpio.u_reg.intr_ctrl_en_lvlhigh_qs ;
  wire [3:0] \u_gpio.u_reg.intr_ctrl_en_lvlhigh_wd ;
  wire \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  wire [3:0] \u_gpio.u_reg.intr_ctrl_en_lvllow_qs ;
  wire [3:0] \u_gpio.u_reg.intr_ctrl_en_lvllow_wd ;
  wire \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  wire [3:0] \u_gpio.u_reg.intr_ctrl_en_rising_qs ;
  wire [3:0] \u_gpio.u_reg.intr_ctrl_en_rising_wd ;
  wire \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  wire [3:0] \u_gpio.u_reg.intr_enable_qs ;
  wire [3:0] \u_gpio.u_reg.intr_enable_wd ;
  wire \u_gpio.u_reg.intr_enable_we ;
  wire [3:0] \u_gpio.u_reg.intr_state_qs ;
  wire [3:0] \u_gpio.u_reg.intr_state_wd ;
  wire \u_gpio.u_reg.intr_state_we ;
  wire \u_gpio.u_reg.intr_test_flds_we ;
  wire \u_gpio.u_reg.intr_test_qe ;
  wire [3:0] \u_gpio.u_reg.intr_test_wd ;
  wire \u_gpio.u_reg.intr_test_we ;
  wire [1:0] \u_gpio.u_reg.masked_oe_lower_data_qs ;
  wire [1:0] \u_gpio.u_reg.masked_oe_lower_data_wd ;
  wire [1:0] \u_gpio.u_reg.masked_oe_lower_flds_we ;
  wire [1:0] \u_gpio.u_reg.masked_oe_lower_mask_qs ;
  wire [1:0] \u_gpio.u_reg.masked_oe_lower_mask_wd ;
  wire \u_gpio.u_reg.masked_oe_lower_qe ;
  wire \u_gpio.u_reg.masked_oe_lower_we ;
  wire [1:0] \u_gpio.u_reg.masked_oe_upper_data_qs ;
  wire [1:0] \u_gpio.u_reg.masked_oe_upper_data_wd ;
  wire [1:0] \u_gpio.u_reg.masked_oe_upper_flds_we ;
  wire [1:0] \u_gpio.u_reg.masked_oe_upper_mask_qs ;
  wire [1:0] \u_gpio.u_reg.masked_oe_upper_mask_wd ;
  wire \u_gpio.u_reg.masked_oe_upper_qe ;
  wire \u_gpio.u_reg.masked_oe_upper_we ;
  wire [1:0] \u_gpio.u_reg.masked_out_lower_data_qs ;
  wire [1:0] \u_gpio.u_reg.masked_out_lower_data_wd ;
  wire [1:0] \u_gpio.u_reg.masked_out_lower_flds_we ;
  wire [1:0] \u_gpio.u_reg.masked_out_lower_mask_wd ;
  wire \u_gpio.u_reg.masked_out_lower_qe ;
  wire \u_gpio.u_reg.masked_out_lower_we ;
  wire [1:0] \u_gpio.u_reg.masked_out_upper_data_qs ;
  wire [1:0] \u_gpio.u_reg.masked_out_upper_data_wd ;
  wire [1:0] \u_gpio.u_reg.masked_out_upper_flds_we ;
  wire [1:0] \u_gpio.u_reg.masked_out_upper_mask_wd ;
  wire \u_gpio.u_reg.masked_out_upper_qe ;
  wire \u_gpio.u_reg.masked_out_upper_we ;
  wire [66:0] \u_gpio.u_reg.reg2hw ;
  wire [5:0] \u_gpio.u_reg.reg_addr ;
  wire [3:0] \u_gpio.u_reg.reg_be ;
  wire \u_gpio.u_reg.reg_busy ;
  wire \u_gpio.u_reg.reg_error ;
  wire [31:0] \u_gpio.u_reg.reg_rdata ;
  wire [31:0] \u_gpio.u_reg.reg_rdata_next ;
  wire \u_gpio.u_reg.reg_re ;
  wire [31:0] \u_gpio.u_reg.reg_wdata ;
  wire \u_gpio.u_reg.reg_we ;
  wire \u_gpio.u_reg.rst_ni ;
  wire \u_gpio.u_reg.shadow_busy ;
  wire [108:0] \u_gpio.u_reg.tl_i ;
  wire [65:0] \u_gpio.u_reg.tl_o ;
  wire [65:0] \u_gpio.u_reg.tl_o_pre ;
  wire [65:0] \u_gpio.u_reg.tl_reg_d2h ;
  wire [108:0] \u_gpio.u_reg.tl_reg_h2d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.de ;
  reg [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.qe ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.qs ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wd ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.we ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_data ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_data_in.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_data_in.d ;
  wire \u_gpio.u_reg.u_data_in.de ;
  wire [3:0] \u_gpio.u_reg.u_data_in.ds ;
  reg [3:0] \u_gpio.u_reg.u_data_in.q ;
  wire \u_gpio.u_reg.u_data_in.qe ;
  wire [3:0] \u_gpio.u_reg.u_data_in.qs ;
  wire \u_gpio.u_reg.u_data_in.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_data_in.wd ;
  wire \u_gpio.u_reg.u_data_in.we ;
  wire [3:0] \u_gpio.u_reg.u_data_in.wr_data ;
  wire \u_gpio.u_reg.u_data_in.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_q ;
  wire [3:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_wd ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_we ;
  wire [3:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_direct_oe.d ;
  wire [3:0] \u_gpio.u_reg.u_direct_oe.ds ;
  wire [3:0] \u_gpio.u_reg.u_direct_oe.q ;
  wire \u_gpio.u_reg.u_direct_oe.qe ;
  wire [3:0] \u_gpio.u_reg.u_direct_oe.qs ;
  wire [3:0] \u_gpio.u_reg.u_direct_oe.wd ;
  wire \u_gpio.u_reg.u_direct_oe.we ;
  wire [3:0] \u_gpio.u_reg.u_direct_out.d ;
  wire [3:0] \u_gpio.u_reg.u_direct_out.ds ;
  wire [3:0] \u_gpio.u_reg.u_direct_out.q ;
  wire \u_gpio.u_reg.u_direct_out.qe ;
  wire [3:0] \u_gpio.u_reg.u_direct_out.qs ;
  wire [3:0] \u_gpio.u_reg.u_direct_out.wd ;
  wire \u_gpio.u_reg.u_direct_out.we ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.de ;
  reg [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.qe ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.de ;
  reg [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qe ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.de ;
  reg [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qe ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.de ;
  reg [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.qe ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_enable.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_intr_enable.d ;
  wire \u_gpio.u_reg.u_intr_enable.de ;
  reg [3:0] \u_gpio.u_reg.u_intr_enable.q ;
  wire \u_gpio.u_reg.u_intr_enable.qe ;
  wire [3:0] \u_gpio.u_reg.u_intr_enable.qs ;
  wire \u_gpio.u_reg.u_intr_enable.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_intr_enable.wd ;
  wire \u_gpio.u_reg.u_intr_enable.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_enable.wr_data ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_state.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_intr_state.d ;
  wire \u_gpio.u_reg.u_intr_state.de ;
  reg [3:0] \u_gpio.u_reg.u_intr_state.q ;
  wire \u_gpio.u_reg.u_intr_state.qe ;
  wire [3:0] \u_gpio.u_reg.u_intr_state.qs ;
  wire \u_gpio.u_reg.u_intr_state.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_intr_state.wd ;
  wire \u_gpio.u_reg.u_intr_state.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_state.wr_data ;
  wire \u_gpio.u_reg.u_intr_state.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_intr_test.d ;
  wire [3:0] \u_gpio.u_reg.u_intr_test.ds ;
  wire [3:0] \u_gpio.u_reg.u_intr_test.q ;
  wire \u_gpio.u_reg.u_intr_test.qe ;
  wire \u_gpio.u_reg.u_intr_test.qre ;
  wire [3:0] \u_gpio.u_reg.u_intr_test.qs ;
  wire \u_gpio.u_reg.u_intr_test.re ;
  wire [3:0] \u_gpio.u_reg.u_intr_test.wd ;
  wire \u_gpio.u_reg.u_intr_test.we ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_data.d ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_data.ds ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_data.q ;
  wire \u_gpio.u_reg.u_masked_oe_lower_data.qe ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_data.qs ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_data.wd ;
  wire \u_gpio.u_reg.u_masked_oe_lower_data.we ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_mask.d ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_mask.ds ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_mask.q ;
  wire \u_gpio.u_reg.u_masked_oe_lower_mask.qe ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_mask.qs ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_lower_mask.wd ;
  wire \u_gpio.u_reg.u_masked_oe_lower_mask.we ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_data.d ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_data.ds ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_data.q ;
  wire \u_gpio.u_reg.u_masked_oe_upper_data.qe ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_data.qs ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_data.wd ;
  wire \u_gpio.u_reg.u_masked_oe_upper_data.we ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_mask.d ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_mask.ds ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_mask.q ;
  wire \u_gpio.u_reg.u_masked_oe_upper_mask.qe ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_mask.qs ;
  wire [1:0] \u_gpio.u_reg.u_masked_oe_upper_mask.wd ;
  wire \u_gpio.u_reg.u_masked_oe_upper_mask.we ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_data.d ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_data.ds ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_data.q ;
  wire \u_gpio.u_reg.u_masked_out_lower_data.qe ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_data.qs ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_data.wd ;
  wire \u_gpio.u_reg.u_masked_out_lower_data.we ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_mask.d ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_mask.ds ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_mask.q ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.qe ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.qre ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_mask.qs ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.re ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_lower_mask.wd ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.we ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_data.d ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_data.ds ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_data.q ;
  wire \u_gpio.u_reg.u_masked_out_upper_data.qe ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_data.qs ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_data.wd ;
  wire \u_gpio.u_reg.u_masked_out_upper_data.we ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_mask.d ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_mask.ds ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_mask.q ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.qe ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.qre ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_mask.qs ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.re ;
  wire [1:0] \u_gpio.u_reg.u_masked_out_upper_mask.wd ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.we ;
  wire \u_gpio.u_reg.u_reg_if.a_ack ;
  wire \u_gpio.u_reg.u_reg_if.addr_align_err ;
  wire [5:0] \u_gpio.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.be_o ;
  wire \u_gpio.u_reg.u_reg_if.busy_i ;
  wire \u_gpio.u_reg.u_reg_if.clk_i ;
  wire \u_gpio.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_gpio.u_reg.u_reg_if.err_internal ;
  wire \u_gpio.u_reg.u_reg_if.error ;
  wire \u_gpio.u_reg.u_reg_if.error_i ;
  reg \u_gpio.u_reg.u_reg_if.error_q ;
  wire \u_gpio.u_reg.u_reg_if.intg_error ;
  wire \u_gpio.u_reg.u_reg_if.intg_error_o ;
  reg \u_gpio.u_reg.u_reg_if.outstanding_q ;
  wire \u_gpio.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_gpio.u_reg.u_reg_if.rdata_q ;
  wire \u_gpio.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_gpio.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_gpio.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_gpio.u_reg.u_reg_if.rspop_q ;
  wire \u_gpio.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_gpio.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.tl_o_pre ;
  wire \u_gpio.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.u_err.mask ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_gpio.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_gpio.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.wdata_o ;
  wire \u_gpio.u_reg.u_reg_if.we_o ;
  wire \u_gpio.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_gpio.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_gpio.u_reg.wr_err ;
  wire [1:0] \u_pwm.cio_pwm_en_o ;
  wire [1:0] \u_pwm.cio_pwm_o ;
  wire \u_pwm.clk_i ;
  wire [220:0] \u_pwm.reg2hw ;
  wire \u_pwm.rst_ni ;
  wire [108:0] \u_pwm.tl_i ;
  wire [65:0] \u_pwm.tl_o ;
  wire [26:0] \u_pwm.u_pwm_core.beat_ctr_d ;
  wire \u_pwm.u_pwm_core.beat_ctr_en ;
  reg [26:0] \u_pwm.u_pwm_core.beat_ctr_q ;
  wire \u_pwm.u_pwm_core.beat_end ;
  wire \u_pwm.u_pwm_core.clk_core_i ;
  wire [26:0] \u_pwm.u_pwm_core.clk_div ;
  wire [1:0] \u_pwm.u_pwm_core.clr_blink_cntr ;
  wire \u_pwm.u_pwm_core.clr_phase_cntr ;
  wire \u_pwm.u_pwm_core.cntr_en ;
  wire \u_pwm.u_pwm_core.cycle_end ;
  wire [3:0] \u_pwm.u_pwm_core.dc_resn ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_d ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_en_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_x_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_y_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_sum ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clk_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_d ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask ;
  wire [3:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_resn_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_a_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_actual ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_b_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_blink ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_htbt ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_d ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_en_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.invert_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pattern_repeat ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_ctr_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_masked ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_i ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.rst_ni ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.unused_sum ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_ctr_d ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_ctr_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_en_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_param_x_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_param_y_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_sum ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clk_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.cycle_end_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_d ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_end ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_end_q ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_mask ;
  wire [3:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_resn_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_wrap ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_wrap_q ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_a_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_actual ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_b_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_blink ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_htbt ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_masked ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_ctr_d ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_ctr_q ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_direction ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_en_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.invert_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.neg_htbt ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.off_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.off_phase_exceeded ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.on_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.on_phase_exceeded ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pattern_repeat ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.phase_ctr_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.phase_delay_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.phase_delay_masked ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.phase_wrap ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pos_htbt ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_en_i ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_en_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_int ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_o ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.rst_ni ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.unused_sum ;
  wire [3:0] \u_pwm.u_pwm_core.lshift ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_d ;
  wire \u_pwm.u_pwm_core.phase_ctr_en ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_incr ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_next ;
  wire \u_pwm.u_pwm_core.phase_ctr_overflow ;
  reg [15:0] \u_pwm.u_pwm_core.phase_ctr_q ;
  wire [1:0] \u_pwm.u_pwm_core.pwm_o ;
  wire [220:0] \u_pwm.u_pwm_core.reg2hw ;
  wire \u_pwm.u_pwm_core.rst_core_ni ;
  wire \u_pwm.u_reg._blink_param_0_gated_we ;
  wire [31:0] \u_pwm.u_reg._blink_param_0_qs ;
  wire \u_pwm.u_reg._blink_param_0_regwen ;
  wire [31:0] \u_pwm.u_reg._blink_param_0_wdata ;
  wire \u_pwm.u_reg._blink_param_0_we ;
  wire [15:0] \u_pwm.u_reg._blink_param_0_x_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._blink_param_0_y_0_qs_int ;
  wire \u_pwm.u_reg._blink_param_1_gated_we ;
  wire [31:0] \u_pwm.u_reg._blink_param_1_qs ;
  wire \u_pwm.u_reg._blink_param_1_regwen ;
  wire [31:0] \u_pwm.u_reg._blink_param_1_wdata ;
  wire \u_pwm.u_reg._blink_param_1_we ;
  wire [15:0] \u_pwm.u_reg._blink_param_1_x_1_qs_int ;
  wire [15:0] \u_pwm.u_reg._blink_param_1_y_1_qs_int ;
  wire [26:0] \u_pwm.u_reg._cfg_clk_div_qs_int ;
  wire \u_pwm.u_reg._cfg_cntr_en_qs_int ;
  wire [3:0] \u_pwm.u_reg._cfg_dc_resn_qs_int ;
  wire \u_pwm.u_reg._cfg_gated_we ;
  wire [31:0] \u_pwm.u_reg._cfg_qs ;
  wire \u_pwm.u_reg._cfg_regwen ;
  wire [31:0] \u_pwm.u_reg._cfg_wdata ;
  wire \u_pwm.u_reg._cfg_we ;
  wire [15:0] \u_pwm.u_reg._duty_cycle_0_a_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._duty_cycle_0_b_0_qs_int ;
  wire \u_pwm.u_reg._duty_cycle_0_gated_we ;
  wire [31:0] \u_pwm.u_reg._duty_cycle_0_qs ;
  wire \u_pwm.u_reg._duty_cycle_0_regwen ;
  wire [31:0] \u_pwm.u_reg._duty_cycle_0_wdata ;
  wire \u_pwm.u_reg._duty_cycle_0_we ;
  wire [15:0] \u_pwm.u_reg._duty_cycle_1_a_1_qs_int ;
  wire [15:0] \u_pwm.u_reg._duty_cycle_1_b_1_qs_int ;
  wire \u_pwm.u_reg._duty_cycle_1_gated_we ;
  wire [31:0] \u_pwm.u_reg._duty_cycle_1_qs ;
  wire \u_pwm.u_reg._duty_cycle_1_regwen ;
  wire [31:0] \u_pwm.u_reg._duty_cycle_1_wdata ;
  wire \u_pwm.u_reg._duty_cycle_1_we ;
  wire \u_pwm.u_reg._invert_gated_we ;
  wire \u_pwm.u_reg._invert_invert_0_qs_int ;
  wire \u_pwm.u_reg._invert_invert_1_qs_int ;
  wire [1:0] \u_pwm.u_reg._invert_qs ;
  wire \u_pwm.u_reg._invert_regwen ;
  wire [1:0] \u_pwm.u_reg._invert_wdata ;
  wire \u_pwm.u_reg._invert_we ;
  wire \u_pwm.u_reg._pwm_en_en_0_qs_int ;
  wire \u_pwm.u_reg._pwm_en_en_1_qs_int ;
  wire \u_pwm.u_reg._pwm_en_gated_we ;
  wire [1:0] \u_pwm.u_reg._pwm_en_qs ;
  wire \u_pwm.u_reg._pwm_en_regwen ;
  wire [1:0] \u_pwm.u_reg._pwm_en_wdata ;
  wire \u_pwm.u_reg._pwm_en_we ;
  wire \u_pwm.u_reg._pwm_param_0_blink_en_0_qs_int ;
  wire \u_pwm.u_reg._pwm_param_0_gated_we ;
  wire \u_pwm.u_reg._pwm_param_0_htbt_en_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._pwm_param_0_phase_delay_0_qs_int ;
  wire [31:0] \u_pwm.u_reg._pwm_param_0_qs ;
  wire \u_pwm.u_reg._pwm_param_0_regwen ;
  wire [31:0] \u_pwm.u_reg._pwm_param_0_wdata ;
  wire \u_pwm.u_reg._pwm_param_0_we ;
  wire \u_pwm.u_reg._pwm_param_1_blink_en_1_qs_int ;
  wire \u_pwm.u_reg._pwm_param_1_gated_we ;
  wire \u_pwm.u_reg._pwm_param_1_htbt_en_1_qs_int ;
  wire [15:0] \u_pwm.u_reg._pwm_param_1_phase_delay_1_qs_int ;
  wire [31:0] \u_pwm.u_reg._pwm_param_1_qs ;
  wire \u_pwm.u_reg._pwm_param_1_regwen ;
  wire [31:0] \u_pwm.u_reg._pwm_param_1_wdata ;
  wire \u_pwm.u_reg._pwm_param_1_we ;
  wire [9:0] \u_pwm.u_reg.addr_hit ;
  wire \u_pwm.u_reg.addrmiss ;
  wire \u_pwm.u_reg.blink_param_0_busy ;
  wire [1:0] \u_pwm.u_reg.blink_param_0_flds_we ;
  wire \u_pwm.u_reg.blink_param_0_qe ;
  wire [31:0] \u_pwm.u_reg.blink_param_0_qs ;
  wire \u_pwm.u_reg.blink_param_0_we ;
  wire \u_pwm.u_reg.blink_param_1_busy ;
  wire [1:0] \u_pwm.u_reg.blink_param_1_flds_we ;
  wire \u_pwm.u_reg.blink_param_1_qe ;
  wire [31:0] \u_pwm.u_reg.blink_param_1_qs ;
  wire \u_pwm.u_reg.blink_param_1_we ;
  wire \u_pwm.u_reg.cfg_busy ;
  wire [2:0] \u_pwm.u_reg.cfg_flds_we ;
  wire \u_pwm.u_reg.cfg_qe ;
  wire [31:0] \u_pwm.u_reg.cfg_qs ;
  wire \u_pwm.u_reg.cfg_we ;
  wire \u_pwm.u_reg.clk_i ;
  wire \u_pwm.u_reg.devmode_i ;
  wire \u_pwm.u_reg.duty_cycle_0_busy ;
  wire [1:0] \u_pwm.u_reg.duty_cycle_0_flds_we ;
  wire \u_pwm.u_reg.duty_cycle_0_qe ;
  wire [31:0] \u_pwm.u_reg.duty_cycle_0_qs ;
  wire \u_pwm.u_reg.duty_cycle_0_we ;
  wire \u_pwm.u_reg.duty_cycle_1_busy ;
  wire [1:0] \u_pwm.u_reg.duty_cycle_1_flds_we ;
  wire \u_pwm.u_reg.duty_cycle_1_qe ;
  wire [31:0] \u_pwm.u_reg.duty_cycle_1_qs ;
  wire \u_pwm.u_reg.duty_cycle_1_we ;
  wire \u_pwm.u_reg.invert_busy ;
  wire [1:0] \u_pwm.u_reg.invert_flds_we ;
  wire \u_pwm.u_reg.invert_qe ;
  wire [1:0] \u_pwm.u_reg.invert_qs ;
  wire \u_pwm.u_reg.invert_we ;
  wire \u_pwm.u_reg.pwm_en_busy ;
  wire [1:0] \u_pwm.u_reg.pwm_en_flds_we ;
  wire \u_pwm.u_reg.pwm_en_qe ;
  wire [1:0] \u_pwm.u_reg.pwm_en_qs ;
  wire \u_pwm.u_reg.pwm_en_we ;
  wire \u_pwm.u_reg.pwm_param_0_busy ;
  wire [2:0] \u_pwm.u_reg.pwm_param_0_flds_we ;
  wire \u_pwm.u_reg.pwm_param_0_qe ;
  wire [31:0] \u_pwm.u_reg.pwm_param_0_qs ;
  wire \u_pwm.u_reg.pwm_param_0_we ;
  wire \u_pwm.u_reg.pwm_param_1_busy ;
  wire [2:0] \u_pwm.u_reg.pwm_param_1_flds_we ;
  wire \u_pwm.u_reg.pwm_param_1_qe ;
  wire [31:0] \u_pwm.u_reg.pwm_param_1_qs ;
  wire \u_pwm.u_reg.pwm_param_1_we ;
  wire [220:0] \u_pwm.u_reg.reg2hw ;
  wire [5:0] \u_pwm.u_reg.reg_addr ;
  wire [3:0] \u_pwm.u_reg.reg_be ;
  wire \u_pwm.u_reg.reg_busy ;
  wire \u_pwm.u_reg.reg_busy_sel ;
  wire \u_pwm.u_reg.reg_error ;
  wire [31:0] \u_pwm.u_reg.reg_rdata ;
  wire [31:0] \u_pwm.u_reg.reg_rdata_next ;
  wire \u_pwm.u_reg.reg_re ;
  wire [31:0] \u_pwm.u_reg.reg_wdata ;
  wire \u_pwm.u_reg.reg_we ;
  wire \u_pwm.u_reg.regwen_qs ;
  wire \u_pwm.u_reg.regwen_wd ;
  wire \u_pwm.u_reg.regwen_we ;
  wire \u_pwm.u_reg.rst_ni ;
  wire \u_pwm.u_reg.shadow_busy ;
  wire [108:0] \u_pwm.u_reg.tl_i ;
  wire [65:0] \u_pwm.u_reg.tl_o ;
  wire [65:0] \u_pwm.u_reg.tl_o_pre ;
  wire [65:0] \u_pwm.u_reg.tl_reg_d2h ;
  wire [108:0] \u_pwm.u_reg.tl_reg_h2d ;
  wire \u_pwm.u_reg.u_blink_param0_qe.clk_i ;
  wire \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  reg \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  wire \u_pwm.u_reg.u_blink_param0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param1_qe.clk_i ;
  wire \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  reg \u_pwm.u_reg.u_blink_param1_qe.q_o ;
  wire \u_pwm.u_reg.u_blink_param1_qe.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.dst_req ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.src_ack ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_blink_param_0_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.src_req ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_blink_param_0_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_blink_param_0_x_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.d ;
  wire \u_pwm.u_reg.u_blink_param_0_x_0.de ;
  reg [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.q ;
  wire \u_pwm.u_reg.u_blink_param_0_x_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.qs ;
  wire \u_pwm.u_reg.u_blink_param_0_x_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.wd ;
  wire \u_pwm.u_reg.u_blink_param_0_x_0.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_0_x_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_blink_param_0_y_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.d ;
  wire \u_pwm.u_reg.u_blink_param_0_y_0.de ;
  reg [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.q ;
  wire \u_pwm.u_reg.u_blink_param_0_y_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.qs ;
  wire \u_pwm.u_reg.u_blink_param_0_y_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.wd ;
  wire \u_pwm.u_reg.u_blink_param_0_y_0.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_0_y_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.dst_req ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.src_ack ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_blink_param_1_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.src_req ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_blink_param_1_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_blink_param_1_x_1.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.d ;
  wire \u_pwm.u_reg.u_blink_param_1_x_1.de ;
  reg [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.q ;
  wire \u_pwm.u_reg.u_blink_param_1_x_1.qe ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.qs ;
  wire \u_pwm.u_reg.u_blink_param_1_x_1.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.wd ;
  wire \u_pwm.u_reg.u_blink_param_1_x_1.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_1_x_1.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_blink_param_1_y_1.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.d ;
  wire \u_pwm.u_reg.u_blink_param_1_y_1.de ;
  reg [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.q ;
  wire \u_pwm.u_reg.u_blink_param_1_y_1.qe ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.qs ;
  wire \u_pwm.u_reg.u_blink_param_1_y_1.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.wd ;
  wire \u_pwm.u_reg.u_blink_param_1_y_1.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_1_y_1.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg0_qe.clk_i ;
  wire \u_pwm.u_reg.u_cfg0_qe.d_i ;
  reg \u_pwm.u_reg.u_cfg0_qe.q_o ;
  wire \u_pwm.u_reg.u_cfg0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_cfg_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_req ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_cfg_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_cfg_clk_div.clk_i ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.d ;
  wire \u_pwm.u_reg.u_cfg_clk_div.de ;
  reg [26:0] \u_pwm.u_reg.u_cfg_clk_div.q ;
  wire \u_pwm.u_reg.u_cfg_clk_div.qe ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.qs ;
  wire \u_pwm.u_reg.u_cfg_clk_div.rst_ni ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wd ;
  wire \u_pwm.u_reg.u_cfg_clk_div.we ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_data ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.de ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.gen_w.unused_q ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.q ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.we ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.d ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.de ;
  reg \u_pwm.u_reg.u_cfg_cntr_en.q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.qe ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.qs ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wd ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.we ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_data ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.clk_i ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.d ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.de ;
  reg [3:0] \u_pwm.u_reg.u_cfg_dc_resn.q ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.qe ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.qs ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.rst_ni ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wd ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.we ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_data ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.de ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.q ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.we ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle0_qe.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle1_qe.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle1_qe.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle1_qe.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_a_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.d ;
  wire \u_pwm.u_reg.u_duty_cycle_0_a_0.de ;
  reg [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  wire \u_pwm.u_reg.u_duty_cycle_0_a_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.qs ;
  wire \u_pwm.u_reg.u_duty_cycle_0_a_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_0_a_0.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle_0_b_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.d ;
  wire \u_pwm.u_reg.u_duty_cycle_0_b_0.de ;
  reg [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  wire \u_pwm.u_reg.u_duty_cycle_0_b_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.qs ;
  wire \u_pwm.u_reg.u_duty_cycle_0_b_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_0_b_0.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.src_ack ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_duty_cycle_0_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.src_req ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_a_1.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.d ;
  wire \u_pwm.u_reg.u_duty_cycle_1_a_1.de ;
  reg [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  wire \u_pwm.u_reg.u_duty_cycle_1_a_1.qe ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.qs ;
  wire \u_pwm.u_reg.u_duty_cycle_1_a_1.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_1_a_1.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle_1_b_1.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.d ;
  wire \u_pwm.u_reg.u_duty_cycle_1_b_1.de ;
  reg [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  wire \u_pwm.u_reg.u_duty_cycle_1_b_1.qe ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.qs ;
  wire \u_pwm.u_reg.u_duty_cycle_1_b_1.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_1_b_1.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.src_ack ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_duty_cycle_1_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.src_req ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_invert0_qe.clk_i ;
  wire \u_pwm.u_reg.u_invert0_qe.d_i ;
  reg \u_pwm.u_reg.u_invert0_qe.q_o ;
  wire \u_pwm.u_reg.u_invert0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_invert_cdc.clk_src_i ;
  wire [1:0] \u_pwm.u_reg.u_invert_cdc.dst_ds_i ;
  wire [1:0] \u_pwm.u_reg.u_invert_cdc.dst_qs ;
  wire [1:0] \u_pwm.u_reg.u_invert_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_req ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_update_i ;
  wire [1:0] \u_pwm.u_reg.u_invert_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_invert_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.src_ack ;
  wire \u_pwm.u_reg.u_invert_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_invert_cdc.src_busy_q ;
  reg [1:0] \u_pwm.u_reg.u_invert_cdc.src_q ;
  wire [1:0] \u_pwm.u_reg.u_invert_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_invert_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_invert_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_invert_cdc.src_req ;
  wire \u_pwm.u_reg.u_invert_cdc.src_update ;
  wire [1:0] \u_pwm.u_reg.u_invert_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_invert_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_invert_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.clk_src_i ;
  wire [1:0] \u_pwm.u_reg.u_invert_cdc.u_arb.dst_ds_i ;
  wire [1:0] \u_pwm.u_reg.u_invert_cdc.u_arb.dst_qs_i ;
  wire [1:0] \u_pwm.u_reg.u_invert_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_invert_invert_0.clk_i ;
  wire \u_pwm.u_reg.u_invert_invert_0.d ;
  wire \u_pwm.u_reg.u_invert_invert_0.de ;
  reg \u_pwm.u_reg.u_invert_invert_0.q ;
  wire \u_pwm.u_reg.u_invert_invert_0.qe ;
  wire \u_pwm.u_reg.u_invert_invert_0.qs ;
  wire \u_pwm.u_reg.u_invert_invert_0.rst_ni ;
  wire \u_pwm.u_reg.u_invert_invert_0.wd ;
  wire \u_pwm.u_reg.u_invert_invert_0.we ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_data ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_en ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_invert_invert_1.clk_i ;
  wire \u_pwm.u_reg.u_invert_invert_1.d ;
  wire \u_pwm.u_reg.u_invert_invert_1.de ;
  reg \u_pwm.u_reg.u_invert_invert_1.q ;
  wire \u_pwm.u_reg.u_invert_invert_1.qe ;
  wire \u_pwm.u_reg.u_invert_invert_1.qs ;
  wire \u_pwm.u_reg.u_invert_invert_1.rst_ni ;
  wire \u_pwm.u_reg.u_invert_invert_1.wd ;
  wire \u_pwm.u_reg.u_invert_invert_1.we ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_data ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_en ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  reg \u_pwm.u_reg.u_pwm_en0_qe.q_o ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.clk_src_i ;
  wire [1:0] \u_pwm.u_reg.u_pwm_en_cdc.dst_ds_i ;
  wire [1:0] \u_pwm.u_reg.u_pwm_en_cdc.dst_qs ;
  wire [1:0] \u_pwm.u_reg.u_pwm_en_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_update_i ;
  wire [1:0] \u_pwm.u_reg.u_pwm_en_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  reg [1:0] \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  wire [1:0] \u_pwm.u_reg.u_pwm_en_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_req ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_update ;
  wire [1:0] \u_pwm.u_reg.u_pwm_en_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_src_i ;
  wire [1:0] \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_ds_i ;
  wire [1:0] \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_i ;
  wire [1:0] \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.d ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.de ;
  reg \u_pwm.u_reg.u_pwm_en_en_0.q ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.qe ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.qs ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wd ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.we ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.d ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.de ;
  reg \u_pwm.u_reg.u_pwm_en_en_1.q ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.qe ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.qs ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wd ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.we ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  reg \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param1_qe.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  reg \u_pwm.u_reg.u_pwm_param1_qe.q_o ;
  wire \u_pwm.u_reg.u_pwm_param1_qe.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.de ;
  reg \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.qe ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.we ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.src_ack ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_pwm_param_0_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.src_req ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_pwm_param_0_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.de ;
  reg \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.qe ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.we ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.de ;
  reg [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.d ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.de ;
  reg \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.qe ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.qs ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wd ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.we ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.src_ack ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_pwm_param_1_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.src_req ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_pwm_param_1_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.d ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.de ;
  reg \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.qe ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.qs ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wd ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.we ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.d ;
  wire \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.de ;
  reg [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q ;
  wire \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.qe ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.qs ;
  wire \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wd ;
  wire \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_reg_if.a_ack ;
  wire \u_pwm.u_reg.u_reg_if.addr_align_err ;
  wire [5:0] \u_pwm.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.be_o ;
  wire \u_pwm.u_reg.u_reg_if.busy_i ;
  wire \u_pwm.u_reg.u_reg_if.clk_i ;
  wire \u_pwm.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_pwm.u_reg.u_reg_if.err_internal ;
  wire \u_pwm.u_reg.u_reg_if.error ;
  wire \u_pwm.u_reg.u_reg_if.error_i ;
  reg \u_pwm.u_reg.u_reg_if.error_q ;
  wire \u_pwm.u_reg.u_reg_if.intg_error ;
  wire \u_pwm.u_reg.u_reg_if.intg_error_o ;
  reg \u_pwm.u_reg.u_reg_if.outstanding_q ;
  wire \u_pwm.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_pwm.u_reg.u_reg_if.rdata_q ;
  wire \u_pwm.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_pwm.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_pwm.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_pwm.u_reg.u_reg_if.rspop_q ;
  wire \u_pwm.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_pwm.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.tl_o_pre ;
  wire \u_pwm.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.u_err.mask ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_full ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_get ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_pwm.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_pwm.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.wdata_o ;
  wire \u_pwm.u_reg.u_reg_if.we_o ;
  wire \u_pwm.u_reg.u_reg_if.wr_req ;
  wire \u_pwm.u_reg.u_regwen.clk_i ;
  wire \u_pwm.u_reg.u_regwen.d ;
  wire \u_pwm.u_reg.u_regwen.de ;
  reg \u_pwm.u_reg.u_regwen.q ;
  wire \u_pwm.u_reg.u_regwen.qe ;
  wire \u_pwm.u_reg.u_regwen.qs ;
  wire \u_pwm.u_reg.u_regwen.rst_ni ;
  wire \u_pwm.u_reg.u_regwen.wd ;
  wire \u_pwm.u_reg.u_regwen.we ;
  wire \u_pwm.u_reg.u_regwen.wr_data ;
  wire \u_pwm.u_reg.u_regwen.wr_en ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_en ;
  wire [65:0] \u_pwm.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_pwm.u_reg.wr_err ;
  wire \u_rv_timer.active ;
  wire \u_rv_timer.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_core.active ;
  wire \u_rv_timer.gen_harts[0].u_core.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_core.intr ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtime ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtime_d ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtimecmp ;
  wire [11:0] \u_rv_timer.gen_harts[0].u_core.prescaler ;
  wire \u_rv_timer.gen_harts[0].u_core.rst_ni ;
  wire [7:0] \u_rv_timer.gen_harts[0].u_core.step ;
  wire \u_rv_timer.gen_harts[0].u_core.tick ;
  reg [11:0] \u_rv_timer.gen_harts[0].u_core.tick_count ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_d_o ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_de_o ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_enable_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_state_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.rst_ni ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.status ;
  wire [67:0] \u_rv_timer.hw2reg ;
  wire \u_rv_timer.intr_timer_en ;
  wire \u_rv_timer.intr_timer_set ;
  wire \u_rv_timer.intr_timer_state_d ;
  wire \u_rv_timer.intr_timer_state_de ;
  wire \u_rv_timer.intr_timer_state_q ;
  wire \u_rv_timer.intr_timer_test_q ;
  wire \u_rv_timer.intr_timer_test_qe ;
  wire [63:0] \u_rv_timer.mtime ;
  wire [63:0] \u_rv_timer.mtime_d ;
  wire [63:0] \u_rv_timer.mtimecmp ;
  wire \u_rv_timer.mtimecmp_update ;
  wire [11:0] \u_rv_timer.prescaler ;
  wire [154:0] \u_rv_timer.reg2hw ;
  wire \u_rv_timer.rst_ni ;
  wire [7:0] \u_rv_timer.step ;
  wire \u_rv_timer.tick ;
  wire [108:0] \u_rv_timer.tl_i ;
  wire [65:0] \u_rv_timer.tl_o ;
  wire [8:0] \u_rv_timer.u_reg.addr_hit ;
  wire \u_rv_timer.u_reg.addrmiss ;
  wire [11:0] \u_rv_timer.u_reg.cfg0_prescale_qs ;
  wire [11:0] \u_rv_timer.u_reg.cfg0_prescale_wd ;
  wire [7:0] \u_rv_timer.u_reg.cfg0_step_qs ;
  wire [7:0] \u_rv_timer.u_reg.cfg0_step_wd ;
  wire \u_rv_timer.u_reg.cfg0_we ;
  wire \u_rv_timer.u_reg.clk_i ;
  wire \u_rv_timer.u_reg.compare_lower0_0_flds_we ;
  wire \u_rv_timer.u_reg.compare_lower0_0_qe ;
  wire [31:0] \u_rv_timer.u_reg.compare_lower0_0_qs ;
  wire [31:0] \u_rv_timer.u_reg.compare_lower0_0_wd ;
  wire \u_rv_timer.u_reg.compare_lower0_0_we ;
  wire \u_rv_timer.u_reg.compare_upper0_0_flds_we ;
  wire \u_rv_timer.u_reg.compare_upper0_0_qe ;
  wire [31:0] \u_rv_timer.u_reg.compare_upper0_0_qs ;
  wire [31:0] \u_rv_timer.u_reg.compare_upper0_0_wd ;
  wire \u_rv_timer.u_reg.compare_upper0_0_we ;
  wire \u_rv_timer.u_reg.ctrl_qs ;
  wire \u_rv_timer.u_reg.ctrl_wd ;
  wire \u_rv_timer.u_reg.ctrl_we ;
  wire \u_rv_timer.u_reg.devmode_i ;
  wire [67:0] \u_rv_timer.u_reg.hw2reg ;
  wire \u_rv_timer.u_reg.intr_enable0_qs ;
  wire \u_rv_timer.u_reg.intr_enable0_wd ;
  wire \u_rv_timer.u_reg.intr_enable0_we ;
  wire \u_rv_timer.u_reg.intr_state0_qs ;
  wire \u_rv_timer.u_reg.intr_state0_wd ;
  wire \u_rv_timer.u_reg.intr_state0_we ;
  wire \u_rv_timer.u_reg.intr_test0_flds_we ;
  wire \u_rv_timer.u_reg.intr_test0_qe ;
  wire \u_rv_timer.u_reg.intr_test0_wd ;
  wire \u_rv_timer.u_reg.intr_test0_we ;
  wire [154:0] \u_rv_timer.u_reg.reg2hw ;
  wire [8:0] \u_rv_timer.u_reg.reg_addr ;
  wire [3:0] \u_rv_timer.u_reg.reg_be ;
  wire \u_rv_timer.u_reg.reg_busy ;
  wire \u_rv_timer.u_reg.reg_error ;
  wire [31:0] \u_rv_timer.u_reg.reg_rdata ;
  wire [31:0] \u_rv_timer.u_reg.reg_rdata_next ;
  wire \u_rv_timer.u_reg.reg_re ;
  wire [31:0] \u_rv_timer.u_reg.reg_wdata ;
  wire \u_rv_timer.u_reg.reg_we ;
  wire \u_rv_timer.u_reg.rst_ni ;
  wire \u_rv_timer.u_reg.shadow_busy ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_lower0_qs ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_lower0_wd ;
  wire \u_rv_timer.u_reg.timer_v_lower0_we ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_upper0_qs ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_upper0_wd ;
  wire \u_rv_timer.u_reg.timer_v_upper0_we ;
  wire [108:0] \u_rv_timer.u_reg.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.tl_o ;
  wire [65:0] \u_rv_timer.u_reg.tl_o_pre ;
  wire [65:0] \u_rv_timer.u_reg.tl_reg_d2h ;
  wire [108:0] \u_rv_timer.u_reg.tl_reg_h2d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.clk_i ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.de ;
  reg [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.qe ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.qs ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.rst_ni ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.we ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.de ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.gen_w.unused_q ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.q ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.we ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_cfg0_step.clk_i ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.d ;
  wire \u_rv_timer.u_reg.u_cfg0_step.de ;
  reg [7:0] \u_rv_timer.u_reg.u_cfg0_step.q ;
  wire \u_rv_timer.u_reg.u_cfg0_step.qe ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.qs ;
  wire \u_rv_timer.u_reg.u_cfg0_step.rst_ni ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_step.we ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.de ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.gen_w.unused_q ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.q ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.we ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.d ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.qs ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wd ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.clk_i ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  reg \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.rst_ni ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.d ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.qs ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wd ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.clk_i ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  reg \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.rst_ni ;
  wire \u_rv_timer.u_reg.u_ctrl.clk_i ;
  wire \u_rv_timer.u_reg.u_ctrl.d ;
  wire \u_rv_timer.u_reg.u_ctrl.de ;
  reg \u_rv_timer.u_reg.u_ctrl.q ;
  wire \u_rv_timer.u_reg.u_ctrl.qe ;
  wire \u_rv_timer.u_reg.u_ctrl.qs ;
  wire \u_rv_timer.u_reg.u_ctrl.rst_ni ;
  wire \u_rv_timer.u_reg.u_ctrl.wd ;
  wire \u_rv_timer.u_reg.u_ctrl.we ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_data ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.gen_w.unused_q ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_enable0.clk_i ;
  wire \u_rv_timer.u_reg.u_intr_enable0.d ;
  wire \u_rv_timer.u_reg.u_intr_enable0.de ;
  reg \u_rv_timer.u_reg.u_intr_enable0.q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.qe ;
  wire \u_rv_timer.u_reg.u_intr_enable0.qs ;
  wire \u_rv_timer.u_reg.u_intr_enable0.rst_ni ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wd ;
  wire \u_rv_timer.u_reg.u_intr_enable0.we ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_state0.clk_i ;
  wire \u_rv_timer.u_reg.u_intr_state0.d ;
  wire \u_rv_timer.u_reg.u_intr_state0.de ;
  reg \u_rv_timer.u_reg.u_intr_state0.q ;
  wire \u_rv_timer.u_reg.u_intr_state0.qe ;
  wire \u_rv_timer.u_reg.u_intr_state0.qs ;
  wire \u_rv_timer.u_reg.u_intr_state0.rst_ni ;
  wire \u_rv_timer.u_reg.u_intr_state0.wd ;
  wire \u_rv_timer.u_reg.u_intr_state0.we ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_test0.d ;
  wire \u_rv_timer.u_reg.u_intr_test0.ds ;
  wire \u_rv_timer.u_reg.u_intr_test0.q ;
  wire \u_rv_timer.u_reg.u_intr_test0.qe ;
  wire \u_rv_timer.u_reg.u_intr_test0.qre ;
  wire \u_rv_timer.u_reg.u_intr_test0.qs ;
  wire \u_rv_timer.u_reg.u_intr_test0.re ;
  wire \u_rv_timer.u_reg.u_intr_test0.wd ;
  wire \u_rv_timer.u_reg.u_intr_test0.we ;
  wire \u_rv_timer.u_reg.u_reg_if.a_ack ;
  wire \u_rv_timer.u_reg.u_reg_if.addr_align_err ;
  wire [8:0] \u_rv_timer.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.be_o ;
  wire \u_rv_timer.u_reg.u_reg_if.busy_i ;
  wire \u_rv_timer.u_reg.u_reg_if.clk_i ;
  wire \u_rv_timer.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_rv_timer.u_reg.u_reg_if.err_internal ;
  wire \u_rv_timer.u_reg.u_reg_if.error ;
  wire \u_rv_timer.u_reg.u_reg_if.error_i ;
  reg \u_rv_timer.u_reg.u_reg_if.error_q ;
  wire \u_rv_timer.u_reg.u_reg_if.intg_error ;
  wire \u_rv_timer.u_reg.u_reg_if.intg_error_o ;
  reg \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  wire \u_rv_timer.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_rv_timer.u_reg.u_reg_if.rdata_q ;
  wire \u_rv_timer.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_rv_timer.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_rv_timer.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_rv_timer.u_reg.u_reg_if.rspop_q ;
  wire \u_rv_timer.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_rv_timer.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.tl_o_pre ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.u_err.mask ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_full ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_get ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_rv_timer.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.wdata_o ;
  wire \u_rv_timer.u_reg.u_reg_if.we_o ;
  wire \u_rv_timer.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_rv_timer.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.d ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.qs ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.d ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.qs ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.wr_err ;
  wire [31:0] \u_uart.addr_o ;
  wire [3:0] \u_uart.be_o ;
  wire \u_uart.cio_rx_i ;
  wire \u_uart.cio_tx_en_o ;
  wire \u_uart.cio_tx_o ;
  wire \u_uart.clk_i ;
  wire \u_uart.core_tx ;
  wire \u_uart.err_i ;
  wire \u_uart.gnt_i ;
  wire [71:0] \u_uart.hw2reg ;
  wire [31:0] \u_uart.rdata_i ;
  wire [131:0] \u_uart.reg2hw ;
  wire \u_uart.req_o ;
  wire \u_uart.rst_ni ;
  wire [7:0] \u_uart.rx_data_o ;
  wire \u_uart.rx_pop_i ;
  wire \u_uart.rx_valid_o ;
  wire [108:0] \u_uart.tl_i ;
  wire [65:0] \u_uart.tl_o ;
  wire [31:0] \u_uart.u_bridge.addr_o ;
  reg [31:0] \u_uart.u_bridge.addr_q ;
  wire [3:0] \u_uart.u_bridge.be_d ;
  wire [3:0] \u_uart.u_bridge.be_o ;
  reg [3:0] \u_uart.u_bridge.be_q ;
  reg [7:0] \u_uart.u_bridge.bebyte_q ;
  wire \u_uart.u_bridge.clk_i ;
  wire \u_uart.u_bridge.err_i ;
  wire \u_uart.u_bridge.gnt_i ;
  wire [1:0] \u_uart.u_bridge.idx_d ;
  reg [1:0] \u_uart.u_bridge.idx_q ;
  reg [7:0] \u_uart.u_bridge.op_q ;
  wire [31:0] \u_uart.u_bridge.rdata_i ;
  wire \u_uart.u_bridge.req_d ;
  wire \u_uart.u_bridge.req_o ;
  reg \u_uart.u_bridge.req_q ;
  wire \u_uart.u_bridge.rst_ni ;
  wire [7:0] \u_uart.u_bridge.rx_data_i ;
  wire \u_uart.u_bridge.rx_pop_o ;
  wire \u_uart.u_bridge.rx_valid_i ;
  wire [2:0] \u_uart.u_bridge.rxf_st_d ;
  reg [2:0] \u_uart.u_bridge.rxf_st_q ;
  wire [31:0] \u_uart.u_bridge.sh_d ;
  reg [31:0] \u_uart.u_bridge.sh_q ;
  wire \u_uart.u_bridge.valid_i ;
  wire [31:0] \u_uart.u_bridge.wdata_d ;
  wire [31:0] \u_uart.u_bridge.wdata_o ;
  reg [31:0] \u_uart.u_bridge.wdata_q ;
  wire \u_uart.u_bridge.we_d ;
  wire \u_uart.u_bridge.we_o ;
  reg \u_uart.u_bridge.we_q ;
  wire [12:0] \u_uart.u_reg.addr_hit ;
  wire \u_uart.u_reg.addrmiss ;
  wire \u_uart.u_reg.alert_test_flds_we ;
  wire \u_uart.u_reg.alert_test_qe ;
  wire \u_uart.u_reg.alert_test_wd ;
  wire \u_uart.u_reg.alert_test_we ;
  wire \u_uart.u_reg.clk_i ;
  wire \u_uart.u_reg.ctrl_llpbk_qs ;
  wire \u_uart.u_reg.ctrl_llpbk_wd ;
  wire [15:0] \u_uart.u_reg.ctrl_nco_qs ;
  wire [15:0] \u_uart.u_reg.ctrl_nco_wd ;
  wire \u_uart.u_reg.ctrl_nf_qs ;
  wire \u_uart.u_reg.ctrl_nf_wd ;
  wire \u_uart.u_reg.ctrl_parity_en_qs ;
  wire \u_uart.u_reg.ctrl_parity_en_wd ;
  wire \u_uart.u_reg.ctrl_parity_odd_qs ;
  wire \u_uart.u_reg.ctrl_parity_odd_wd ;
  wire \u_uart.u_reg.ctrl_rx_qs ;
  wire \u_uart.u_reg.ctrl_rx_wd ;
  wire [1:0] \u_uart.u_reg.ctrl_rxblvl_qs ;
  wire [1:0] \u_uart.u_reg.ctrl_rxblvl_wd ;
  wire \u_uart.u_reg.ctrl_slpbk_qs ;
  wire \u_uart.u_reg.ctrl_slpbk_wd ;
  wire \u_uart.u_reg.ctrl_tx_qs ;
  wire \u_uart.u_reg.ctrl_tx_wd ;
  wire \u_uart.u_reg.ctrl_we ;
  wire \u_uart.u_reg.devmode_i ;
  wire [3:0] \u_uart.u_reg.fifo_ctrl_flds_we ;
  wire \u_uart.u_reg.fifo_ctrl_qe ;
  wire [2:0] \u_uart.u_reg.fifo_ctrl_rxilvl_qs ;
  wire [2:0] \u_uart.u_reg.fifo_ctrl_rxilvl_wd ;
  wire \u_uart.u_reg.fifo_ctrl_rxrst_wd ;
  wire [2:0] \u_uart.u_reg.fifo_ctrl_txilvl_qs ;
  wire [2:0] \u_uart.u_reg.fifo_ctrl_txilvl_wd ;
  wire \u_uart.u_reg.fifo_ctrl_txrst_wd ;
  wire \u_uart.u_reg.fifo_ctrl_we ;
  wire [7:0] \u_uart.u_reg.fifo_status_rxlvl_qs ;
  wire [7:0] \u_uart.u_reg.fifo_status_txlvl_qs ;
  wire [71:0] \u_uart.u_reg.hw2reg ;
  wire \u_uart.u_reg.intr_enable_rx_break_err_qs ;
  wire \u_uart.u_reg.intr_enable_rx_break_err_wd ;
  wire \u_uart.u_reg.intr_enable_rx_frame_err_qs ;
  wire \u_uart.u_reg.intr_enable_rx_frame_err_wd ;
  wire \u_uart.u_reg.intr_enable_rx_overflow_qs ;
  wire \u_uart.u_reg.intr_enable_rx_overflow_wd ;
  wire \u_uart.u_reg.intr_enable_rx_parity_err_qs ;
  wire \u_uart.u_reg.intr_enable_rx_parity_err_wd ;
  wire \u_uart.u_reg.intr_enable_rx_timeout_qs ;
  wire \u_uart.u_reg.intr_enable_rx_timeout_wd ;
  wire \u_uart.u_reg.intr_enable_rx_watermark_qs ;
  wire \u_uart.u_reg.intr_enable_rx_watermark_wd ;
  wire \u_uart.u_reg.intr_enable_tx_done_qs ;
  wire \u_uart.u_reg.intr_enable_tx_done_wd ;
  wire \u_uart.u_reg.intr_enable_tx_empty_qs ;
  wire \u_uart.u_reg.intr_enable_tx_empty_wd ;
  wire \u_uart.u_reg.intr_enable_tx_watermark_qs ;
  wire \u_uart.u_reg.intr_enable_tx_watermark_wd ;
  wire \u_uart.u_reg.intr_enable_we ;
  wire \u_uart.u_reg.intr_state_rx_break_err_qs ;
  wire \u_uart.u_reg.intr_state_rx_break_err_wd ;
  wire \u_uart.u_reg.intr_state_rx_frame_err_qs ;
  wire \u_uart.u_reg.intr_state_rx_frame_err_wd ;
  wire \u_uart.u_reg.intr_state_rx_overflow_qs ;
  wire \u_uart.u_reg.intr_state_rx_overflow_wd ;
  wire \u_uart.u_reg.intr_state_rx_parity_err_qs ;
  wire \u_uart.u_reg.intr_state_rx_parity_err_wd ;
  wire \u_uart.u_reg.intr_state_rx_timeout_qs ;
  wire \u_uart.u_reg.intr_state_rx_timeout_wd ;
  wire \u_uart.u_reg.intr_state_rx_watermark_qs ;
  wire \u_uart.u_reg.intr_state_tx_done_qs ;
  wire \u_uart.u_reg.intr_state_tx_done_wd ;
  wire \u_uart.u_reg.intr_state_tx_empty_qs ;
  wire \u_uart.u_reg.intr_state_tx_watermark_qs ;
  wire \u_uart.u_reg.intr_state_we ;
  wire [8:0] \u_uart.u_reg.intr_test_flds_we ;
  wire \u_uart.u_reg.intr_test_qe ;
  wire \u_uart.u_reg.intr_test_rx_break_err_wd ;
  wire \u_uart.u_reg.intr_test_rx_frame_err_wd ;
  wire \u_uart.u_reg.intr_test_rx_overflow_wd ;
  wire \u_uart.u_reg.intr_test_rx_parity_err_wd ;
  wire \u_uart.u_reg.intr_test_rx_timeout_wd ;
  wire \u_uart.u_reg.intr_test_rx_watermark_wd ;
  wire \u_uart.u_reg.intr_test_tx_done_wd ;
  wire \u_uart.u_reg.intr_test_tx_empty_wd ;
  wire \u_uart.u_reg.intr_test_tx_watermark_wd ;
  wire \u_uart.u_reg.intr_test_we ;
  wire \u_uart.u_reg.ovrd_txen_qs ;
  wire \u_uart.u_reg.ovrd_txen_wd ;
  wire \u_uart.u_reg.ovrd_txval_qs ;
  wire \u_uart.u_reg.ovrd_txval_wd ;
  wire \u_uart.u_reg.ovrd_we ;
  wire [7:0] \u_uart.u_reg.rdata_qs ;
  wire \u_uart.u_reg.rdata_re ;
  wire [131:0] \u_uart.u_reg.reg2hw ;
  wire [5:0] \u_uart.u_reg.reg_addr ;
  wire [3:0] \u_uart.u_reg.reg_be ;
  wire \u_uart.u_reg.reg_busy ;
  wire \u_uart.u_reg.reg_error ;
  wire [31:0] \u_uart.u_reg.reg_rdata ;
  wire [31:0] \u_uart.u_reg.reg_rdata_next ;
  wire \u_uart.u_reg.reg_re ;
  wire [31:0] \u_uart.u_reg.reg_wdata ;
  wire \u_uart.u_reg.reg_we ;
  wire \u_uart.u_reg.rst_ni ;
  wire \u_uart.u_reg.shadow_busy ;
  wire \u_uart.u_reg.status_re ;
  wire \u_uart.u_reg.status_rxempty_qs ;
  wire \u_uart.u_reg.status_rxfull_qs ;
  wire \u_uart.u_reg.status_rxidle_qs ;
  wire \u_uart.u_reg.status_txempty_qs ;
  wire \u_uart.u_reg.status_txfull_qs ;
  wire \u_uart.u_reg.status_txidle_qs ;
  wire \u_uart.u_reg.timeout_ctrl_en_qs ;
  wire \u_uart.u_reg.timeout_ctrl_en_wd ;
  wire [23:0] \u_uart.u_reg.timeout_ctrl_val_qs ;
  wire [23:0] \u_uart.u_reg.timeout_ctrl_val_wd ;
  wire \u_uart.u_reg.timeout_ctrl_we ;
  wire [108:0] \u_uart.u_reg.tl_i ;
  wire [65:0] \u_uart.u_reg.tl_o ;
  wire [65:0] \u_uart.u_reg.tl_o_pre ;
  wire [65:0] \u_uart.u_reg.tl_reg_d2h ;
  wire [108:0] \u_uart.u_reg.tl_reg_h2d ;
  wire \u_uart.u_reg.u_alert_test.d ;
  wire \u_uart.u_reg.u_alert_test.ds ;
  wire \u_uart.u_reg.u_alert_test.q ;
  wire \u_uart.u_reg.u_alert_test.qe ;
  wire \u_uart.u_reg.u_alert_test.qre ;
  wire \u_uart.u_reg.u_alert_test.qs ;
  wire \u_uart.u_reg.u_alert_test.re ;
  wire \u_uart.u_reg.u_alert_test.wd ;
  wire \u_uart.u_reg.u_alert_test.we ;
  wire \u_uart.u_reg.u_ctrl_llpbk.clk_i ;
  wire \u_uart.u_reg.u_ctrl_llpbk.d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.de ;
  reg \u_uart.u_reg.u_ctrl_llpbk.q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.qe ;
  wire \u_uart.u_reg.u_ctrl_llpbk.qs ;
  wire \u_uart.u_reg.u_ctrl_llpbk.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wd ;
  wire \u_uart.u_reg.u_ctrl_llpbk.we ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_data ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nco.clk_i ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.d ;
  wire \u_uart.u_reg.u_ctrl_nco.de ;
  reg [15:0] \u_uart.u_reg.u_ctrl_nco.q ;
  wire \u_uart.u_reg.u_ctrl_nco.qe ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.qs ;
  wire \u_uart.u_reg.u_ctrl_nco.rst_ni ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wd ;
  wire \u_uart.u_reg.u_ctrl_nco.we ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.de ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.q ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.we ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nf.clk_i ;
  wire \u_uart.u_reg.u_ctrl_nf.d ;
  wire \u_uart.u_reg.u_ctrl_nf.de ;
  reg \u_uart.u_reg.u_ctrl_nf.q ;
  wire \u_uart.u_reg.u_ctrl_nf.qe ;
  wire \u_uart.u_reg.u_ctrl_nf.qs ;
  wire \u_uart.u_reg.u_ctrl_nf.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_nf.wd ;
  wire \u_uart.u_reg.u_ctrl_nf.we ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_en.clk_i ;
  wire \u_uart.u_reg.u_ctrl_parity_en.d ;
  wire \u_uart.u_reg.u_ctrl_parity_en.de ;
  reg \u_uart.u_reg.u_ctrl_parity_en.q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.qe ;
  wire \u_uart.u_reg.u_ctrl_parity_en.qs ;
  wire \u_uart.u_reg.u_ctrl_parity_en.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_en.we ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.clk_i ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.d ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.de ;
  reg \u_uart.u_reg.u_ctrl_parity_odd.q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.qe ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.qs ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.we ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_rx.clk_i ;
  wire \u_uart.u_reg.u_ctrl_rx.d ;
  wire \u_uart.u_reg.u_ctrl_rx.de ;
  reg \u_uart.u_reg.u_ctrl_rx.q ;
  wire \u_uart.u_reg.u_ctrl_rx.qe ;
  wire \u_uart.u_reg.u_ctrl_rx.qs ;
  wire \u_uart.u_reg.u_ctrl_rx.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_rx.wd ;
  wire \u_uart.u_reg.u_ctrl_rx.we ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_rxblvl.clk_i ;
  wire [1:0] \u_uart.u_reg.u_ctrl_rxblvl.d ;
  wire \u_uart.u_reg.u_ctrl_rxblvl.de ;
  reg [1:0] \u_uart.u_reg.u_ctrl_rxblvl.q ;
  wire \u_uart.u_reg.u_ctrl_rxblvl.qe ;
  wire [1:0] \u_uart.u_reg.u_ctrl_rxblvl.qs ;
  wire \u_uart.u_reg.u_ctrl_rxblvl.rst_ni ;
  wire [1:0] \u_uart.u_reg.u_ctrl_rxblvl.wd ;
  wire \u_uart.u_reg.u_ctrl_rxblvl.we ;
  wire [1:0] \u_uart.u_reg.u_ctrl_rxblvl.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rxblvl.wr_en ;
  wire [1:0] \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.de ;
  wire [1:0] \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.q ;
  wire [1:0] \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.we ;
  wire [1:0] \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_slpbk.clk_i ;
  wire \u_uart.u_reg.u_ctrl_slpbk.d ;
  wire \u_uart.u_reg.u_ctrl_slpbk.de ;
  reg \u_uart.u_reg.u_ctrl_slpbk.q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.qe ;
  wire \u_uart.u_reg.u_ctrl_slpbk.qs ;
  wire \u_uart.u_reg.u_ctrl_slpbk.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wd ;
  wire \u_uart.u_reg.u_ctrl_slpbk.we ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_data ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_tx.clk_i ;
  wire \u_uart.u_reg.u_ctrl_tx.d ;
  wire \u_uart.u_reg.u_ctrl_tx.de ;
  reg \u_uart.u_reg.u_ctrl_tx.q ;
  wire \u_uart.u_reg.u_ctrl_tx.qe ;
  wire \u_uart.u_reg.u_ctrl_tx.qs ;
  wire \u_uart.u_reg.u_ctrl_tx.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_tx.wd ;
  wire \u_uart.u_reg.u_ctrl_tx.we ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_data ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  reg \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxilvl.clk_i ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxilvl.de ;
  reg [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxilvl.qe ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxilvl.rst_ni ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxilvl.we ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.de ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.gen_w.unused_q ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.q ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.we ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.de ;
  reg \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.qe ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_txilvl.clk_i ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txilvl.de ;
  reg [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txilvl.qe ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_txilvl.rst_ni ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txilvl.we ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.de ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.gen_w.unused_q ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.q ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.we ;
  wire [2:0] \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.de ;
  reg \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.qe ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_en ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.d ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.ds ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.q ;
  wire \u_uart.u_reg.u_fifo_status_rxlvl.qe ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.qs ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.wd ;
  wire \u_uart.u_reg.u_fifo_status_rxlvl.we ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.d ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.ds ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.q ;
  wire \u_uart.u_reg.u_fifo_status_txlvl.qe ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.qs ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.wd ;
  wire \u_uart.u_reg.u_fifo_status_txlvl.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.clk_i ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.de ;
  reg \u_uart.u_reg.u_intr_enable_rx_break_err.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.qe ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.qs ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.rst_ni ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.clk_i ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.de ;
  reg \u_uart.u_reg.u_intr_enable_rx_frame_err.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.qe ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.qs ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.rst_ni ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.clk_i ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.de ;
  reg \u_uart.u_reg.u_intr_enable_rx_overflow.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.qe ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.qs ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.rst_ni ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.clk_i ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.de ;
  reg \u_uart.u_reg.u_intr_enable_rx_parity_err.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.qe ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.qs ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.rst_ni ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.clk_i ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.de ;
  reg \u_uart.u_reg.u_intr_enable_rx_timeout.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.qe ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.qs ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.rst_ni ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.clk_i ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.de ;
  reg \u_uart.u_reg.u_intr_enable_rx_watermark.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.qe ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.qs ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.rst_ni ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.clk_i ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.d ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.de ;
  reg \u_uart.u_reg.u_intr_enable_tx_done.q ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.qe ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.qs ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.rst_ni ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wd ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.we ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.clk_i ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.d ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.de ;
  reg \u_uart.u_reg.u_intr_enable_tx_empty.q ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.qe ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.qs ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.rst_ni ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wd ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.we ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.clk_i ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.d ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.de ;
  reg \u_uart.u_reg.u_intr_enable_tx_watermark.q ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.qe ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.qs ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.rst_ni ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wd ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.we ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.clk_i ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.d ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.de ;
  reg \u_uart.u_reg.u_intr_state_rx_break_err.q ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.qe ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.qs ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.rst_ni ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.we ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.clk_i ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.d ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.de ;
  reg \u_uart.u_reg.u_intr_state_rx_frame_err.q ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.qe ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.qs ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.rst_ni ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.we ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.clk_i ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.d ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.de ;
  reg \u_uart.u_reg.u_intr_state_rx_overflow.q ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.qe ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.qs ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.rst_ni ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.we ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.clk_i ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.d ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.de ;
  reg \u_uart.u_reg.u_intr_state_rx_parity_err.q ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.qe ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.qs ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.rst_ni ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.we ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.clk_i ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.d ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.de ;
  reg \u_uart.u_reg.u_intr_state_rx_timeout.q ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.qe ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.qs ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.rst_ni ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.we ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.clk_i ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.d ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.de ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.ds ;
  reg \u_uart.u_reg.u_intr_state_rx_watermark.q ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.qe ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.qs ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.rst_ni ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.we ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.gen_ro.unused_q ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.gen_ro.unused_wd ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.gen_ro.unused_we ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_state_tx_done.clk_i ;
  wire \u_uart.u_reg.u_intr_state_tx_done.d ;
  wire \u_uart.u_reg.u_intr_state_tx_done.de ;
  reg \u_uart.u_reg.u_intr_state_tx_done.q ;
  wire \u_uart.u_reg.u_intr_state_tx_done.qe ;
  wire \u_uart.u_reg.u_intr_state_tx_done.qs ;
  wire \u_uart.u_reg.u_intr_state_tx_done.rst_ni ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wd ;
  wire \u_uart.u_reg.u_intr_state_tx_done.we ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wr_data ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wr_en ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.clk_i ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.d ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.de ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.ds ;
  reg \u_uart.u_reg.u_intr_state_tx_empty.q ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.qe ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.qs ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.rst_ni ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wd ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.we ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_data ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.gen_ro.unused_q ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.gen_ro.unused_wd ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.gen_ro.unused_we ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.clk_i ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.d ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.de ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.ds ;
  reg \u_uart.u_reg.u_intr_state_tx_watermark.q ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.qe ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.qs ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.rst_ni ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wd ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.we ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_data ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.gen_ro.unused_q ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.gen_ro.unused_wd ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.gen_ro.unused_we ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_intr_test_rx_break_err.d ;
  wire \u_uart.u_reg.u_intr_test_rx_break_err.ds ;
  wire \u_uart.u_reg.u_intr_test_rx_break_err.q ;
  wire \u_uart.u_reg.u_intr_test_rx_break_err.qe ;
  wire \u_uart.u_reg.u_intr_test_rx_break_err.qre ;
  wire \u_uart.u_reg.u_intr_test_rx_break_err.qs ;
  wire \u_uart.u_reg.u_intr_test_rx_break_err.re ;
  wire \u_uart.u_reg.u_intr_test_rx_break_err.wd ;
  wire \u_uart.u_reg.u_intr_test_rx_break_err.we ;
  wire \u_uart.u_reg.u_intr_test_rx_frame_err.d ;
  wire \u_uart.u_reg.u_intr_test_rx_frame_err.ds ;
  wire \u_uart.u_reg.u_intr_test_rx_frame_err.q ;
  wire \u_uart.u_reg.u_intr_test_rx_frame_err.qe ;
  wire \u_uart.u_reg.u_intr_test_rx_frame_err.qre ;
  wire \u_uart.u_reg.u_intr_test_rx_frame_err.qs ;
  wire \u_uart.u_reg.u_intr_test_rx_frame_err.re ;
  wire \u_uart.u_reg.u_intr_test_rx_frame_err.wd ;
  wire \u_uart.u_reg.u_intr_test_rx_frame_err.we ;
  wire \u_uart.u_reg.u_intr_test_rx_overflow.d ;
  wire \u_uart.u_reg.u_intr_test_rx_overflow.ds ;
  wire \u_uart.u_reg.u_intr_test_rx_overflow.q ;
  wire \u_uart.u_reg.u_intr_test_rx_overflow.qe ;
  wire \u_uart.u_reg.u_intr_test_rx_overflow.qre ;
  wire \u_uart.u_reg.u_intr_test_rx_overflow.qs ;
  wire \u_uart.u_reg.u_intr_test_rx_overflow.re ;
  wire \u_uart.u_reg.u_intr_test_rx_overflow.wd ;
  wire \u_uart.u_reg.u_intr_test_rx_overflow.we ;
  wire \u_uart.u_reg.u_intr_test_rx_parity_err.d ;
  wire \u_uart.u_reg.u_intr_test_rx_parity_err.ds ;
  wire \u_uart.u_reg.u_intr_test_rx_parity_err.q ;
  wire \u_uart.u_reg.u_intr_test_rx_parity_err.qe ;
  wire \u_uart.u_reg.u_intr_test_rx_parity_err.qre ;
  wire \u_uart.u_reg.u_intr_test_rx_parity_err.qs ;
  wire \u_uart.u_reg.u_intr_test_rx_parity_err.re ;
  wire \u_uart.u_reg.u_intr_test_rx_parity_err.wd ;
  wire \u_uart.u_reg.u_intr_test_rx_parity_err.we ;
  wire \u_uart.u_reg.u_intr_test_rx_timeout.d ;
  wire \u_uart.u_reg.u_intr_test_rx_timeout.ds ;
  wire \u_uart.u_reg.u_intr_test_rx_timeout.q ;
  wire \u_uart.u_reg.u_intr_test_rx_timeout.qe ;
  wire \u_uart.u_reg.u_intr_test_rx_timeout.qre ;
  wire \u_uart.u_reg.u_intr_test_rx_timeout.qs ;
  wire \u_uart.u_reg.u_intr_test_rx_timeout.re ;
  wire \u_uart.u_reg.u_intr_test_rx_timeout.wd ;
  wire \u_uart.u_reg.u_intr_test_rx_timeout.we ;
  wire \u_uart.u_reg.u_intr_test_rx_watermark.d ;
  wire \u_uart.u_reg.u_intr_test_rx_watermark.ds ;
  wire \u_uart.u_reg.u_intr_test_rx_watermark.q ;
  wire \u_uart.u_reg.u_intr_test_rx_watermark.qe ;
  wire \u_uart.u_reg.u_intr_test_rx_watermark.qre ;
  wire \u_uart.u_reg.u_intr_test_rx_watermark.qs ;
  wire \u_uart.u_reg.u_intr_test_rx_watermark.re ;
  wire \u_uart.u_reg.u_intr_test_rx_watermark.wd ;
  wire \u_uart.u_reg.u_intr_test_rx_watermark.we ;
  wire \u_uart.u_reg.u_intr_test_tx_done.d ;
  wire \u_uart.u_reg.u_intr_test_tx_done.ds ;
  wire \u_uart.u_reg.u_intr_test_tx_done.q ;
  wire \u_uart.u_reg.u_intr_test_tx_done.qe ;
  wire \u_uart.u_reg.u_intr_test_tx_done.qre ;
  wire \u_uart.u_reg.u_intr_test_tx_done.qs ;
  wire \u_uart.u_reg.u_intr_test_tx_done.re ;
  wire \u_uart.u_reg.u_intr_test_tx_done.wd ;
  wire \u_uart.u_reg.u_intr_test_tx_done.we ;
  wire \u_uart.u_reg.u_intr_test_tx_empty.d ;
  wire \u_uart.u_reg.u_intr_test_tx_empty.ds ;
  wire \u_uart.u_reg.u_intr_test_tx_empty.q ;
  wire \u_uart.u_reg.u_intr_test_tx_empty.qe ;
  wire \u_uart.u_reg.u_intr_test_tx_empty.qre ;
  wire \u_uart.u_reg.u_intr_test_tx_empty.qs ;
  wire \u_uart.u_reg.u_intr_test_tx_empty.re ;
  wire \u_uart.u_reg.u_intr_test_tx_empty.wd ;
  wire \u_uart.u_reg.u_intr_test_tx_empty.we ;
  wire \u_uart.u_reg.u_intr_test_tx_watermark.d ;
  wire \u_uart.u_reg.u_intr_test_tx_watermark.ds ;
  wire \u_uart.u_reg.u_intr_test_tx_watermark.q ;
  wire \u_uart.u_reg.u_intr_test_tx_watermark.qe ;
  wire \u_uart.u_reg.u_intr_test_tx_watermark.qre ;
  wire \u_uart.u_reg.u_intr_test_tx_watermark.qs ;
  wire \u_uart.u_reg.u_intr_test_tx_watermark.re ;
  wire \u_uart.u_reg.u_intr_test_tx_watermark.wd ;
  wire \u_uart.u_reg.u_intr_test_tx_watermark.we ;
  wire \u_uart.u_reg.u_ovrd_txen.clk_i ;
  wire \u_uart.u_reg.u_ovrd_txen.d ;
  wire \u_uart.u_reg.u_ovrd_txen.de ;
  reg \u_uart.u_reg.u_ovrd_txen.q ;
  wire \u_uart.u_reg.u_ovrd_txen.qe ;
  wire \u_uart.u_reg.u_ovrd_txen.qs ;
  wire \u_uart.u_reg.u_ovrd_txen.rst_ni ;
  wire \u_uart.u_reg.u_ovrd_txen.wd ;
  wire \u_uart.u_reg.u_ovrd_txen.we ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_data ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_en ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ovrd_txval.clk_i ;
  wire \u_uart.u_reg.u_ovrd_txval.d ;
  wire \u_uart.u_reg.u_ovrd_txval.de ;
  reg \u_uart.u_reg.u_ovrd_txval.q ;
  wire \u_uart.u_reg.u_ovrd_txval.qe ;
  wire \u_uart.u_reg.u_ovrd_txval.qs ;
  wire \u_uart.u_reg.u_ovrd_txval.rst_ni ;
  wire \u_uart.u_reg.u_ovrd_txval.wd ;
  wire \u_uart.u_reg.u_ovrd_txval.we ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_data ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_en ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.wr_en ;
  wire [7:0] \u_uart.u_reg.u_rdata.d ;
  wire [7:0] \u_uart.u_reg.u_rdata.ds ;
  wire [7:0] \u_uart.u_reg.u_rdata.q ;
  wire \u_uart.u_reg.u_rdata.qe ;
  wire \u_uart.u_reg.u_rdata.qre ;
  wire [7:0] \u_uart.u_reg.u_rdata.qs ;
  wire \u_uart.u_reg.u_rdata.re ;
  wire [7:0] \u_uart.u_reg.u_rdata.wd ;
  wire \u_uart.u_reg.u_rdata.we ;
  wire \u_uart.u_reg.u_reg_if.a_ack ;
  wire \u_uart.u_reg.u_reg_if.addr_align_err ;
  wire [5:0] \u_uart.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_uart.u_reg.u_reg_if.be_o ;
  wire \u_uart.u_reg.u_reg_if.busy_i ;
  wire \u_uart.u_reg.u_reg_if.clk_i ;
  wire \u_uart.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_uart.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_uart.u_reg.u_reg_if.err_internal ;
  wire \u_uart.u_reg.u_reg_if.error ;
  wire \u_uart.u_reg.u_reg_if.error_i ;
  reg \u_uart.u_reg.u_reg_if.error_q ;
  wire \u_uart.u_reg.u_reg_if.intg_error ;
  wire \u_uart.u_reg.u_reg_if.intg_error_o ;
  reg \u_uart.u_reg.u_reg_if.outstanding_q ;
  wire \u_uart.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_uart.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_uart.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_uart.u_reg.u_reg_if.rdata_q ;
  wire \u_uart.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_uart.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_uart.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_uart.u_reg.u_reg_if.rspop_q ;
  wire \u_uart.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_uart.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_uart.u_reg.u_reg_if.tl_o_pre ;
  wire \u_uart.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_uart.u_reg.u_reg_if.u_err.mask ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_full ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_get ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_uart.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_uart.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_uart.u_reg.u_reg_if.wdata_o ;
  wire \u_uart.u_reg.u_reg_if.we_o ;
  wire \u_uart.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_uart.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_uart.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_uart.u_reg.u_status_rxempty.d ;
  wire \u_uart.u_reg.u_status_rxempty.ds ;
  wire \u_uart.u_reg.u_status_rxempty.q ;
  wire \u_uart.u_reg.u_status_rxempty.qe ;
  wire \u_uart.u_reg.u_status_rxempty.qre ;
  wire \u_uart.u_reg.u_status_rxempty.qs ;
  wire \u_uart.u_reg.u_status_rxempty.re ;
  wire \u_uart.u_reg.u_status_rxempty.wd ;
  wire \u_uart.u_reg.u_status_rxempty.we ;
  wire \u_uart.u_reg.u_status_rxfull.d ;
  wire \u_uart.u_reg.u_status_rxfull.ds ;
  wire \u_uart.u_reg.u_status_rxfull.q ;
  wire \u_uart.u_reg.u_status_rxfull.qe ;
  wire \u_uart.u_reg.u_status_rxfull.qre ;
  wire \u_uart.u_reg.u_status_rxfull.qs ;
  wire \u_uart.u_reg.u_status_rxfull.re ;
  wire \u_uart.u_reg.u_status_rxfull.wd ;
  wire \u_uart.u_reg.u_status_rxfull.we ;
  wire \u_uart.u_reg.u_status_rxidle.d ;
  wire \u_uart.u_reg.u_status_rxidle.ds ;
  wire \u_uart.u_reg.u_status_rxidle.q ;
  wire \u_uart.u_reg.u_status_rxidle.qe ;
  wire \u_uart.u_reg.u_status_rxidle.qre ;
  wire \u_uart.u_reg.u_status_rxidle.qs ;
  wire \u_uart.u_reg.u_status_rxidle.re ;
  wire \u_uart.u_reg.u_status_rxidle.wd ;
  wire \u_uart.u_reg.u_status_rxidle.we ;
  wire \u_uart.u_reg.u_status_txempty.d ;
  wire \u_uart.u_reg.u_status_txempty.ds ;
  wire \u_uart.u_reg.u_status_txempty.q ;
  wire \u_uart.u_reg.u_status_txempty.qe ;
  wire \u_uart.u_reg.u_status_txempty.qre ;
  wire \u_uart.u_reg.u_status_txempty.qs ;
  wire \u_uart.u_reg.u_status_txempty.re ;
  wire \u_uart.u_reg.u_status_txempty.wd ;
  wire \u_uart.u_reg.u_status_txempty.we ;
  wire \u_uart.u_reg.u_status_txfull.d ;
  wire \u_uart.u_reg.u_status_txfull.ds ;
  wire \u_uart.u_reg.u_status_txfull.q ;
  wire \u_uart.u_reg.u_status_txfull.qe ;
  wire \u_uart.u_reg.u_status_txfull.qre ;
  wire \u_uart.u_reg.u_status_txfull.qs ;
  wire \u_uart.u_reg.u_status_txfull.re ;
  wire \u_uart.u_reg.u_status_txfull.wd ;
  wire \u_uart.u_reg.u_status_txfull.we ;
  wire \u_uart.u_reg.u_status_txidle.d ;
  wire \u_uart.u_reg.u_status_txidle.ds ;
  wire \u_uart.u_reg.u_status_txidle.q ;
  wire \u_uart.u_reg.u_status_txidle.qe ;
  wire \u_uart.u_reg.u_status_txidle.qre ;
  wire \u_uart.u_reg.u_status_txidle.qs ;
  wire \u_uart.u_reg.u_status_txidle.re ;
  wire \u_uart.u_reg.u_status_txidle.wd ;
  wire \u_uart.u_reg.u_status_txidle.we ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.clk_i ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.d ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.de ;
  reg \u_uart.u_reg.u_timeout_ctrl_en.q ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.qe ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.qs ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.rst_ni ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wd ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.we ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_data ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_en ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_timeout_ctrl_val.clk_i ;
  wire [23:0] \u_uart.u_reg.u_timeout_ctrl_val.d ;
  wire \u_uart.u_reg.u_timeout_ctrl_val.de ;
  reg [23:0] \u_uart.u_reg.u_timeout_ctrl_val.q ;
  wire \u_uart.u_reg.u_timeout_ctrl_val.qe ;
  wire [23:0] \u_uart.u_reg.u_timeout_ctrl_val.qs ;
  wire \u_uart.u_reg.u_timeout_ctrl_val.rst_ni ;
  wire [23:0] \u_uart.u_reg.u_timeout_ctrl_val.wd ;
  wire \u_uart.u_reg.u_timeout_ctrl_val.we ;
  wire [23:0] \u_uart.u_reg.u_timeout_ctrl_val.wr_data ;
  wire \u_uart.u_reg.u_timeout_ctrl_val.wr_en ;
  wire [23:0] \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.de ;
  wire [23:0] \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.gen_w.unused_q ;
  wire [23:0] \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.q ;
  wire [23:0] \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.we ;
  wire [23:0] \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.wr_en ;
  wire [15:0] \u_uart.u_reg.u_val.d ;
  wire [15:0] \u_uart.u_reg.u_val.ds ;
  wire [15:0] \u_uart.u_reg.u_val.q ;
  wire \u_uart.u_reg.u_val.qe ;
  wire [15:0] \u_uart.u_reg.u_val.qs ;
  wire [15:0] \u_uart.u_reg.u_val.wd ;
  wire \u_uart.u_reg.u_val.we ;
  wire \u_uart.u_reg.u_wdata.clk_i ;
  wire [7:0] \u_uart.u_reg.u_wdata.d ;
  wire \u_uart.u_reg.u_wdata.de ;
  reg [7:0] \u_uart.u_reg.u_wdata.q ;
  wire \u_uart.u_reg.u_wdata.qe ;
  wire [7:0] \u_uart.u_reg.u_wdata.qs ;
  wire \u_uart.u_reg.u_wdata.rst_ni ;
  wire [7:0] \u_uart.u_reg.u_wdata.wd ;
  wire \u_uart.u_reg.u_wdata.we ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_data ;
  wire \u_uart.u_reg.u_wdata.wr_en ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.de ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.gen_w.unused_q ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.q ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.we ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_wdata0_qe.clk_i ;
  wire \u_uart.u_reg.u_wdata0_qe.d_i ;
  reg \u_uart.u_reg.u_wdata0_qe.q_o ;
  wire \u_uart.u_reg.u_wdata0_qe.rst_ni ;
  wire [15:0] \u_uart.u_reg.val_qs ;
  wire \u_uart.u_reg.wdata_flds_we ;
  wire \u_uart.u_reg.wdata_qe ;
  wire [7:0] \u_uart.u_reg.wdata_wd ;
  wire \u_uart.u_reg.wdata_we ;
  wire \u_uart.u_reg.wr_err ;
  wire [4:0] \u_uart.u_uart_core.allzero_cnt_d ;
  reg [4:0] \u_uart.u_uart_core.allzero_cnt_q ;
  wire \u_uart.u_uart_core.allzero_err ;
  wire \u_uart.u_uart_core.break_err ;
  reg \u_uart.u_uart_core.break_st_q ;
  wire \u_uart.u_uart_core.clk_i ;
  wire \u_uart.u_uart_core.event_rx_break_err ;
  wire \u_uart.u_uart_core.event_rx_frame_err ;
  wire \u_uart.u_uart_core.event_rx_overflow ;
  wire \u_uart.u_uart_core.event_rx_parity_err ;
  wire \u_uart.u_uart_core.event_rx_timeout ;
  wire \u_uart.u_uart_core.event_rx_watermark ;
  wire \u_uart.u_uart_core.event_tx_done ;
  wire \u_uart.u_uart_core.event_tx_empty ;
  wire \u_uart.u_uart_core.event_tx_watermark ;
  wire [71:0] \u_uart.u_uart_core.hw2reg ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.clk_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.event_intr_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.g_intr_event.new_event ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.hw2reg_intr_state_d_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.hw2reg_intr_state_de_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_enable_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_state_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.rst_ni ;
  wire \u_uart.u_uart_core.intr_hw_rx_break_err.status ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.clk_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.event_intr_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.g_intr_event.new_event ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.hw2reg_intr_state_d_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.hw2reg_intr_state_de_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.reg2hw_intr_enable_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.reg2hw_intr_state_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.reg2hw_intr_test_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.reg2hw_intr_test_qe_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.rst_ni ;
  wire \u_uart.u_uart_core.intr_hw_rx_frame_err.status ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.clk_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.event_intr_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.g_intr_event.new_event ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.hw2reg_intr_state_d_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.hw2reg_intr_state_de_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.reg2hw_intr_enable_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.reg2hw_intr_state_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.reg2hw_intr_test_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.reg2hw_intr_test_qe_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.rst_ni ;
  wire \u_uart.u_uart_core.intr_hw_rx_overflow.status ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.clk_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.event_intr_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.g_intr_event.new_event ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.hw2reg_intr_state_d_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.hw2reg_intr_state_de_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.reg2hw_intr_enable_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.reg2hw_intr_state_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.reg2hw_intr_test_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.reg2hw_intr_test_qe_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.rst_ni ;
  wire \u_uart.u_uart_core.intr_hw_rx_parity_err.status ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.clk_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.event_intr_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.g_intr_event.new_event ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.hw2reg_intr_state_d_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.hw2reg_intr_state_de_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.reg2hw_intr_enable_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.reg2hw_intr_state_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.reg2hw_intr_test_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.reg2hw_intr_test_qe_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.rst_ni ;
  wire \u_uart.u_uart_core.intr_hw_rx_timeout.status ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.clk_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.event_intr_i ;
  reg \u_uart.u_uart_core.intr_hw_rx_watermark.g_intr_status.test_q ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.g_intr_status.unused_reg2hw ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.hw2reg_intr_state_d_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.hw2reg_intr_state_de_o ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.reg2hw_intr_enable_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.reg2hw_intr_state_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.reg2hw_intr_test_q_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.reg2hw_intr_test_qe_i ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.rst_ni ;
  wire \u_uart.u_uart_core.intr_hw_rx_watermark.status ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.clk_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.event_intr_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.g_intr_event.new_event ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.hw2reg_intr_state_d_o ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.hw2reg_intr_state_de_o ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.reg2hw_intr_enable_q_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.reg2hw_intr_state_q_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.reg2hw_intr_test_q_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.reg2hw_intr_test_qe_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.rst_ni ;
  wire \u_uart.u_uart_core.intr_hw_tx_done.status ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.clk_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.event_intr_i ;
  reg \u_uart.u_uart_core.intr_hw_tx_empty.g_intr_status.test_q ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.g_intr_status.unused_reg2hw ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.hw2reg_intr_state_d_o ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.hw2reg_intr_state_de_o ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.reg2hw_intr_enable_q_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.reg2hw_intr_state_q_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.reg2hw_intr_test_q_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.reg2hw_intr_test_qe_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.rst_ni ;
  wire \u_uart.u_uart_core.intr_hw_tx_empty.status ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.clk_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.event_intr_i ;
  reg \u_uart.u_uart_core.intr_hw_tx_watermark.g_intr_status.test_q ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.g_intr_status.unused_reg2hw ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.hw2reg_intr_state_d_o ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.hw2reg_intr_state_de_o ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.reg2hw_intr_enable_q_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.reg2hw_intr_state_q_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.reg2hw_intr_test_q_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.reg2hw_intr_test_qe_i ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.rst_ni ;
  wire \u_uart.u_uart_core.intr_hw_tx_watermark.status ;
  wire \u_uart.u_uart_core.line_loopback ;
  reg [16:0] \u_uart.u_uart_core.nco_sum_q ;
  wire \u_uart.u_uart_core.not_allzero_char ;
  wire \u_uart.u_uart_core.ovrd_tx_en ;
  wire \u_uart.u_uart_core.ovrd_tx_val ;
  wire [131:0] \u_uart.u_uart_core.reg2hw ;
  wire \u_uart.u_uart_core.rst_ni ;
  wire \u_uart.u_uart_core.rx ;
  wire [7:0] \u_uart.u_uart_core.rx_data_o ;
  wire \u_uart.u_uart_core.rx_enable ;
  wire [7:0] \u_uart.u_uart_core.rx_fifo_data ;
  wire [6:0] \u_uart.u_uart_core.rx_fifo_depth ;
  wire \u_uart.u_uart_core.rx_fifo_depth_changed ;
  reg [6:0] \u_uart.u_uart_core.rx_fifo_depth_prev_q ;
  wire \u_uart.u_uart_core.rx_fifo_pop ;
  wire \u_uart.u_uart_core.rx_fifo_rvalid ;
  wire \u_uart.u_uart_core.rx_fifo_wready ;
  wire \u_uart.u_uart_core.rx_fifo_wvalid ;
  wire \u_uart.u_uart_core.rx_in ;
  wire \u_uart.u_uart_core.rx_in_maj ;
  wire \u_uart.u_uart_core.rx_in_mx ;
  wire \u_uart.u_uart_core.rx_pop_i ;
  wire \u_uart.u_uart_core.rx_sync ;
  reg \u_uart.u_uart_core.rx_sync_q1 ;
  reg \u_uart.u_uart_core.rx_sync_q2 ;
  wire \u_uart.u_uart_core.rx_tick_baud ;
  wire [23:0] \u_uart.u_uart_core.rx_timeout_count_d ;
  reg [23:0] \u_uart.u_uart_core.rx_timeout_count_q ;
  wire \u_uart.u_uart_core.rx_uart_idle ;
  reg [15:0] \u_uart.u_uart_core.rx_val_q ;
  wire \u_uart.u_uart_core.rx_valid ;
  wire \u_uart.u_uart_core.rx_valid_o ;
  wire [6:0] \u_uart.u_uart_core.rx_watermark_thresh ;
  wire \u_uart.u_uart_core.rxnf_enable ;
  wire \u_uart.u_uart_core.sync_rx.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.d_i ;
  wire \u_uart.u_uart_core.sync_rx.d_o ;
  wire \u_uart.u_uart_core.sync_rx.intq ;
  wire \u_uart.u_uart_core.sync_rx.q_o ;
  wire \u_uart.u_uart_core.sync_rx.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.d_i ;
  reg \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.d_i ;
  reg \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.unused_sig ;
  wire \u_uart.u_uart_core.sys_loopback ;
  wire \u_uart.u_uart_core.tick_baud_x16 ;
  wire \u_uart.u_uart_core.tx ;
  wire \u_uart.u_uart_core.tx_enable ;
  wire [7:0] \u_uart.u_uart_core.tx_fifo_data ;
  wire [5:0] \u_uart.u_uart_core.tx_fifo_depth ;
  wire \u_uart.u_uart_core.tx_fifo_rready ;
  wire \u_uart.u_uart_core.tx_fifo_rvalid ;
  wire \u_uart.u_uart_core.tx_fifo_wready ;
  wire \u_uart.u_uart_core.tx_out ;
  reg \u_uart.u_uart_core.tx_out_q ;
  wire \u_uart.u_uart_core.tx_uart_idle ;
  reg \u_uart.u_uart_core.tx_uart_idle_q ;
  wire [5:0] \u_uart.u_uart_core.tx_watermark_thresh ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.clk_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  wire [6:0] \u_uart.u_uart_core.u_uart_rxfifo.depth_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.err_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_empty ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_wptr ;
  wire [5:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr ;
  wire [5:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_wptr ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  reg [511:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage_rdata ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clk_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clr_i ;
  wire [6:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.depth_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.empty_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.err_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.full_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  wire [5:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_o ;
  reg [6:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set ;
  wire [6:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rst_ni ;
  wire [5:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_o ;
  reg [6:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set ;
  wire [6:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt ;
  reg \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.rdata_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rst_ni ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rvalid_o ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.wready_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.clk_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  wire [5:0] \u_uart.u_uart_core.u_uart_txfifo.depth_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.err_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_empty ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_rptr ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ;
  wire [4:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_rptr ;
  wire [4:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  reg [255:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage_rdata ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clk_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clr_i ;
  wire [5:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.depth_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.empty_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.err_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.full_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  wire [4:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_o ;
  reg [5:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set ;
  wire [5:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rst_ni ;
  wire [4:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_o ;
  reg [5:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set ;
  wire [5:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt ;
  reg \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.rdata_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rst_ni ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rvalid_o ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.wdata_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.wready_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.wvalid_i ;
  wire [2:0] \u_uart.u_uart_core.uart_fifo_rxilvl ;
  wire \u_uart.u_uart_core.uart_fifo_rxrst ;
  wire [2:0] \u_uart.u_uart_core.uart_fifo_txilvl ;
  wire \u_uart.u_uart_core.uart_fifo_txrst ;
  wire [7:0] \u_uart.u_uart_core.uart_rdata ;
  wire [3:0] \u_uart.u_uart_core.uart_rx.baud_div_d ;
  reg [3:0] \u_uart.u_uart_core.uart_rx.baud_div_q ;
  wire [3:0] \u_uart.u_uart_core.uart_rx.bit_cnt_d ;
  reg [3:0] \u_uart.u_uart_core.uart_rx.bit_cnt_q ;
  wire \u_uart.u_uart_core.uart_rx.clk_i ;
  wire \u_uart.u_uart_core.uart_rx.frame_err ;
  wire \u_uart.u_uart_core.uart_rx.idle ;
  wire \u_uart.u_uart_core.uart_rx.idle_d ;
  reg \u_uart.u_uart_core.uart_rx.idle_q ;
  wire \u_uart.u_uart_core.uart_rx.parity_enable ;
  wire \u_uart.u_uart_core.uart_rx.parity_odd ;
  wire \u_uart.u_uart_core.uart_rx.rst_ni ;
  wire \u_uart.u_uart_core.uart_rx.rx ;
  wire [7:0] \u_uart.u_uart_core.uart_rx.rx_data ;
  wire \u_uart.u_uart_core.uart_rx.rx_enable ;
  wire \u_uart.u_uart_core.uart_rx.rx_parity_err ;
  wire \u_uart.u_uart_core.uart_rx.rx_valid ;
  reg \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  wire [10:0] \u_uart.u_uart_core.uart_rx.sreg_d ;
  reg [10:0] \u_uart.u_uart_core.uart_rx.sreg_q ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud_d ;
  reg \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud_x16 ;
  wire \u_uart.u_uart_core.uart_rxto_en ;
  wire [23:0] \u_uart.u_uart_core.uart_rxto_val ;
  reg [3:0] \u_uart.u_uart_core.uart_tx.baud_div_q ;
  wire [3:0] \u_uart.u_uart_core.uart_tx.bit_cnt_d ;
  reg [3:0] \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  wire \u_uart.u_uart_core.uart_tx.clk_i ;
  wire \u_uart.u_uart_core.uart_tx.idle ;
  wire \u_uart.u_uart_core.uart_tx.parity_enable ;
  wire \u_uart.u_uart_core.uart_tx.rst_ni ;
  wire [10:0] \u_uart.u_uart_core.uart_tx.sreg_d ;
  reg [10:0] \u_uart.u_uart_core.uart_tx.sreg_q ;
  reg \u_uart.u_uart_core.uart_tx.tick_baud_q ;
  wire \u_uart.u_uart_core.uart_tx.tick_baud_x16 ;
  wire \u_uart.u_uart_core.uart_tx.tx ;
  wire \u_uart.u_uart_core.uart_tx.tx_d ;
  wire \u_uart.u_uart_core.uart_tx.tx_enable ;
  reg \u_uart.u_uart_core.uart_tx.tx_q ;
  wire \u_uart.u_uart_core.uart_tx.wr ;
  wire [7:0] \u_uart.u_uart_core.uart_tx.wr_data ;
  wire \u_uart.u_uart_core.uart_tx.wr_parity ;
  wire \u_uart.valid_i ;
  wire [31:0] \u_uart.wdata_o ;
  wire \u_uart.we_o ;
  wire [31:0] uart_addr;
  wire [3:0] uart_be;
  wire uart_err;
  wire uart_gnt;
  wire [31:0] \uart_host_adapter.addr_i ;
  wire [3:0] \uart_host_adapter.be_i ;
  wire \uart_host_adapter.clk_i ;
  wire \uart_host_adapter.err_o ;
  reg \uart_host_adapter.g_multiple_reqs.source_q ;
  wire \uart_host_adapter.gnt_o ;
  wire [3:0] \uart_host_adapter.instr_type_i ;
  wire \uart_host_adapter.intg_err ;
  wire \uart_host_adapter.intg_err_o ;
  wire \uart_host_adapter.intg_err_q ;
  wire [6:0] \uart_host_adapter.rdata_intg_o ;
  wire [31:0] \uart_host_adapter.rdata_o ;
  wire \uart_host_adapter.req_i ;
  wire \uart_host_adapter.rst_ni ;
  wire [3:0] \uart_host_adapter.tl_be ;
  wire [65:0] \uart_host_adapter.tl_i ;
  wire [108:0] \uart_host_adapter.tl_o ;
  wire [108:0] \uart_host_adapter.tl_out ;
  wire [7:0] \uart_host_adapter.tl_source ;
  wire [6:0] \uart_host_adapter.u_cmd_intg_gen.cmd_intg ;
  wire [31:0] \uart_host_adapter.u_cmd_intg_gen.data_final ;
  wire [6:0] \uart_host_adapter.u_cmd_intg_gen.data_intg ;
  wire [108:0] \uart_host_adapter.u_cmd_intg_gen.tl_i ;
  wire [108:0] \uart_host_adapter.u_cmd_intg_gen.tl_o ;
  wire \uart_host_adapter.unused_addr_bottom_bits ;
  wire \uart_host_adapter.valid_o ;
  wire [31:0] \uart_host_adapter.wdata_i ;
  wire [6:0] \uart_host_adapter.wdata_intg_i ;
  wire \uart_host_adapter.we_i ;
  wire [31:0] uart_rdata;
  wire uart_req;
  wire uart_rvalid;
  wire [31:0] uart_wdata;
  wire uart_we;
  wire \xbar.clk_i ;
  wire [2:0] \xbar.dev_sel_s1n_6 ;
  wire \xbar.rst_ni ;
  wire [3:0] \xbar.scanmode_i ;
  wire [65:0] \xbar.tl_gpio_i ;
  wire [108:0] \xbar.tl_gpio_o ;
  wire [65:0] \xbar.tl_pwm_i ;
  wire [108:0] \xbar.tl_pwm_o ;
  wire [65:0] \xbar.tl_rv_timer_i ;
  wire [108:0] \xbar.tl_rv_timer_o ;
  wire [263:0] \xbar.tl_s1n_6_ds_d2h ;
  wire [435:0] \xbar.tl_s1n_6_ds_h2d ;
  wire [65:0] \xbar.tl_s1n_6_us_d2h ;
  wire [108:0] \xbar.tl_s1n_6_us_h2d ;
  wire [108:0] \xbar.tl_uart_host_i ;
  wire [65:0] \xbar.tl_uart_host_o ;
  wire [65:0] \xbar.tl_uart_i ;
  wire [108:0] \xbar.tl_uart_o ;
  wire \xbar.u_s1n_6.accept_t_req ;
  wire \xbar.u_s1n_6.accept_t_rsp ;
  wire [22:0] \xbar.u_s1n_6.blanked_auser ;
  wire \xbar.u_s1n_6.clk_i ;
  wire [2:0] \xbar.u_s1n_6.dev_select_i ;
  reg [2:0] \xbar.u_s1n_6.dev_select_outstanding ;
  wire [2:0] \xbar.u_s1n_6.dev_select_t ;
  wire \xbar.u_s1n_6.fifo_h.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.err_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.full_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [109:0] \xbar.u_s1n_6.fifo_h.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rvalid_o ;
  wire [109:0] \xbar.u_s1n_6.fifo_h.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.err_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.full_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.fifo_h.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.fifo_h.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.fifo_h.rst_ni ;
  wire [2:0] \xbar.u_s1n_6.fifo_h.spare_req_i ;
  wire [2:0] \xbar.u_s1n_6.fifo_h.spare_req_o ;
  wire \xbar.u_s1n_6.fifo_h.spare_rsp_i ;
  wire \xbar.u_s1n_6.fifo_h.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.fifo_h.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.fifo_h.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.fifo_h.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.fifo_h.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_err_resp.err_resp.clk_i ;
  reg [3:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type ;
  reg [2:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode ;
  reg \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending ;
  reg [1:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_size ;
  reg [7:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_source ;
  wire \xbar.u_s1n_6.gen_err_resp.err_resp.rst_ni ;
  wire [108:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_i ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_o ;
  wire \xbar.u_s1n_6.gen_u_o[0].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[1].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[2].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[3].dev_select ;
  wire \xbar.u_s1n_6.hfifo_reqready ;
  wire \xbar.u_s1n_6.hold_all_requests ;
  reg [8:0] \xbar.u_s1n_6.num_req_outstanding ;
  wire \xbar.u_s1n_6.rst_ni ;
  wire [263:0] \xbar.u_s1n_6.tl_d_i ;
  wire [435:0] \xbar.u_s1n_6.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.tl_h_o ;
  wire [65:0] \xbar.u_s1n_6.tl_t_i ;
  wire [108:0] \xbar.u_s1n_6.tl_t_o ;
  wire [65:0] \xbar.u_s1n_6.tl_t_p ;
  wire [329:0] \xbar.u_s1n_6.tl_u_i ;
  wire [544:0] \xbar.u_s1n_6.tl_u_o ;
  wire \xbar.unused_scanmode ;
  assign \u_uart.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \$1001y  = \u_uart.u_bridge.req_q  && \uart_host_adapter.gnt_o ;
  assign \$1003y  = \uart_host_adapter.g_multiple_reqs.source_q  + 1'h1;
  assign \u_rv_timer.u_reg.reg_be  = \u_uart.u_bridge.we_q  ? \u_uart.u_bridge.be_q  : 4'hf;
  assign \$1009y  = & \u_uart.u_bridge.be_q ;
  assign \$1010y  = \$1009y  ? 3'h0 : 3'h1;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] = \u_uart.u_bridge.we_q  ? \$1010y  : 3'h4;
  assign \$1021y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80000;
  assign \$1023y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80020;
  assign \$1025y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80040;
  assign \$1027y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80060;
  assign \xbar.u_s1n_6.accept_t_req  = \u_uart.u_bridge.req_q  & \uart_host_adapter.gnt_o ;
  assign \$1040y  = \xbar.u_s1n_6.num_req_outstanding  + 9'h001;
  assign \$1042y  = \xbar.u_s1n_6.num_req_outstanding  - 9'h001;
  assign \$1046y  = | \xbar.u_s1n_6.num_req_outstanding ;
  assign \$1047y  = \xbar.u_s1n_6.dev_select_t  != \xbar.u_s1n_6.dev_select_outstanding ;
  assign \xbar.u_s1n_6.hold_all_requests  = \$1046y  & \$1047y ;
  assign \xbar.u_s1n_6.gen_u_o[0].dev_select  = \$1067y  & \$1068y ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[0].dev_select ;
  assign \u_uart.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[0].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[1].dev_select  = \$1073y  & \$1068y ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[1].dev_select ;
  assign \u_pwm.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[1].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[2].dev_select  = \$1079y  & \$1068y ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[2].dev_select ;
  assign \u_gpio.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[2].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[3].dev_select  = \$1085y  & \$1068y ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[3].dev_select ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  = \xbar.u_s1n_6.gen_u_o[3].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \$1067y  = ! \xbar.u_s1n_6.dev_select_t ;
  assign \$1073y  = \xbar.u_s1n_6.dev_select_t  == 3'h1;
  assign \$1079y  = \xbar.u_s1n_6.dev_select_t  == 3'h2;
  assign \$1085y  = \xbar.u_s1n_6.dev_select_t  == 3'h3;
  assign \uart_host_adapter.gnt_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.hfifo_reqready ;
  assign \$1103y  = ! \xbar.u_s1n_6.dev_select_outstanding ;
  assign \$1105y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h1;
  assign \$1107y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h2;
  assign \$1109y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h3;
  assign \$1111y  = \u_uart.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16] = \$1111y  ? \u_uart.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$1113y  = \u_pwm.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16] = \$1113y  ? \u_pwm.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$1115y  = \u_gpio.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16] = \$1115y  ? \u_gpio.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$1117y  = \u_rv_timer.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16] = \$1117y  ? \u_rv_timer.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$1119y  = \xbar.u_s1n_6.dev_select_t  >= 3'h4;
  assign \u_uart.u_reg.reg_error  = \u_uart.u_reg.addrmiss  | \u_uart.u_reg.wr_err ;
  assign \$1120y  = \u_uart.u_bridge.req_q  & \$1119y ;
  assign \$1068y  = ~ \xbar.u_s1n_6.hold_all_requests ;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108] = \$1120y  & \$1068y ;
  assign \$1128y  = \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108] && \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0];
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] = ~ \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending ;
  assign \$1140y  = 4'h6 == \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type ;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16] = \$1140y  ? 32'd0 : 32'd4294967295;
  assign \$1143y  = \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  == 3'h4;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62] = \$1143y  ? 3'h1 : 3'h0;
  assign \u_pwm.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \u_pwm.u_reg.reg_we  = \u_pwm.u_reg.u_reg_if.a_ack  & \$1151y ;
  assign \u_pwm.u_reg.reg_re  = \u_pwm.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$1167y  = \u_pwm.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$1175y  = \u_pwm.u_reg.reg_error  || \u_pwm.u_reg.reg_we ;
  assign \$1176y  = \$1175y  ? 32'd4294967295 : \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \$1180y  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  & \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \$1181y  = \u_pwm.u_reg.u_reg_if.outstanding_q  | \$1180y ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  = ~ \$1181y ;
  assign \u_uart.u_reg.u_intr_state_tx_done.qe  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  | \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de ;
  assign \$124y  = \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de  ? \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.d  : \u_uart.u_reg.u_intr_state_tx_done.q ;
  assign \$125y  = ~ \u_uart.u_reg.reg_wdata [2];
  assign \u_pwm.u_reg.reg_error  = \u_pwm.u_reg.addrmiss  | \u_pwm.u_reg.wr_err ;
  assign \$126y  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  ? \$125y  : 1'h1;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_to_src  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q  && \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \u_uart.u_reg.u_intr_state_tx_done.wr_data  = \$124y  & \$126y ;
  assign \$1282y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_req  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1299y  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_ack  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._cfg_we , \u_pwm.u_reg.u_cfg_cdc.dst_re_o , \u_pwm.u_reg._cfg_regwen  } = \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  & { \u_pwm.u_reg.u_cfg_cdc.dst_req , \u_pwm.u_reg.u_cfg_cdc.dst_req , \u_pwm.u_reg.u_cfg_cdc.dst_req  };
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  && \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.qe  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  | \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de ;
  assign \$1337y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \$134y  = \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de  ? \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.d  : \u_uart.u_reg.u_intr_state_rx_overflow.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_req  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$135y  = ~ \u_uart.u_reg.reg_wdata [3];
  assign \$1354y  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \$136y  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  ? \$135y  : 1'h1;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_ack  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._pwm_en_we , \u_pwm.u_reg.u_pwm_en_cdc.dst_re_o , \u_pwm.u_reg._pwm_en_regwen  } = \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  & { \u_pwm.u_reg.u_pwm_en_cdc.dst_req , \u_pwm.u_reg.u_pwm_en_cdc.dst_req , \u_pwm.u_reg.u_pwm_en_cdc.dst_req  };
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wr_data  = \$134y  & \$136y ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_to_src  = \u_pwm.u_reg.u_invert_cdc.src_busy_q  && \u_pwm.u_reg.u_invert_cdc.src_ack ;
  assign \$1392y  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_req  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1409y  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.src_ack  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._invert_we , \u_pwm.u_reg.u_invert_cdc.dst_re_o , \u_pwm.u_reg._invert_regwen  } = \u_pwm.u_reg.u_invert_cdc.txn_bits_q  & { \u_pwm.u_reg.u_invert_cdc.dst_req , \u_pwm.u_reg.u_invert_cdc.dst_req , \u_pwm.u_reg.u_invert_cdc.dst_req  };
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.qe  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  | \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_to_src  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_busy_q  && \u_pwm.u_reg.u_pwm_param_0_cdc.src_ack ;
  assign \$144y  = \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de  ? \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.d  : \u_uart.u_reg.u_intr_state_rx_frame_err.q ;
  assign \$1447y  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \$145y  = ~ \u_uart.u_reg.reg_wdata [4];
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$146y  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  ? \$145y  : 1'h1;
  assign \$1464y  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wr_data  = \$144y  & \$146y ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.src_ack  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._pwm_param_0_we , \u_pwm.u_reg.u_pwm_param_0_cdc.dst_re_o , \u_pwm.u_reg._pwm_param_0_regwen  } = \u_pwm.u_reg.u_pwm_param_0_cdc.txn_bits_q  & { \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req  };
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_to_src  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_busy_q  && \u_pwm.u_reg.u_pwm_param_1_cdc.src_ack ;
  assign \$1502y  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1519y  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.qe  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  | \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.src_ack  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._pwm_param_1_we , \u_pwm.u_reg.u_pwm_param_1_cdc.dst_re_o , \u_pwm.u_reg._pwm_param_1_regwen  } = \u_pwm.u_reg.u_pwm_param_1_cdc.txn_bits_q  & { \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req  };
  assign \$154y  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de  ? \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.d  : \u_uart.u_reg.u_intr_state_rx_break_err.q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_to_src  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_busy_q  && \u_pwm.u_reg.u_duty_cycle_0_cdc.src_ack ;
  assign \$155y  = ~ \u_uart.u_reg.reg_wdata [5];
  assign \$1557y  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \$156y  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  ? \$155y  : 1'h1;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wr_data  = \$154y  & \$156y ;
  assign \$1574y  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.src_ack  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._duty_cycle_0_we , \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_re_o , \u_pwm.u_reg._duty_cycle_0_regwen  } = \u_pwm.u_reg.u_duty_cycle_0_cdc.txn_bits_q  & { \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req , \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req , \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req  };
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_to_src  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_busy_q  && \u_pwm.u_reg.u_duty_cycle_1_cdc.src_ack ;
  assign \$1612y  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1629y  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.qe  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  | \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de ;
  assign \$164y  = \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de  ? \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.d  : \u_uart.u_reg.u_intr_state_rx_timeout.q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.src_ack  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._duty_cycle_1_we , \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_re_o , \u_pwm.u_reg._duty_cycle_1_regwen  } = \u_pwm.u_reg.u_duty_cycle_1_cdc.txn_bits_q  & { \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req , \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req , \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req  };
  assign \$165y  = ~ \u_uart.u_reg.reg_wdata [6];
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_to_src  = \u_pwm.u_reg.u_blink_param_0_cdc.src_busy_q  && \u_pwm.u_reg.u_blink_param_0_cdc.src_ack ;
  assign \$166y  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  ? \$165y  : 1'h1;
  assign \$1667y  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wr_data  = \$164y  & \$166y ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_req  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1684y  = \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_blink_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.src_ack  = \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._blink_param_0_we , \u_pwm.u_reg.u_blink_param_0_cdc.dst_re_o , \u_pwm.u_reg._blink_param_0_regwen  } = \u_pwm.u_reg.u_blink_param_0_cdc.txn_bits_q  & { \u_pwm.u_reg.u_blink_param_0_cdc.dst_req , \u_pwm.u_reg.u_blink_param_0_cdc.dst_req , \u_pwm.u_reg.u_blink_param_0_cdc.dst_req  };
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_to_src  = \u_pwm.u_reg.u_blink_param_1_cdc.src_busy_q  && \u_pwm.u_reg.u_blink_param_1_cdc.src_ack ;
  assign \$1722y  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.qe  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  | \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_req  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1739y  = \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_blink_param_1_cdc.dst_req ;
  assign \$174y  = \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de  ? \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.d  : \u_uart.u_reg.u_intr_state_rx_parity_err.q ;
  assign \$175y  = ~ \u_uart.u_reg.reg_wdata [7];
  assign \u_pwm.u_reg.u_blink_param_1_cdc.src_ack  = \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._blink_param_1_we , \u_pwm.u_reg.u_blink_param_1_cdc.dst_re_o , \u_pwm.u_reg._blink_param_1_regwen  } = \u_pwm.u_reg.u_blink_param_1_cdc.txn_bits_q  & { \u_pwm.u_reg.u_blink_param_1_cdc.dst_req , \u_pwm.u_reg.u_blink_param_1_cdc.dst_req , \u_pwm.u_reg.u_blink_param_1_cdc.dst_req  };
  assign \$1756y  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we  ? \u_pwm.u_reg.reg_wdata [0] : 1'h1;
  assign \u_pwm.u_reg.u_regwen.wr_data  = \u_pwm.u_reg.u_regwen.q  & \$1756y ;
  assign \$176y  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  ? \$175y  : 1'h1;
  assign \u_pwm.u_reg.u_cfg0_qe.d_i  = \u_pwm.u_reg._cfg_we  & \u_pwm.u_reg._cfg_regwen ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wr_data  = \$174y  & \$176y ;
  assign \u_pwm.u_reg.u_pwm_en0_qe.d_i  = \u_pwm.u_reg._pwm_en_we  & \u_pwm.u_reg._pwm_en_regwen ;
  assign \u_pwm.u_reg.u_invert0_qe.d_i  = \u_pwm.u_reg._invert_we  & \u_pwm.u_reg._invert_regwen ;
  assign \u_pwm.u_reg.u_pwm_param0_qe.d_i  = \u_pwm.u_reg._pwm_param_0_we  & \u_pwm.u_reg._pwm_param_0_regwen ;
  assign \u_pwm.u_reg.u_pwm_param1_qe.d_i  = \u_pwm.u_reg._pwm_param_1_we  & \u_pwm.u_reg._pwm_param_1_regwen ;
  assign \u_pwm.u_reg.u_duty_cycle0_qe.d_i  = \u_pwm.u_reg._duty_cycle_0_we  & \u_pwm.u_reg._duty_cycle_0_regwen ;
  assign \u_pwm.u_reg.u_duty_cycle1_qe.d_i  = \u_pwm.u_reg._duty_cycle_1_we  & \u_pwm.u_reg._duty_cycle_1_regwen ;
  assign \u_pwm.u_reg.u_blink_param0_qe.d_i  = \u_pwm.u_reg._blink_param_0_we  & \u_pwm.u_reg._blink_param_0_regwen ;
  assign \u_pwm.u_reg.u_blink_param1_qe.d_i  = \u_pwm.u_reg._blink_param_1_we  & \u_pwm.u_reg._blink_param_1_regwen ;
  assign \$1987y  = \u_pwm.u_reg.reg_re  || \u_pwm.u_reg.reg_we ;
  assign \$1988y  = | { \u_gpio.u_reg.addr_hit [9:4], \u_gpio.u_reg.addr_hit [2:0], \u_pwm.u_reg.addr_hit [3] };
  assign \$1989y  = ! \$1988y ;
  assign \u_pwm.u_reg.addrmiss  = \$1987y  ? \$1989y  : 1'h0;
  assign \$1995y  = \u_gpio.u_reg.addr_hit [0] & \$1992y [0];
  assign \$1999y  = \u_gpio.u_reg.addr_hit [1] & \$1998y ;
  assign \$2000y  = \$1995y  | \$1999y ;
  assign \$2004y  = \u_gpio.u_reg.addr_hit [2] & \$1992y [0];
  assign \$2005y  = \$2000y  | \$2004y ;
  assign \$2009y  = \u_pwm.u_reg.addr_hit [3] & \$1992y [0];
  assign \$2010y  = \$2005y  | \$2009y ;
  assign \$2014y  = \u_gpio.u_reg.addr_hit [4] & \$1998y ;
  assign \$2015y  = \$2010y  | \$2014y ;
  assign \$2019y  = \u_gpio.u_reg.addr_hit [5] & \$1998y ;
  assign \$2020y  = \$2015y  | \$2019y ;
  assign \$2024y  = \u_gpio.u_reg.addr_hit [6] & \$1998y ;
  assign \$2025y  = \$2020y  | \$2024y ;
  assign \$2029y  = \u_gpio.u_reg.addr_hit [7] & \$1998y ;
  assign \$2030y  = \$2025y  | \$2029y ;
  assign \$2034y  = \u_gpio.u_reg.addr_hit [8] & \$1998y ;
  assign \$2035y  = \$2030y  | \$2034y ;
  assign \$2039y  = \u_gpio.u_reg.addr_hit [9] & \$1998y ;
  assign \$2040y  = \$2035y  | \$2039y ;
  assign \u_pwm.u_reg.wr_err  = \u_pwm.u_reg.reg_we  & \$2040y ;
  assign \$2042y  = \u_gpio.u_reg.addr_hit [0] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.we  = \$2042y  & \$2043y ;
  assign \$2045y  = \u_gpio.u_reg.addr_hit [1] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  = \$2045y  & \$2043y ;
  assign \$2048y  = \u_gpio.u_reg.addr_hit [2] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  = \$2048y  & \$2043y ;
  assign \$2051y  = \u_pwm.u_reg.addr_hit [3] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i  = \$2051y  & \$2043y ;
  assign \$2054y  = \u_gpio.u_reg.addr_hit [4] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i  = \$2054y  & \$2043y ;
  assign \$2057y  = \u_gpio.u_reg.addr_hit [5] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i  = \$2057y  & \$2043y ;
  assign \$2060y  = \u_gpio.u_reg.addr_hit [6] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i  = \$2060y  & \$2043y ;
  assign \$2063y  = \u_gpio.u_reg.addr_hit [7] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i  = \$2063y  & \$2043y ;
  assign \$2066y  = \u_gpio.u_reg.addr_hit [8] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i  = \$2066y  & \$2043y ;
  assign \$2069y  = \u_gpio.u_reg.addr_hit [9] & \u_pwm.u_reg.reg_we ;
  assign \$2043y  = ! \u_pwm.u_reg.reg_error ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i  = \$2069y  & \$2043y ;
  assign \$2082y  = \$2081y  | \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \$2083y  = \$2082y  | \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \$2084y  = \$2083y  | \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \$2085y  = \$2084y  | \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  assign \$2086y  = \$2085y  | \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  assign \$2087y  = \$2086y  | \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  = \$2087y  | \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  assign \$2081y  = \u_pwm.u_reg.u_pwm_en0_qe.q_o  | \u_pwm.u_reg.u_invert0_qe.q_o ;
  assign \$2090y  = \$2081y  | \u_pwm.u_reg.u_pwm_param1_qe.q_o ;
  assign \$2091y  = \$2090y  | \u_pwm.u_reg.u_pwm_param1_qe.q_o ;
  assign \$2092y  = \$2091y  | \u_pwm.u_reg.u_pwm_param1_qe.q_o ;
  assign \$2093y  = \$2092y  | \u_pwm.u_reg.u_duty_cycle1_qe.q_o ;
  assign \$2094y  = \$2093y  | \u_pwm.u_reg.u_duty_cycle1_qe.q_o ;
  assign \$2095y  = \$2094y  | \u_pwm.u_reg.u_blink_param1_qe.q_o ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i  = \$2095y  | \u_pwm.u_reg.u_blink_param1_qe.q_o ;
  assign \$2098y  = \u_pwm.u_pwm_core.beat_ctr_q  + 27'h0000001;
  assign \$2099y  = \u_pwm.u_pwm_core.beat_end  ? 27'h0000000 : \$2098y ;
  assign \$21y  = \u_uart.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \u_pwm.u_pwm_core.beat_ctr_d  = \u_pwm.u_reg.u_cfg0_qe.q_o  ? 27'h0000000 : \$2099y ;
  assign \u_pwm.u_pwm_core.beat_end  = \u_pwm.u_pwm_core.beat_ctr_q  == \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_pwm_core.lshift  = 4'hf - \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.beat_ctr_en  = \u_pwm.u_reg.u_cfg0_qe.q_o  | \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_pwm_core.phase_ctr_en  = \u_pwm.u_pwm_core.beat_end  & \u_pwm.u_pwm_core.beat_ctr_en ;
  assign \u_pwm.u_pwm_core.phase_ctr_incr  = 16'h0001 << \u_pwm.u_pwm_core.lshift ;
  assign { \u_pwm.u_pwm_core.phase_ctr_overflow , \u_pwm.u_pwm_core.phase_ctr_next  } = { 1'h0, \u_pwm.u_pwm_core.phase_ctr_q  } + { 1'h0, \u_pwm.u_pwm_core.phase_ctr_incr  };
  assign \u_pwm.u_pwm_core.phase_ctr_d  = \u_pwm.u_reg.u_cfg0_qe.q_o  ? 16'h0000 : \u_pwm.u_pwm_core.phase_ctr_next ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  = \u_pwm.u_pwm_core.beat_end  & \u_pwm.u_pwm_core.phase_ctr_overflow ;
  assign \$2118y  = { 1'h0, \u_pwm.u_reg.u_blink_param_0_x_0.q  } + { 1'h0, \u_pwm.u_reg.u_blink_param_0_y_0.q  };
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.unused_sum , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_sum  } = \$2118y  + 17'h00001;
  assign \$2122y  = ! \$2121y ;
  assign \$2123y  = \$2122y  || \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  assign \$2124y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  == \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_sum ;
  assign \$2125y  = \$2124y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \$2126y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  + 16'h0001;
  assign \$2127y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  ? \$2126y  : 16'hxxxx;
  assign \$2128y  = \$2125y  ? 16'h0000 : \$2127y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_d  = \$2123y  ? 16'h0000 : \$2128y ;
  assign \$2135y  = \$2121y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_d  : 16'hxxxx;
  assign \$2139y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  > \u_pwm.u_reg.u_blink_param_0_x_0.q ;
  assign \$2140y  = \$2121y  && \$2139y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_blink  = \$2140y  ? \u_pwm.u_reg.u_duty_cycle_0_b_0.q  : \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  assign \$2143y  = ! \$2142y ;
  assign \$2144y  = \$2143y  || \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  assign \$2147y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  + 16'h0001;
  assign \$2148y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  ? \$2147y  : 16'hxxxx;
  assign \$2149y  = \$2146y  ? 16'h0000 : \$2148y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_d  = \$2144y  ? 16'h0000 : \$2149y ;
  assign \$2155y  = \$2142y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_d  : 16'hxxxx;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  & \$2145y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  = \u_pwm.u_reg.u_duty_cycle_0_a_0.q  < \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt  = \u_pwm.u_reg.u_duty_cycle_0_a_0.q  > \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  assign \$2167y  = ! \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt ;
  assign \$2168y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  >= \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  assign \$2170y  = \$2168y  || \$2169y ;
  assign \$2171y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  && \$2170y ;
  assign \$2173y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  && \$2172y ;
  assign \$2174y  = \$2173y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q ;
  assign \$2175y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  <= \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  assign \$2169y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end ;
  assign \$2177y  = \$2175y  || \$2169y ;
  assign \$2178y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt  && \$2177y ;
  assign \$2180y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt  && \$2172y ;
  assign \$2181y  = \$2180y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q ;
  assign \$2187y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt ;
  assign \$2188y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pattern_repeat  = \$2187y  & \$2188y ;
  assign \$2172y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  == \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  assign \$2193y  = \$2172y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pattern_repeat ;
  assign \$2194y  = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  } - { 1'h0, \u_pwm.u_reg.u_blink_param_0_y_0.q  };
  assign \$2195y  = \$2194y  - 17'h00001;
  assign \$2196y  = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  } + { 1'h0, \u_pwm.u_reg.u_blink_param_0_y_0.q  };
  assign \$2197y  = \$2196y  + 17'h00001;
  assign \$2198y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction  ? \$2195y  : \$2197y ;
  assign \$2199y  = \$2193y  ? { 1'h0, \u_pwm.u_reg.u_duty_cycle_0_a_0.q  } : \$2198y ;
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_d  } = \$2145y  ? \$2199y  : 17'h0xxxx;
  assign \$2206y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction ;
  assign \$2207y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap  & \$2206y ;
  assign \$2208y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap  & \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction ;
  assign \$2209y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  ? \$2207y  : \$2208y ;
  assign \$2215y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  != \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  assign \$2216y  = \$2120y  && \$2215y ;
  assign \$2145y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  == \u_pwm.u_reg.u_blink_param_0_x_0.q ;
  assign \$2146y  = \$2145y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \$2219y  = \$2146y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_d  : 16'hxxxx;
  assign \$2222y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  ? 16'hffff : 16'h0000;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_htbt  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q  ? \$2222y  : \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q ;
  assign \$2120y  = ! \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q ;
  assign \$2121y  = \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q  && \$2120y ;
  assign \$2142y  = \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q  && \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q ;
  assign \$2227y  = \$2142y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_htbt  : \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_actual  = \$2121y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_blink  : \$2227y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase  = \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q  & \$2231y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_actual  & \$2231y ;
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase  } = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase  } + { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked  };
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase ;
  assign \$2245y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  | \$2244y ;
  assign \$2244y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded ;
  assign \$2247y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  & \$2244y ;
  assign \$2248y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap  ? \$2245y  : \$2247y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  ? \$2248y  : 1'h0;
  assign \$2250y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o  = \u_pwm.u_reg.u_invert_invert_0.q  ? \$2250y  : \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int ;
  assign \$2252y  = { 1'h0, \u_pwm.u_reg.u_blink_param_1_x_1.q  } + { 1'h0, \u_pwm.u_reg.u_blink_param_1_y_1.q  };
  assign { \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.unused_sum , \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_sum  } = \$2252y  + 17'h00001;
  assign \$2256y  = ! \$2255y ;
  assign \$2257y  = \$2256y  || \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i ;
  assign \$2258y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_ctr_q  == \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_sum ;
  assign \$2259y  = \$2258y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \$2260y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_ctr_q  + 16'h0001;
  assign \$2261y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  ? \$2260y  : 16'hxxxx;
  assign \$2262y  = \$2259y  ? 16'h0000 : \$2261y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_ctr_d  = \$2257y  ? 16'h0000 : \$2262y ;
  assign \$2269y  = \$2255y  ? \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_ctr_d  : 16'hxxxx;
  assign \$2273y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_ctr_q  > \u_pwm.u_reg.u_blink_param_1_x_1.q ;
  assign \$2274y  = \$2255y  && \$2273y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_blink  = \$2274y  ? \u_pwm.u_reg.u_duty_cycle_1_b_1.q  : \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  assign \$2277y  = ! \$2276y ;
  assign \$2278y  = \$2277y  || \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i ;
  assign \$2281y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_ctr_q  + 16'h0001;
  assign \$2282y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  ? \$2281y  : 16'hxxxx;
  assign \$2283y  = \$2280y  ? 16'h0000 : \$2282y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_ctr_d  = \$2278y  ? 16'h0000 : \$2283y ;
  assign \$2289y  = \$2276y  ? \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_ctr_d  : 16'hxxxx;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_end  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  & \$2279y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pos_htbt  = \u_pwm.u_reg.u_duty_cycle_1_a_1.q  < \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.neg_htbt  = \u_pwm.u_reg.u_duty_cycle_1_a_1.q  > \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  assign \$2301y  = ! \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pos_htbt ;
  assign \$2302y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q  >= \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  assign \$2304y  = \$2302y  || \$2303y ;
  assign \$2305y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pos_htbt  && \$2304y ;
  assign \$2307y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pos_htbt  && \$2306y ;
  assign \$2308y  = \$2307y  && \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_end_q ;
  assign \$2309y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q  <= \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  assign \$2303y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_wrap  && \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_end ;
  assign \$2311y  = \$2309y  || \$2303y ;
  assign \$2312y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.neg_htbt  && \$2311y ;
  assign \$2314y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.neg_htbt  && \$2306y ;
  assign \$2315y  = \$2314y  && \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_end_q ;
  assign \$2321y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pos_htbt ;
  assign \$2322y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.neg_htbt ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pattern_repeat  = \$2321y  & \$2322y ;
  assign \$2306y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q  == \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  assign \$2327y  = \$2306y  && \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pattern_repeat ;
  assign \$2328y  = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q  } - { 1'h0, \u_pwm.u_reg.u_blink_param_1_y_1.q  };
  assign \$2329y  = \$2328y  - 17'h00001;
  assign \$2330y  = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q  } + { 1'h0, \u_pwm.u_reg.u_blink_param_1_y_1.q  };
  assign \$2331y  = \$2330y  + 17'h00001;
  assign \$2332y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_direction  ? \$2329y  : \$2331y ;
  assign \$2333y  = \$2327y  ? { 1'h0, \u_pwm.u_reg.u_duty_cycle_1_a_1.q  } : \$2332y ;
  assign { \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_wrap , \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_d  } = \$2279y  ? \$2333y  : 17'h0xxxx;
  assign \$2340y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_direction ;
  assign \$2341y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_wrap  & \$2340y ;
  assign \$2342y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_wrap  & \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_direction ;
  assign \$2343y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pos_htbt  ? \$2341y  : \$2342y ;
  assign \$2349y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q  != \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  assign \$2350y  = \$2254y  && \$2349y ;
  assign \$2279y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_ctr_q  == \u_pwm.u_reg.u_blink_param_1_x_1.q ;
  assign \$2280y  = \$2279y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \$2353y  = \$2280y  ? \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_d  : 16'hxxxx;
  assign \$2356y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pos_htbt  ? 16'hffff : 16'h0000;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_htbt  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_wrap_q  ? \$2356y  : \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q ;
  assign \$2254y  = ! \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q ;
  assign \$2255y  = \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q  && \$2254y ;
  assign \$2276y  = \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q  && \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q ;
  assign \$2361y  = \$2276y  ? \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_htbt  : \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_actual  = \$2255y  ? \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_blink  : \$2361y ;
  assign \$2229y  = { 28'h0000000, \u_pwm.u_reg.u_cfg_dc_resn.q  } + 32'd1;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_mask  = 16'hffff >> \$2229y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.on_phase  = \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q  & \$2231y ;
  assign \$2231y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_mask ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_masked  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_actual  & \$2231y ;
  assign { \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.phase_wrap , \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.off_phase  } = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.on_phase  } + { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_masked  };
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.on_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.off_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.off_phase ;
  assign \$2379y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.on_phase_exceeded  | \$2378y ;
  assign \$2378y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.off_phase_exceeded ;
  assign \$2381y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.on_phase_exceeded  & \$2378y ;
  assign \$2382y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.phase_wrap  ? \$2379y  : \$2381y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_int  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_en_q  ? \$2382y  : 1'h0;
  assign \$2384y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_int ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_o  = \u_pwm.u_reg.u_invert_invert_1.q  ? \$2384y  : \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_int ;
  assign \u_gpio.gen_filter[0].u_filter.update_stored_value  = \u_gpio.gen_filter[0].u_filter.diff_ctr_d  == 4'hf;
  assign \$2404y  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[0].u_filter.filter_q ;
  assign \$2405y  = \u_gpio.gen_filter[0].u_filter.diff_ctr_q  >= 4'hf;
  assign \$2406y  = \u_gpio.gen_filter[0].u_filter.diff_ctr_q  + 4'h1;
  assign \$2407y  = \$2405y  ? 4'hf : \$2406y ;
  assign \u_gpio.gen_filter[0].u_filter.diff_ctr_d  = \$2404y  ? 4'h0 : \$2407y ;
  assign \u_gpio.gen_filter[0].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [0] ? \u_gpio.gen_filter[0].u_filter.stored_value_q  : \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.update_stored_value  = \u_gpio.gen_filter[1].u_filter.diff_ctr_d  == 4'hf;
  assign \$2428y  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[1].u_filter.filter_q ;
  assign \$2429y  = \u_gpio.gen_filter[1].u_filter.diff_ctr_q  >= 4'hf;
  assign \$2430y  = \u_gpio.gen_filter[1].u_filter.diff_ctr_q  + 4'h1;
  assign \$2431y  = \$2429y  ? 4'hf : \$2430y ;
  assign \u_gpio.gen_filter[1].u_filter.diff_ctr_d  = \$2428y  ? 4'h0 : \$2431y ;
  assign \u_gpio.gen_filter[1].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [1] ? \u_gpio.gen_filter[1].u_filter.stored_value_q  : \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[2].u_filter.update_stored_value  = \u_gpio.gen_filter[2].u_filter.diff_ctr_d  == 4'hf;
  assign \$2452y  = \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[2].u_filter.filter_q ;
  assign \$2453y  = \u_gpio.gen_filter[2].u_filter.diff_ctr_q  >= 4'hf;
  assign \$2454y  = \u_gpio.gen_filter[2].u_filter.diff_ctr_q  + 4'h1;
  assign \$2455y  = \$2453y  ? 4'hf : \$2454y ;
  assign \u_gpio.gen_filter[2].u_filter.diff_ctr_d  = \$2452y  ? 4'h0 : \$2455y ;
  assign \u_gpio.gen_filter[2].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [2] ? \u_gpio.gen_filter[2].u_filter.stored_value_q  : \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[3].u_filter.update_stored_value  = \u_gpio.gen_filter[3].u_filter.diff_ctr_d  == 4'hf;
  assign \$2476y  = \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[3].u_filter.filter_q ;
  assign \$2477y  = \u_gpio.gen_filter[3].u_filter.diff_ctr_q  >= 4'hf;
  assign \$2478y  = \u_gpio.gen_filter[3].u_filter.diff_ctr_q  + 4'h1;
  assign \$2479y  = \$2477y  ? 4'hf : \$2478y ;
  assign \u_gpio.gen_filter[3].u_filter.diff_ctr_d  = \$2476y  ? 4'h0 : \$2479y ;
  assign \u_gpio.gen_filter[3].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [3] ? \u_gpio.gen_filter[3].u_filter.stored_value_q  : \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \$2487y  = \$2486y  & \u_gpio.cio_gpio_q [3:2];
  assign \$2488y  = \$2485y  | \$2487y ;
  assign \$2491y  = \$2486y  & \u_gpio.cio_gpio_q [1:0];
  assign \$2492y  = \$2485y  | \$2491y ;
  assign \$2501y  = \$2486y  & \u_gpio.cio_gpio_en_q [3:2];
  assign \$2502y  = \$2485y  | \$2501y ;
  assign \$2485y  = \u_gpio.u_reg.reg_wdata [3:2] & \u_gpio.u_reg.reg_wdata [1:0];
  assign \$2486y  = ~ \u_gpio.u_reg.reg_wdata [3:2];
  assign \$2505y  = \$2486y  & \u_gpio.cio_gpio_en_q [1:0];
  assign \$2506y  = \$2485y  | \$2505y ;
  assign \$2511y  = { \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.intr_hw.reg2hw_intr_test_qe_i  } & \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.intr_hw.g_intr_event.new_event  = \$2511y  | \u_gpio.intr_hw.event_intr_i ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de  = | \u_gpio.intr_hw.g_intr_event.new_event ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d  = \u_gpio.intr_hw.g_intr_event.new_event  | \u_gpio.u_reg.u_intr_state.q ;
  assign \$2519y  = ~ \u_gpio.data_in_q ;
  assign \$2520y  = \$2519y  & { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_rise  = \$2520y  & \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \$2523y  = \u_gpio.data_in_q  & \$2522y ;
  assign \u_gpio.event_intr_fall  = \$2523y  & \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.event_intr_acthigh  = { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  } & \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \$2522y  = ~ { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_actlow  = \$2522y  & \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \$2528y  = \u_gpio.event_intr_rise  | \u_gpio.event_intr_fall ;
  assign \$2529y  = \$2528y  | \u_gpio.event_intr_actlow ;
  assign \u_gpio.intr_hw.event_intr_i  = \$2529y  | \u_gpio.event_intr_acthigh ;
  assign \u_gpio.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \u_gpio.u_reg.reg_we  = \u_gpio.u_reg.u_reg_if.a_ack  & \$1151y ;
  assign \u_gpio.u_reg.reg_re  = \u_gpio.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$2552y  = \u_gpio.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$2560y  = \u_gpio.u_reg.reg_error  || \u_gpio.u_reg.reg_we ;
  assign \$2561y  = \$2560y  ? 32'd4294967295 : \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  = ~ \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.reg_error  = \u_gpio.u_reg.addrmiss  | \u_gpio.u_reg.wr_err ;
  assign \u_gpio.u_reg.u_intr_state.qe  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  | \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \$2645y  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de  ? \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d  : \u_gpio.u_reg.u_intr_state.q ;
  assign \$2646y  = ~ \u_gpio.u_reg.reg_wdata [3:0];
  assign \$2647y  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  ? \$2646y  : 4'hf;
  assign \u_gpio.u_reg.u_intr_state.wr_data  = \$2645y  & \$2647y ;
  assign \u_gpio.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_gpio.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [5:2] == 4'h1;
  assign \u_gpio.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [5:2] == 4'h2;
  assign \u_pwm.u_reg.addr_hit [3] = \u_uart.u_bridge.addr_q [5:2] == 4'h3;
  assign \u_gpio.u_reg.addr_hit [4] = \u_uart.u_bridge.addr_q [5:2] == 4'h4;
  assign \u_gpio.u_reg.addr_hit [5] = \u_uart.u_bridge.addr_q [5:2] == 4'h5;
  assign \u_gpio.u_reg.addr_hit [6] = \u_uart.u_bridge.addr_q [5:2] == 4'h6;
  assign \u_gpio.u_reg.addr_hit [7] = \u_uart.u_bridge.addr_q [5:2] == 4'h7;
  assign \u_gpio.u_reg.addr_hit [8] = \u_uart.u_bridge.addr_q [5:2] == 4'h8;
  assign \u_gpio.u_reg.addr_hit [9] = \u_uart.u_bridge.addr_q [5:2] == 4'h9;
  assign \u_gpio.u_reg.addr_hit [10] = \u_uart.u_bridge.addr_q [5:2] == 4'ha;
  assign \u_gpio.u_reg.addr_hit [11] = \u_uart.u_bridge.addr_q [5:2] == 4'hb;
  assign \u_gpio.u_reg.addr_hit [12] = \u_uart.u_bridge.addr_q [5:2] == 4'hc;
  assign \u_gpio.u_reg.addr_hit [13] = \u_uart.u_bridge.addr_q [5:2] == 4'hd;
  assign \u_gpio.u_reg.addr_hit [14] = \u_uart.u_bridge.addr_q [5:2] == 4'he;
  assign \$2730y  = \u_gpio.u_reg.reg_re  || \u_gpio.u_reg.reg_we ;
  assign \$2732y  = ! \$2731y ;
  assign \u_gpio.u_reg.addrmiss  = \$2730y  ? \$2732y  : 1'h0;
  assign \$2742y  = \u_gpio.u_reg.addr_hit [1] & \$1992y [0];
  assign \$2743y  = \$1995y  | \$2742y ;
  assign \$2748y  = \$2743y  | \$2004y ;
  assign \$2753y  = \$2748y  | \$2009y ;
  assign \$2757y  = \u_gpio.u_reg.addr_hit [4] & \$1992y [0];
  assign \$2758y  = \$2753y  | \$2757y ;
  assign \$2762y  = \u_gpio.u_reg.addr_hit [5] & \$1992y [0];
  assign \$2763y  = \$2758y  | \$2762y ;
  assign \$2767y  = \u_gpio.u_reg.addr_hit [6] & \$1992y [0];
  assign \$2768y  = \$2763y  | \$2767y ;
  assign \$2772y  = \u_gpio.u_reg.addr_hit [7] & \$1992y [0];
  assign \$2773y  = \$2768y  | \$2772y ;
  assign \$2777y  = \u_gpio.u_reg.addr_hit [8] & \$1992y [0];
  assign \$2778y  = \$2773y  | \$2777y ;
  assign \$2782y  = \u_gpio.u_reg.addr_hit [9] & \$1992y [0];
  assign \$2783y  = \$2778y  | \$2782y ;
  assign \$2787y  = \u_gpio.u_reg.addr_hit [10] & \$1992y [0];
  assign \$2788y  = \$2783y  | \$2787y ;
  assign \$2792y  = \u_gpio.u_reg.addr_hit [11] & \$1992y [0];
  assign \$2793y  = \$2788y  | \$2792y ;
  assign \$2797y  = \u_gpio.u_reg.addr_hit [12] & \$1992y [0];
  assign \$2798y  = \$2793y  | \$2797y ;
  assign \$2802y  = \u_gpio.u_reg.addr_hit [13] & \$1992y [0];
  assign \$2803y  = \$2798y  | \$2802y ;
  assign \$2807y  = \u_gpio.u_reg.addr_hit [14] & \$1992y [0];
  assign \$2808y  = \$2803y  | \$2807y ;
  assign \u_gpio.u_reg.wr_err  = \u_gpio.u_reg.reg_we  & \$2808y ;
  assign \$2810y  = \u_gpio.u_reg.addr_hit [0] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  = \$2810y  & \$2811y ;
  assign \$2813y  = \u_gpio.u_reg.addr_hit [1] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_enable_we  = \$2813y  & \$2811y ;
  assign \$2816y  = \u_gpio.u_reg.addr_hit [2] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.intr_hw.reg2hw_intr_test_qe_i  = \$2816y  & \$2811y ;
  assign \$2822y  = \u_gpio.u_reg.addr_hit [4] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.direct_out_flds_we  = \$2822y  & \$2811y ;
  assign \$2828y  = \u_gpio.u_reg.addr_hit [5] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.masked_out_lower_qe  = \$2828y  & \$2811y ;
  assign \$2834y  = \u_gpio.u_reg.addr_hit [6] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.masked_out_upper_qe  = \$2834y  & \$2811y ;
  assign \$2840y  = \u_gpio.u_reg.addr_hit [7] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.direct_oe_flds_we  = \$2840y  & \$2811y ;
  assign \$2846y  = \u_gpio.u_reg.addr_hit [8] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.masked_oe_lower_qe  = \$2846y  & \$2811y ;
  assign \$2852y  = \u_gpio.u_reg.addr_hit [9] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.masked_oe_upper_qe  = \$2852y  & \$2811y ;
  assign \$2855y  = \u_gpio.u_reg.addr_hit [10] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_en_rising_we  = \$2855y  & \$2811y ;
  assign \$2858y  = \u_gpio.u_reg.addr_hit [11] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_en_falling_we  = \$2858y  & \$2811y ;
  assign \$2861y  = \u_gpio.u_reg.addr_hit [12] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we  = \$2861y  & \$2811y ;
  assign \$2864y  = \u_gpio.u_reg.addr_hit [13] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_we  = \$2864y  & \$2811y ;
  assign \$2867y  = \u_gpio.u_reg.addr_hit [14] & \u_gpio.u_reg.reg_we ;
  assign \$2811y  = ! \u_gpio.u_reg.reg_error ;
  assign \u_gpio.u_reg.ctrl_en_input_filter_we  = \$2867y  & \$2811y ;
  assign \u_rv_timer.mtimecmp_update  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  | \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  | \u_rv_timer.mtimecmp_update ;
  assign \$2876y  = ~ \u_rv_timer.mtimecmp_update ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d  = \u_rv_timer.intr_timer_state_d  & \$2876y ;
  assign \$2878y  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i  & \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  = \$2878y  | \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.intr_timer_state_d  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  | \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \$2890y  = \u_rv_timer.gen_harts[0].u_core.tick_count  == \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \$2891y  = \u_rv_timer.gen_harts[0].u_core.tick_count  + 12'h001;
  assign \$2894y  = \u_rv_timer.gen_harts[0].u_core.tick_count  >= \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  = \u_rv_timer.u_reg.u_ctrl.q  & \$2894y ;
  assign \u_rv_timer.gen_harts[0].u_core.mtime_d  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  } + { 56'h00000000000000, \u_rv_timer.u_reg.u_cfg0_step.q  };
  assign \$2897y  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  } >= { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i  = \u_rv_timer.u_reg.u_ctrl.q  & \$2897y ;
  assign \$29y  = \u_uart.u_reg.reg_error  || \u_uart.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \u_rv_timer.u_reg.reg_we  = \u_rv_timer.u_reg.u_reg_if.a_ack  & \$1151y ;
  assign \u_rv_timer.u_reg.reg_re  = \u_rv_timer.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$2920y  = \u_rv_timer.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$2928y  = \u_rv_timer.u_reg.reg_error  || \u_rv_timer.u_reg.reg_we ;
  assign \$2929y  = \$2928y  ? 32'd4294967295 : \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  = ~ \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.u_reg_if.u_err.op_full  = ! \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105];
  assign \u_gpio.u_reg.u_reg_if.u_err.op_partial  = \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] == 3'h1;
  assign \$1151y  = \u_gpio.u_reg.u_reg_if.u_err.op_full  | \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_gpio.u_reg.u_reg_if.u_err.op_get  = \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] == 3'h4;
  assign \$30y  = \$29y  ? 32'd4294967295 : \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_rv_timer.u_reg.reg_error  = \u_rv_timer.u_reg.addrmiss  | \u_rv_timer.u_reg.wr_err ;
  assign \u_rv_timer.u_reg.u_intr_state0.qe  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  assign \$3029y  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de  ? \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d  : \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \$3030y  = ~ \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \$3031y  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  ? \$3030y  : 1'h1;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_data  = \$3029y  & \$3031y ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.qe  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  ? \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  : \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.qe  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_data  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  ? \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  : \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [8:2] == 7'h40;
  assign \u_rv_timer.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [8:2] == 7'h41;
  assign \u_rv_timer.u_reg.addr_hit [3] = \u_uart.u_bridge.addr_q [8:2] == 7'h42;
  assign \u_rv_timer.u_reg.addr_hit [4] = \u_uart.u_bridge.addr_q [8:2] == 7'h43;
  assign \u_rv_timer.u_reg.addr_hit [5] = \u_uart.u_bridge.addr_q [8:2] == 7'h44;
  assign \u_rv_timer.u_reg.addr_hit [6] = \u_uart.u_bridge.addr_q [8:2] == 7'h45;
  assign \u_rv_timer.u_reg.addr_hit [7] = \u_uart.u_bridge.addr_q [8:2] == 7'h46;
  assign \u_rv_timer.u_reg.addr_hit [8] = \u_uart.u_bridge.addr_q [8:2] == 7'h47;
  assign \$3105y  = \u_rv_timer.u_reg.reg_re  || \u_rv_timer.u_reg.reg_we ;
  assign \$3106y  = | \u_rv_timer.u_reg.addr_hit ;
  assign \$3107y  = ! \$3106y ;
  assign \u_rv_timer.u_reg.addrmiss  = \$3105y  ? \$3107y  : 1'h0;
  assign \$3113y  = \u_rv_timer.u_reg.addr_hit [0] & \$1992y [0];
  assign \$3117y  = \u_rv_timer.u_reg.addr_hit [1] & \$1992y [0];
  assign \$3118y  = \$3113y  | \$3117y ;
  assign \$3122y  = \u_rv_timer.u_reg.addr_hit [2] & \$1992y [0];
  assign \$3123y  = \$3118y  | \$3122y ;
  assign \$3127y  = \u_rv_timer.u_reg.addr_hit [3] & \$1992y [0];
  assign \$3128y  = \$3123y  | \$3127y ;
  assign \$1992y  = ~ \u_rv_timer.u_reg.reg_be ;
  assign \$3131y  = | \$1992y [2:0];
  assign \$3132y  = \u_rv_timer.u_reg.addr_hit [4] & \$3131y ;
  assign \$3133y  = \$3128y  | \$3132y ;
  assign \$3137y  = \u_rv_timer.u_reg.addr_hit [5] & \$1998y ;
  assign \$3138y  = \$3133y  | \$3137y ;
  assign \$3142y  = \u_rv_timer.u_reg.addr_hit [6] & \$1998y ;
  assign \$3143y  = \$3138y  | \$3142y ;
  assign \$1998y  = | \$1992y ;
  assign \$3147y  = \u_rv_timer.u_reg.addr_hit [7] & \$1998y ;
  assign \$3148y  = \$3143y  | \$3147y ;
  assign \$3152y  = \u_rv_timer.u_reg.addr_hit [8] & \$1998y ;
  assign \$3153y  = \$3148y  | \$3152y ;
  assign \u_rv_timer.u_reg.wr_err  = \u_rv_timer.u_reg.reg_we  & \$3153y ;
  assign \$3155y  = \u_rv_timer.u_reg.addr_hit [0] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.ctrl_we  = \$3155y  & \$3156y ;
  assign \$3158y  = \u_rv_timer.u_reg.addr_hit [1] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.intr_enable0_we  = \$3158y  & \$3156y ;
  assign \$3161y  = \u_rv_timer.u_reg.addr_hit [2] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  = \$3161y  & \$3156y ;
  assign \$3164y  = \u_rv_timer.u_reg.addr_hit [3] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i  = \$3164y  & \$3156y ;
  assign \$3167y  = \u_rv_timer.u_reg.addr_hit [4] & \u_rv_timer.u_reg.reg_we ;
  assign \$3156y  = ! \u_rv_timer.u_reg.reg_error ;
  assign \u_rv_timer.u_reg.cfg0_we  = \$3167y  & \$3156y ;
  assign \$3170y  = \u_rv_timer.u_reg.addr_hit [5] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  = \$3170y  & \$3156y ;
  assign \$3173y  = \u_rv_timer.u_reg.addr_hit [6] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  = \$3173y  & \$3156y ;
  assign \$3176y  = \u_rv_timer.u_reg.addr_hit [7] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i  = \$3176y  & \$3156y ;
  assign \$3179y  = \u_rv_timer.u_reg.addr_hit [8] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i  = \$3179y  & \$3156y ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  = ~ \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \$428y  = \u_uart.u_reg.reg_re  || \u_uart.u_reg.reg_we ;
  assign \$429y  = | { \u_gpio.u_reg.addr_hit [12:4], \u_gpio.u_reg.addr_hit [2:0], \u_pwm.u_reg.addr_hit [3] };
  assign \$430y  = ! \$429y ;
  assign \u_uart.u_reg.addrmiss  = \$428y  ? \$430y  : 1'h0;
  assign \$436y  = \u_gpio.u_reg.addr_hit [0] & \$435y ;
  assign \$440y  = \u_gpio.u_reg.addr_hit [1] & \$435y ;
  assign \$441y  = \$436y  | \$440y ;
  assign \$445y  = \u_gpio.u_reg.addr_hit [2] & \$435y ;
  assign \$446y  = \$441y  | \$445y ;
  assign \$451y  = \$446y  | \$2009y ;
  assign \$456y  = \$451y  | \$2014y ;
  assign \$461y  = \$456y  | \$2762y ;
  assign \$466y  = \$461y  | \$2767y ;
  assign \$471y  = \$466y  | \$2772y ;
  assign \$476y  = \$471y  | \$2777y ;
  assign \$480y  = \u_gpio.u_reg.addr_hit [9] & \$3131y ;
  assign \$481y  = \$476y  | \$480y ;
  assign \$486y  = \$481y  | \$2787y ;
  assign \$435y  = | \$1992y [1:0];
  assign \$490y  = \u_gpio.u_reg.addr_hit [11] & \$435y ;
  assign \$491y  = \$486y  | \$490y ;
  assign \$495y  = \u_gpio.u_reg.addr_hit [12] & \$1998y ;
  assign \$496y  = \$491y  | \$495y ;
  assign \u_uart.u_reg.wr_err  = \u_uart.u_reg.reg_we  & \$496y ;
  assign \$498y  = \u_gpio.u_reg.addr_hit [0] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we  = \$498y  & \$499y ;
  assign \$501y  = \u_gpio.u_reg.addr_hit [1] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.intr_enable_we  = \$501y  & \$499y ;
  assign \$504y  = \u_gpio.u_reg.addr_hit [2] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i  = \$504y  & \$499y ;
  assign \$510y  = \u_gpio.u_reg.addr_hit [4] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.ctrl_we  = \$510y  & \$499y ;
  assign \$516y  = \u_gpio.u_reg.addr_hit [6] & \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.rdata_re  = \$516y  & \$499y ;
  assign \$519y  = \u_gpio.u_reg.addr_hit [7] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_wdata0_qe.d_i  = \$519y  & \$499y ;
  assign \$522y  = \u_gpio.u_reg.addr_hit [8] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.d_i  = \$522y  & \$499y ;
  assign \$528y  = \u_gpio.u_reg.addr_hit [10] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.ovrd_we  = \$528y  & \$499y ;
  assign \$534y  = \u_gpio.u_reg.addr_hit [12] & \u_uart.u_reg.reg_we ;
  assign \$499y  = ! \u_uart.u_reg.reg_error ;
  assign \u_uart.u_reg.timeout_ctrl_we  = \$534y  & \$499y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.clr_i  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q  & \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_uart_core.u_uart_txfifo.clr_i  = \u_uart.u_reg.u_fifo_ctrl_txrst.q  & \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \$544y  = | \u_uart.u_uart_core.rx_fifo_data ;
  assign \$545y  = \$543y  | \$544y ;
  assign \u_uart.u_uart_core.not_allzero_char  = \u_uart.u_uart_core.uart_rx.rx_valid_q  & \$545y ;
  assign \$547y  = ! \u_uart.u_uart_core.rx_fifo_data ;
  assign \u_uart.u_uart_core.allzero_err  = \u_uart.u_uart_core.event_rx_frame_err  & \$547y ;
  assign \$550y  = \u_uart.u_uart_core.break_st_q  || \u_uart.u_uart_core.not_allzero_char ;
  assign \$551y  = \u_uart.u_uart_core.allzero_cnt_q  + 5'h01;
  assign \$552y  = \u_uart.u_uart_core.allzero_err  ? \$551y  : \u_uart.u_uart_core.allzero_cnt_q ;
  assign \u_uart.u_uart_core.allzero_cnt_d  = \$550y  ? 5'h00 : \$552y ;
  assign \$559y  = \u_uart.u_uart_core.allzero_cnt_d  >= 5'h02;
  assign \$560y  = \u_uart.u_uart_core.allzero_cnt_d  >= 5'h04;
  assign \$561y  = \u_uart.u_uart_core.allzero_cnt_d  >= 5'h08;
  assign \$562y  = \u_uart.u_uart_core.allzero_cnt_d  >= 5'h10;
  assign \u_uart.u_reg.status_rxempty_qs  = ~ \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_reg.status_txidle_qs  = \u_uart.u_uart_core.tx_uart_idle  & \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.status_txfull_qs  = ~ \u_uart.u_uart_core.tx_fifo_wready ;
  assign \$580y  = { 1'h0, \u_uart.u_uart_core.nco_sum_q [15:0] } + { 1'h0, \u_uart.u_reg.u_ctrl_nco.q  };
  assign \$582y  = \u_uart.u_uart_core.tx_uart_idle  & \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_uart_core.u_uart_txfifo.rready_i  = \$582y  & \u_uart.u_reg.u_ctrl_tx.q ;
  assign \$589y  = ~ \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  assign \u_uart.u_uart_core.tx_fifo_wready  = \$589y  & \$587y ;
  assign \$592y  = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.tx_fifo_rvalid  = \$592y  & \$587y ;
  assign \$595y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h1f;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  & \$595y ;
  assign \$597y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4:0] == 5'h1f;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  & \$597y ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [5] = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5];
  assign \u_uart.u_reg.reg_we  = \u_uart.u_reg.u_reg_if.a_ack  & \$1151y ;
  assign \u_uart.u_uart_core.u_uart_txfifo.full_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [5], \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4:0] };
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  assign \$604y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5] == \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5];
  assign \$605y  = { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] } - { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4:0] };
  assign \$606y  = 6'h20 - { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4:0] };
  assign \$607y  = \$606y  + { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] };
  assign \$608y  = \$604y  ? \$605y  : \$607y ;
  assign \u_uart.u_uart_core.tx_fifo_depth  = \u_uart.u_uart_core.u_uart_txfifo.full_o  ? 6'h20 : \$608y ;
  assign \$613y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  + 6'h01;
  assign \$620y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  + 6'h01;
  assign \$624y  = \u_uart.u_reg.u_wdata0_qe.q_o  & \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  = \$624y  & \$587y ;
  assign \$627y  = \u_uart.u_uart_core.tx_fifo_rvalid  & \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \$587y  = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  = \$627y  & \$587y ;
  assign \$630y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4:0] }) < $signed(7'h20);
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int  = \$630y  ? \$631y  : 8'hxx;
  assign \$634y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] }) < $signed(7'h20);
  assign \$635y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] }) >= $signed(1'h0);
  assign \$636y  = \$635y  && \$634y ;
  assign \$637y  = \$636y  ? 8'hff : 8'h00;
  assign \u_uart.u_uart_core.tx_fifo_data  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty  ? 8'h00 : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  assign \$646y  = { 1'h0, \u_uart.u_uart_core.uart_tx.baud_div_q  } + 5'h01;
  assign \$654y  = \u_uart.u_reg.u_ctrl_parity_en.q  ? \u_uart.u_uart_core.uart_tx.wr_parity  : 1'h1;
  assign \$656y  = | \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  assign \$657y  = \u_uart.u_uart_core.uart_tx.tick_baud_q  && \$656y ;
  assign \$658y  = \u_uart.u_uart_core.uart_tx.bit_cnt_q  - 4'h1;
  assign \$668y  = ! \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  assign \u_uart.u_uart_core.tx_uart_idle  = \u_uart.u_reg.u_ctrl_tx.q  ? \$668y  : 1'h1;
  assign \$670y  = ^ \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.u_uart_core.uart_tx.wr_parity  = \$670y  ^ \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign cio_tx_o = \u_uart.u_reg.u_ctrl_llpbk.q  ? cio_rx_i : \u_uart.u_uart_core.tx_out_q ;
  assign \$688y  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  & \u_uart.u_uart_core.rx_sync_q1 ;
  assign \$689y  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  & \u_uart.u_uart_core.rx_sync_q2 ;
  assign \$690y  = \$688y  | \$689y ;
  assign \$691y  = \u_uart.u_uart_core.rx_sync_q1  & \u_uart.u_uart_core.rx_sync_q2 ;
  assign \u_uart.u_uart_core.rx_in_maj  = \$690y  | \$691y ;
  assign \u_uart.u_uart_core.rx_in_mx  = \u_uart.u_reg.u_ctrl_nf.q  ? \u_uart.u_uart_core.rx_in_maj  : \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \$694y  = \u_uart.u_reg.u_ctrl_llpbk.q  ? 1'h1 : \u_uart.u_uart_core.rx_in_mx ;
  assign \u_uart.u_uart_core.uart_rx.rx  = \u_uart.u_reg.u_ctrl_slpbk.q  ? \u_uart.u_uart_core.uart_tx.tx_q  : \$694y ;
  assign \$701y  = { 1'h0, \u_uart.u_uart_core.uart_rx.baud_div_q  } + 5'h01;
  assign \$704y  = ! \u_uart.u_uart_core.uart_rx.rx ;
  assign \$705y  = \u_uart.u_uart_core.uart_rx.idle_q  && \$704y ;
  assign \$707y  = ! \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \$708y  = \$707y  && \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \$655y  = \u_uart.u_reg.u_ctrl_parity_en.q  ? 4'hb : 4'ha;
  assign \$710y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  == \$655y ;
  assign \$711y  = \$710y  && \u_uart.u_uart_core.uart_rx.rx ;
  assign \$712y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  - 4'h1;
  assign \$713y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  == 4'h1;
  assign \$734y  = \u_uart.u_uart_core.uart_rx.tick_baud_q  & \$713y ;
  assign \u_uart.u_uart_core.rx_fifo_data  = \u_uart.u_reg.u_ctrl_parity_en.q  ? \u_uart.u_uart_core.uart_rx.sreg_q [8:1] : \u_uart.u_uart_core.uart_rx.sreg_q [9:2];
  assign \$736y  = ~ \u_uart.u_uart_core.uart_rx.sreg_q [10];
  assign \u_uart.u_uart_core.event_rx_frame_err  = \u_uart.u_uart_core.uart_rx.rx_valid_q  & \$736y ;
  assign \$738y  = \u_uart.u_reg.u_ctrl_parity_en.q  & \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \$739y  = ^ { \u_uart.u_uart_core.uart_rx.sreg_q [9:1], \u_uart.u_reg.u_ctrl_parity_odd.q  };
  assign \u_uart.u_uart_core.event_rx_parity_err  = \$738y  & \$739y ;
  assign \$543y  = ~ \u_uart.u_uart_core.event_rx_frame_err ;
  assign \$742y  = \u_uart.u_uart_core.uart_rx.rx_valid_q  & \$543y ;
  assign \$743y  = ~ \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_uart_core.rx_fifo_wvalid  = \$742y  & \$743y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rready_i  = \u_uart.u_reg.rdata_re  | \u_uart.u_uart_core.rx_pop_i ;
  assign \$751y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  assign \u_uart.u_uart_core.rx_fifo_wready  = \$751y  & \$749y ;
  assign \$754y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_bridge.rx_valid_i  = \$754y  & \$749y ;
  assign \$757y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h3f;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  & \$757y ;
  assign \$759y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5:0] == 6'h3f;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  & \$759y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [6] = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [6];
  assign \u_uart.u_uart_core.u_uart_rxfifo.full_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [6], \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5:0] };
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  assign \$766y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [6] == \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [6];
  assign \$767y  = { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] } - { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5:0] };
  assign \$768y  = 7'h40 - { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5:0] };
  assign \$769y  = \$768y  + { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] };
  assign \$770y  = \$766y  ? \$767y  : \$769y ;
  assign \u_uart.u_uart_core.rx_fifo_depth  = \u_uart.u_uart_core.u_uart_rxfifo.full_o  ? 7'h40 : \$770y ;
  assign \$775y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  + 7'h01;
  assign \$782y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  + 7'h01;
  assign \$786y  = \u_uart.u_uart_core.rx_fifo_wvalid  & \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  = \$786y  & \$749y ;
  assign \$789y  = \u_uart.u_bridge.rx_valid_i  & \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  assign \$749y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  = \$789y  & \$749y ;
  assign \$792y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5:0] }) < $signed(8'h40);
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int  = \$792y  ? \$793y  : 8'hxx;
  assign \$796y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] }) < $signed(8'h40);
  assign \$797y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] }) >= $signed(1'h0);
  assign \$798y  = \$797y  && \$796y ;
  assign \$799y  = \$798y  ? 8'hff : 8'h00;
  assign \u_uart.u_reg.reg_re  = \u_uart.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_uart.u_bridge.rx_data_i  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty  ? 8'h00 : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  assign \$810y  = { 29'h00000000, \u_uart.u_reg.u_fifo_ctrl_txilvl.q  } >= 32'd4;
  assign \$811y  = 6'h01 << \u_uart.u_reg.u_fifo_ctrl_txilvl.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.event_intr_i  = \u_uart.u_uart_core.tx_fifo_depth  < \u_uart.u_uart_core.tx_watermark_thresh ;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.event_intr_i  = ! \u_uart.u_uart_core.tx_fifo_depth ;
  assign \u_uart.u_reg.status_txempty_qs  = ~ \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \$816y  = ~ \u_uart.u_uart_core.tx_uart_idle_q ;
  assign \$817y  = \u_uart.u_reg.status_txempty_qs  & \$816y ;
  assign \u_uart.u_uart_core.intr_hw_tx_done.event_intr_i  = \$817y  & \u_uart.u_uart_core.tx_uart_idle ;
  assign \$823y  = { 29'h00000000, \u_uart.u_reg.u_fifo_ctrl_rxilvl.q  } > 32'd6;
  assign \$824y  = \u_uart.u_reg.u_fifo_ctrl_rxilvl.q  == 3'h6;
  assign \$825y  = 7'h01 << \u_uart.u_reg.u_fifo_ctrl_rxilvl.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.event_intr_i  = \u_uart.u_uart_core.rx_fifo_depth  >= \u_uart.u_uart_core.rx_watermark_thresh ;
  assign \u_uart.u_uart_core.rx_fifo_depth_changed  = \u_uart.u_uart_core.rx_fifo_depth  != \u_uart.u_uart_core.rx_fifo_depth_prev_q ;
  assign \$831y  = ! \u_uart.u_uart_core.rx_fifo_depth ;
  assign \$832y  = \u_uart.u_uart_core.rx_timeout_count_q  + 24'h000001;
  assign \$833y  = \u_uart.u_uart_core.uart_rx.tick_baud_q  ? \$832y  : 24'hxxxxxx;
  assign \$834y  = \$831y  ? 24'h000000 : \$833y ;
  assign \$835y  = \u_uart.u_uart_core.rx_fifo_depth_changed  ? 24'h000000 : \$834y ;
  assign \$836y  = \u_uart.u_uart_core.event_rx_timeout  ? 24'h000000 : \$835y ;
  assign \u_uart.u_uart_core.rx_timeout_count_d  = \u_uart.u_reg.u_timeout_ctrl_en.q  ? \$836y  : 24'h000000;
  assign \$838y  = \u_uart.u_uart_core.rx_timeout_count_q  == \u_uart.u_reg.u_timeout_ctrl_val.q ;
  assign \u_uart.u_uart_core.event_rx_timeout  = \$838y  & \u_uart.u_reg.u_timeout_ctrl_en.q ;
  assign \u_uart.u_reg.status_rxfull_qs  = ~ \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.event_intr_i  = \u_uart.u_uart_core.rx_fifo_wvalid  & \u_uart.u_reg.status_rxfull_qs ;
  assign \$845y  = ~ \u_uart.u_uart_core.break_st_q ;
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.event_intr_i  = \u_uart.u_uart_core.break_err  & \$845y ;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.d  = \u_uart.u_uart_core.intr_hw_tx_watermark.event_intr_i  | \u_uart.u_uart_core.intr_hw_tx_watermark.g_intr_status.test_q ;
  assign \u_uart.u_reg.u_intr_state_tx_empty.d  = \u_uart.u_uart_core.intr_hw_tx_empty.event_intr_i  | \u_uart.u_uart_core.intr_hw_tx_empty.g_intr_status.test_q ;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.d  = \u_uart.u_uart_core.intr_hw_rx_watermark.event_intr_i  | \u_uart.u_uart_core.intr_hw_rx_watermark.g_intr_status.test_q ;
  assign \$880y  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i  & \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de  = \$880y  | \u_uart.u_uart_core.intr_hw_tx_done.event_intr_i ;
  assign \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.d  = \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de  | \u_uart.u_reg.u_intr_state_tx_done.q ;
  assign \$888y  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i  & \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de  = \$888y  | \u_uart.u_uart_core.intr_hw_rx_overflow.event_intr_i ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.d  = \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de  | \u_uart.u_reg.u_intr_state_rx_overflow.q ;
  assign \$896y  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i  & \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de  = \$896y  | \u_uart.u_uart_core.event_rx_frame_err ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.d  = \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de  | \u_uart.u_reg.u_intr_state_rx_frame_err.q ;
  assign \$904y  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i  & \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de  = \$904y  | \u_uart.u_uart_core.intr_hw_rx_break_err.event_intr_i ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.d  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de  | \u_uart.u_reg.u_intr_state_rx_break_err.q ;
  assign \$912y  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i  & \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de  = \$912y  | \u_uart.u_uart_core.event_rx_timeout ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.d  = \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de  | \u_uart.u_reg.u_intr_state_rx_timeout.q ;
  assign \$920y  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i  & \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de  = \$920y  | \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.d  = \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de  | \u_uart.u_reg.u_intr_state_rx_parity_err.q ;
  assign \$929y  = | \u_uart.u_bridge.rxf_st_q ;
  assign \u_uart.u_uart_core.rx_pop_i  = \$929y  && \u_uart.u_bridge.rx_valid_i ;
  assign \$935y  = \u_uart.u_bridge.rx_data_i  == 8'ha5;
  assign \$936y  = \u_uart.u_bridge.rx_valid_i  && \$935y ;
  assign \$949y  = \u_uart.u_bridge.op_q  == 8'h01;
  assign \$941y  = \u_uart.u_bridge.idx_q  + 2'h1;
  assign \$auto$bmuxmap.cc:84:execute$2616 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [15:8] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2616 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [31:24] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2616 [23:16] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [47:40] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2616 [31:24] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [63:56] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2616 [39:32] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [79:72] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [71:64];
  assign \$auto$bmuxmap.cc:84:execute$2616 [47:40] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [95:88] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [87:80];
  assign \$auto$bmuxmap.cc:84:execute$2616 [55:48] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [111:104] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [103:96];
  assign \$auto$bmuxmap.cc:84:execute$2616 [63:56] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [127:120] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [119:112];
  assign \$auto$bmuxmap.cc:84:execute$2616 [71:64] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [143:136] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [135:128];
  assign \$auto$bmuxmap.cc:84:execute$2616 [79:72] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [159:152] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [151:144];
  assign \$auto$bmuxmap.cc:84:execute$2616 [87:80] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [175:168] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [167:160];
  assign \$auto$bmuxmap.cc:84:execute$2616 [95:88] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [191:184] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [183:176];
  assign \$auto$bmuxmap.cc:84:execute$2616 [103:96] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [207:200] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [199:192];
  assign \$auto$bmuxmap.cc:84:execute$2616 [111:104] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [223:216] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [215:208];
  assign \$auto$bmuxmap.cc:84:execute$2616 [119:112] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [239:232] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [231:224];
  assign \$auto$bmuxmap.cc:84:execute$2616 [127:120] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [255:248] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [247:240];
  assign \$auto$bmuxmap.cc:84:execute$2633 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2616 [15:8] : \$auto$bmuxmap.cc:84:execute$2616 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2633 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2616 [31:24] : \$auto$bmuxmap.cc:84:execute$2616 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2633 [23:16] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2616 [47:40] : \$auto$bmuxmap.cc:84:execute$2616 [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2633 [31:24] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2616 [63:56] : \$auto$bmuxmap.cc:84:execute$2616 [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2633 [39:32] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2616 [79:72] : \$auto$bmuxmap.cc:84:execute$2616 [71:64];
  assign \$auto$bmuxmap.cc:84:execute$2633 [47:40] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2616 [95:88] : \$auto$bmuxmap.cc:84:execute$2616 [87:80];
  assign \$auto$bmuxmap.cc:84:execute$2633 [55:48] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2616 [111:104] : \$auto$bmuxmap.cc:84:execute$2616 [103:96];
  assign \$auto$bmuxmap.cc:84:execute$2633 [63:56] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2616 [127:120] : \$auto$bmuxmap.cc:84:execute$2616 [119:112];
  assign \$auto$bmuxmap.cc:84:execute$2642 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2633 [15:8] : \$auto$bmuxmap.cc:84:execute$2633 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2642 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2633 [31:24] : \$auto$bmuxmap.cc:84:execute$2633 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2642 [23:16] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2633 [47:40] : \$auto$bmuxmap.cc:84:execute$2633 [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2642 [31:24] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2633 [63:56] : \$auto$bmuxmap.cc:84:execute$2633 [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2647 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3] ? \$auto$bmuxmap.cc:84:execute$2642 [15:8] : \$auto$bmuxmap.cc:84:execute$2642 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2647 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3] ? \$auto$bmuxmap.cc:84:execute$2642 [31:24] : \$auto$bmuxmap.cc:84:execute$2642 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2650  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4] ? \$auto$bmuxmap.cc:84:execute$2647 [15:8] : \$auto$bmuxmap.cc:84:execute$2647 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2652 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [15:8] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2652 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [31:24] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2652 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [47:40] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2652 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [63:56] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2652 [39:32] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [79:72] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [71:64];
  assign \$auto$bmuxmap.cc:84:execute$2652 [47:40] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [95:88] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [87:80];
  assign \$auto$bmuxmap.cc:84:execute$2652 [55:48] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [111:104] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [103:96];
  assign \$auto$bmuxmap.cc:84:execute$2652 [63:56] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [127:120] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [119:112];
  assign \$auto$bmuxmap.cc:84:execute$2652 [71:64] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [143:136] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [135:128];
  assign \$auto$bmuxmap.cc:84:execute$2652 [79:72] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [159:152] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [151:144];
  assign \$auto$bmuxmap.cc:84:execute$2652 [87:80] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [175:168] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [167:160];
  assign \$auto$bmuxmap.cc:84:execute$2652 [95:88] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [191:184] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [183:176];
  assign \$auto$bmuxmap.cc:84:execute$2652 [103:96] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [207:200] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [199:192];
  assign \$auto$bmuxmap.cc:84:execute$2652 [111:104] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [223:216] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [215:208];
  assign \$auto$bmuxmap.cc:84:execute$2652 [119:112] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [239:232] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [231:224];
  assign \$auto$bmuxmap.cc:84:execute$2652 [127:120] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [255:248] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [247:240];
  assign \$auto$bmuxmap.cc:84:execute$2652 [135:128] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [271:264] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [263:256];
  assign \$auto$bmuxmap.cc:84:execute$2652 [143:136] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [287:280] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [279:272];
  assign \$auto$bmuxmap.cc:84:execute$2652 [151:144] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [303:296] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [295:288];
  assign \$auto$bmuxmap.cc:84:execute$2652 [159:152] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [319:312] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [311:304];
  assign \$auto$bmuxmap.cc:84:execute$2652 [167:160] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [335:328] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [327:320];
  assign \$auto$bmuxmap.cc:84:execute$2652 [175:168] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [351:344] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [343:336];
  assign \$auto$bmuxmap.cc:84:execute$2652 [183:176] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [367:360] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [359:352];
  assign \$auto$bmuxmap.cc:84:execute$2652 [191:184] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [383:376] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [375:368];
  assign \$auto$bmuxmap.cc:84:execute$2652 [199:192] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [399:392] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [391:384];
  assign \$auto$bmuxmap.cc:84:execute$2652 [207:200] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [415:408] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [407:400];
  assign \$auto$bmuxmap.cc:84:execute$2652 [215:208] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [431:424] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [423:416];
  assign \$auto$bmuxmap.cc:84:execute$2652 [223:216] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [447:440] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [439:432];
  assign \$auto$bmuxmap.cc:84:execute$2652 [231:224] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [463:456] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [455:448];
  assign \$auto$bmuxmap.cc:84:execute$2652 [239:232] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [479:472] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [471:464];
  assign \$auto$bmuxmap.cc:84:execute$2652 [247:240] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [495:488] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [487:480];
  assign \$auto$bmuxmap.cc:84:execute$2652 [255:248] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [511:504] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [503:496];
  assign \$auto$bmuxmap.cc:84:execute$2685 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [15:8] : \$auto$bmuxmap.cc:84:execute$2652 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2685 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [31:24] : \$auto$bmuxmap.cc:84:execute$2652 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2685 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [47:40] : \$auto$bmuxmap.cc:84:execute$2652 [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2685 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [63:56] : \$auto$bmuxmap.cc:84:execute$2652 [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2685 [39:32] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [79:72] : \$auto$bmuxmap.cc:84:execute$2652 [71:64];
  assign \$auto$bmuxmap.cc:84:execute$2685 [47:40] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [95:88] : \$auto$bmuxmap.cc:84:execute$2652 [87:80];
  assign \$auto$bmuxmap.cc:84:execute$2685 [55:48] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [111:104] : \$auto$bmuxmap.cc:84:execute$2652 [103:96];
  assign \$auto$bmuxmap.cc:84:execute$2685 [63:56] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [127:120] : \$auto$bmuxmap.cc:84:execute$2652 [119:112];
  assign \$auto$bmuxmap.cc:84:execute$2685 [71:64] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [143:136] : \$auto$bmuxmap.cc:84:execute$2652 [135:128];
  assign \$auto$bmuxmap.cc:84:execute$2685 [79:72] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [159:152] : \$auto$bmuxmap.cc:84:execute$2652 [151:144];
  assign \$auto$bmuxmap.cc:84:execute$2685 [87:80] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [175:168] : \$auto$bmuxmap.cc:84:execute$2652 [167:160];
  assign \$auto$bmuxmap.cc:84:execute$2685 [95:88] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [191:184] : \$auto$bmuxmap.cc:84:execute$2652 [183:176];
  assign \$auto$bmuxmap.cc:84:execute$2685 [103:96] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [207:200] : \$auto$bmuxmap.cc:84:execute$2652 [199:192];
  assign \$auto$bmuxmap.cc:84:execute$2685 [111:104] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [223:216] : \$auto$bmuxmap.cc:84:execute$2652 [215:208];
  assign \$auto$bmuxmap.cc:84:execute$2685 [119:112] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [239:232] : \$auto$bmuxmap.cc:84:execute$2652 [231:224];
  assign \$auto$bmuxmap.cc:84:execute$2685 [127:120] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2652 [255:248] : \$auto$bmuxmap.cc:84:execute$2652 [247:240];
  assign \$auto$bmuxmap.cc:84:execute$2702 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2685 [15:8] : \$auto$bmuxmap.cc:84:execute$2685 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2702 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2685 [31:24] : \$auto$bmuxmap.cc:84:execute$2685 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2702 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2685 [47:40] : \$auto$bmuxmap.cc:84:execute$2685 [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2702 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2685 [63:56] : \$auto$bmuxmap.cc:84:execute$2685 [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2702 [39:32] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2685 [79:72] : \$auto$bmuxmap.cc:84:execute$2685 [71:64];
  assign \$auto$bmuxmap.cc:84:execute$2702 [47:40] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2685 [95:88] : \$auto$bmuxmap.cc:84:execute$2685 [87:80];
  assign \$auto$bmuxmap.cc:84:execute$2702 [55:48] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2685 [111:104] : \$auto$bmuxmap.cc:84:execute$2685 [103:96];
  assign \$auto$bmuxmap.cc:84:execute$2702 [63:56] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2685 [127:120] : \$auto$bmuxmap.cc:84:execute$2685 [119:112];
  assign \$auto$bmuxmap.cc:84:execute$2711 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3] ? \$auto$bmuxmap.cc:84:execute$2702 [15:8] : \$auto$bmuxmap.cc:84:execute$2702 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2711 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3] ? \$auto$bmuxmap.cc:84:execute$2702 [31:24] : \$auto$bmuxmap.cc:84:execute$2702 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2711 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3] ? \$auto$bmuxmap.cc:84:execute$2702 [47:40] : \$auto$bmuxmap.cc:84:execute$2702 [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2711 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3] ? \$auto$bmuxmap.cc:84:execute$2702 [63:56] : \$auto$bmuxmap.cc:84:execute$2702 [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2716 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4] ? \$auto$bmuxmap.cc:84:execute$2711 [15:8] : \$auto$bmuxmap.cc:84:execute$2711 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2716 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4] ? \$auto$bmuxmap.cc:84:execute$2711 [31:24] : \$auto$bmuxmap.cc:84:execute$2711 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2719  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5] ? \$auto$bmuxmap.cc:84:execute$2716 [15:8] : \$auto$bmuxmap.cc:84:execute$2716 [7:0];
  assign \$auto$rtlil.cc:3097:Not$2603  = ~ \$638y ;
  assign \$auto$rtlil.cc:3097:Not$2610  = ~ \$800y ;
  assign \$auto$rtlil.cc:3144:And$2605  = \$638y  & { \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q  };
  assign \$auto$rtlil.cc:3144:And$2612  = \$800y  & { \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data , \u_uart.u_uart_core.rx_fifo_data  };
  assign \$auto$rtlil.cc:3144:And$2607  = \$auto$rtlil.cc:3097:Not$2603  & \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage ;
  assign \$auto$rtlil.cc:3144:And$2614  = \$auto$rtlil.cc:3097:Not$2610  & \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage ;
  assign \$640y  = \$auto$rtlil.cc:3144:And$2607  | \$auto$rtlil.cc:3144:And$2605 ;
  assign \$802y  = \$auto$rtlil.cc:3144:And$2614  | \$auto$rtlil.cc:3144:And$2612 ;
  assign \$auto$demuxmap.cc:63:execute$2721  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h00;
  assign \$auto$demuxmap.cc:63:execute$2724  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h01;
  assign \$auto$demuxmap.cc:63:execute$2727  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h02;
  assign \$auto$demuxmap.cc:63:execute$2730  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h03;
  assign \$auto$demuxmap.cc:63:execute$2733  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h04;
  assign \$auto$demuxmap.cc:63:execute$2736  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h05;
  assign \$auto$demuxmap.cc:63:execute$2739  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h06;
  assign \$auto$demuxmap.cc:63:execute$2742  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h07;
  assign \$auto$demuxmap.cc:63:execute$2745  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h08;
  assign \$auto$demuxmap.cc:63:execute$2748  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h09;
  assign \$auto$demuxmap.cc:63:execute$2751  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h0a;
  assign \$auto$demuxmap.cc:63:execute$2754  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h0b;
  assign \$auto$demuxmap.cc:63:execute$2757  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h0c;
  assign \$auto$demuxmap.cc:63:execute$2760  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h0d;
  assign \$auto$demuxmap.cc:63:execute$2763  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h0e;
  assign \$auto$demuxmap.cc:63:execute$2766  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h0f;
  assign \$auto$demuxmap.cc:63:execute$2769  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h10;
  assign \$auto$demuxmap.cc:63:execute$2772  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h11;
  assign \$auto$demuxmap.cc:63:execute$2775  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h12;
  assign \$auto$demuxmap.cc:63:execute$2778  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h13;
  assign \$auto$demuxmap.cc:63:execute$2781  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h14;
  assign \$auto$demuxmap.cc:63:execute$2784  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h15;
  assign \$auto$demuxmap.cc:63:execute$2787  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h16;
  assign \$auto$demuxmap.cc:63:execute$2790  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h17;
  assign \$auto$demuxmap.cc:63:execute$2793  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h18;
  assign \$auto$demuxmap.cc:63:execute$2796  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h19;
  assign \$auto$demuxmap.cc:63:execute$2799  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h1a;
  assign \$auto$demuxmap.cc:63:execute$2802  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h1b;
  assign \$auto$demuxmap.cc:63:execute$2805  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h1c;
  assign \$auto$demuxmap.cc:63:execute$2808  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h1d;
  assign \$auto$demuxmap.cc:63:execute$2811  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h1e;
  assign \$auto$demuxmap.cc:63:execute$2814  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0] == 5'h1f;
  assign \$auto$demuxmap.cc:63:execute$2817  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h00;
  assign \$auto$demuxmap.cc:63:execute$2820  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h01;
  assign \$auto$demuxmap.cc:63:execute$2823  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h02;
  assign \$auto$demuxmap.cc:63:execute$2826  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h03;
  assign \$auto$demuxmap.cc:63:execute$2829  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h04;
  assign \$auto$demuxmap.cc:63:execute$2832  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h05;
  assign \$auto$demuxmap.cc:63:execute$2835  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h06;
  assign \$auto$demuxmap.cc:63:execute$2838  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h07;
  assign \$auto$demuxmap.cc:63:execute$2841  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h08;
  assign \$auto$demuxmap.cc:63:execute$2844  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h09;
  assign \$auto$demuxmap.cc:63:execute$2847  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h0a;
  assign \$auto$demuxmap.cc:63:execute$2850  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h0b;
  assign \$auto$demuxmap.cc:63:execute$2853  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h0c;
  assign \$auto$demuxmap.cc:63:execute$2856  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h0d;
  assign \$auto$demuxmap.cc:63:execute$2859  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h0e;
  assign \$auto$demuxmap.cc:63:execute$2862  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h0f;
  assign \$auto$demuxmap.cc:63:execute$2865  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h10;
  assign \$auto$demuxmap.cc:63:execute$2868  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h11;
  assign \$auto$demuxmap.cc:63:execute$2871  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h12;
  assign \$auto$demuxmap.cc:63:execute$2874  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h13;
  assign \$auto$demuxmap.cc:63:execute$2877  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h14;
  assign \$auto$demuxmap.cc:63:execute$2880  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h15;
  assign \$auto$demuxmap.cc:63:execute$2883  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h16;
  assign \$auto$demuxmap.cc:63:execute$2886  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h17;
  assign \$auto$demuxmap.cc:63:execute$2889  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h18;
  assign \$auto$demuxmap.cc:63:execute$2892  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h19;
  assign \$auto$demuxmap.cc:63:execute$2895  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h1a;
  assign \$auto$demuxmap.cc:63:execute$2898  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h1b;
  assign \$auto$demuxmap.cc:63:execute$2901  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h1c;
  assign \$auto$demuxmap.cc:63:execute$2904  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h1d;
  assign \$auto$demuxmap.cc:63:execute$2907  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h1e;
  assign \$auto$demuxmap.cc:63:execute$2910  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h1f;
  assign \$auto$demuxmap.cc:63:execute$2913  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h20;
  assign \$auto$demuxmap.cc:63:execute$2916  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h21;
  assign \$auto$demuxmap.cc:63:execute$2919  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h22;
  assign \$auto$demuxmap.cc:63:execute$2922  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h23;
  assign \$auto$demuxmap.cc:63:execute$2925  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h24;
  assign \$auto$demuxmap.cc:63:execute$2928  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h25;
  assign \$auto$demuxmap.cc:63:execute$2931  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h26;
  assign \$auto$demuxmap.cc:63:execute$2934  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h27;
  assign \$auto$demuxmap.cc:63:execute$2937  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h28;
  assign \$auto$demuxmap.cc:63:execute$2940  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h29;
  assign \$auto$demuxmap.cc:63:execute$2943  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h2a;
  assign \$auto$demuxmap.cc:63:execute$2946  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h2b;
  assign \$auto$demuxmap.cc:63:execute$2949  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h2c;
  assign \$auto$demuxmap.cc:63:execute$2952  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h2d;
  assign \$auto$demuxmap.cc:63:execute$2955  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h2e;
  assign \$auto$demuxmap.cc:63:execute$2958  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h2f;
  assign \$auto$demuxmap.cc:63:execute$2961  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h30;
  assign \$auto$demuxmap.cc:63:execute$2964  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h31;
  assign \$auto$demuxmap.cc:63:execute$2967  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h32;
  assign \$auto$demuxmap.cc:63:execute$2970  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h33;
  assign \$auto$demuxmap.cc:63:execute$2973  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h34;
  assign \$auto$demuxmap.cc:63:execute$2976  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h35;
  assign \$auto$demuxmap.cc:63:execute$2979  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h36;
  assign \$auto$demuxmap.cc:63:execute$2982  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h37;
  assign \$auto$demuxmap.cc:63:execute$2985  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h38;
  assign \$auto$demuxmap.cc:63:execute$2988  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h39;
  assign \$auto$demuxmap.cc:63:execute$2991  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h3a;
  assign \$auto$demuxmap.cc:63:execute$2994  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h3b;
  assign \$auto$demuxmap.cc:63:execute$2997  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h3c;
  assign \$auto$demuxmap.cc:63:execute$3000  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h3d;
  assign \$auto$demuxmap.cc:63:execute$3003  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h3e;
  assign \$auto$demuxmap.cc:63:execute$3006  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0] == 6'h3f;
  assign \$638y [7:0] = \$auto$demuxmap.cc:63:execute$2721  ? \$637y  : 8'h00;
  assign \$638y [15:8] = \$auto$demuxmap.cc:63:execute$2724  ? \$637y  : 8'h00;
  assign \$638y [23:16] = \$auto$demuxmap.cc:63:execute$2727  ? \$637y  : 8'h00;
  assign \$638y [31:24] = \$auto$demuxmap.cc:63:execute$2730  ? \$637y  : 8'h00;
  assign \$638y [39:32] = \$auto$demuxmap.cc:63:execute$2733  ? \$637y  : 8'h00;
  assign \$638y [47:40] = \$auto$demuxmap.cc:63:execute$2736  ? \$637y  : 8'h00;
  assign \$638y [55:48] = \$auto$demuxmap.cc:63:execute$2739  ? \$637y  : 8'h00;
  assign \$638y [63:56] = \$auto$demuxmap.cc:63:execute$2742  ? \$637y  : 8'h00;
  assign \$638y [71:64] = \$auto$demuxmap.cc:63:execute$2745  ? \$637y  : 8'h00;
  assign \$638y [79:72] = \$auto$demuxmap.cc:63:execute$2748  ? \$637y  : 8'h00;
  assign \$638y [87:80] = \$auto$demuxmap.cc:63:execute$2751  ? \$637y  : 8'h00;
  assign \$638y [95:88] = \$auto$demuxmap.cc:63:execute$2754  ? \$637y  : 8'h00;
  assign \$638y [103:96] = \$auto$demuxmap.cc:63:execute$2757  ? \$637y  : 8'h00;
  assign \$638y [111:104] = \$auto$demuxmap.cc:63:execute$2760  ? \$637y  : 8'h00;
  assign \$638y [119:112] = \$auto$demuxmap.cc:63:execute$2763  ? \$637y  : 8'h00;
  assign \$638y [127:120] = \$auto$demuxmap.cc:63:execute$2766  ? \$637y  : 8'h00;
  assign \$638y [135:128] = \$auto$demuxmap.cc:63:execute$2769  ? \$637y  : 8'h00;
  assign \$638y [143:136] = \$auto$demuxmap.cc:63:execute$2772  ? \$637y  : 8'h00;
  assign \$638y [151:144] = \$auto$demuxmap.cc:63:execute$2775  ? \$637y  : 8'h00;
  assign \$638y [159:152] = \$auto$demuxmap.cc:63:execute$2778  ? \$637y  : 8'h00;
  assign \$638y [167:160] = \$auto$demuxmap.cc:63:execute$2781  ? \$637y  : 8'h00;
  assign \$638y [175:168] = \$auto$demuxmap.cc:63:execute$2784  ? \$637y  : 8'h00;
  assign \$638y [183:176] = \$auto$demuxmap.cc:63:execute$2787  ? \$637y  : 8'h00;
  assign \$638y [191:184] = \$auto$demuxmap.cc:63:execute$2790  ? \$637y  : 8'h00;
  assign \$638y [199:192] = \$auto$demuxmap.cc:63:execute$2793  ? \$637y  : 8'h00;
  assign \$638y [207:200] = \$auto$demuxmap.cc:63:execute$2796  ? \$637y  : 8'h00;
  assign \$638y [215:208] = \$auto$demuxmap.cc:63:execute$2799  ? \$637y  : 8'h00;
  assign \$638y [223:216] = \$auto$demuxmap.cc:63:execute$2802  ? \$637y  : 8'h00;
  assign \$638y [231:224] = \$auto$demuxmap.cc:63:execute$2805  ? \$637y  : 8'h00;
  assign \$638y [239:232] = \$auto$demuxmap.cc:63:execute$2808  ? \$637y  : 8'h00;
  assign \$638y [247:240] = \$auto$demuxmap.cc:63:execute$2811  ? \$637y  : 8'h00;
  assign \$638y [255:248] = \$auto$demuxmap.cc:63:execute$2814  ? \$637y  : 8'h00;
  assign \$800y [7:0] = \$auto$demuxmap.cc:63:execute$2817  ? \$799y  : 8'h00;
  assign \$800y [15:8] = \$auto$demuxmap.cc:63:execute$2820  ? \$799y  : 8'h00;
  assign \$800y [23:16] = \$auto$demuxmap.cc:63:execute$2823  ? \$799y  : 8'h00;
  assign \$800y [31:24] = \$auto$demuxmap.cc:63:execute$2826  ? \$799y  : 8'h00;
  assign \$800y [39:32] = \$auto$demuxmap.cc:63:execute$2829  ? \$799y  : 8'h00;
  assign \$800y [47:40] = \$auto$demuxmap.cc:63:execute$2832  ? \$799y  : 8'h00;
  assign \$800y [55:48] = \$auto$demuxmap.cc:63:execute$2835  ? \$799y  : 8'h00;
  assign \$800y [63:56] = \$auto$demuxmap.cc:63:execute$2838  ? \$799y  : 8'h00;
  assign \$800y [71:64] = \$auto$demuxmap.cc:63:execute$2841  ? \$799y  : 8'h00;
  assign \$800y [79:72] = \$auto$demuxmap.cc:63:execute$2844  ? \$799y  : 8'h00;
  assign \$800y [87:80] = \$auto$demuxmap.cc:63:execute$2847  ? \$799y  : 8'h00;
  assign \$800y [95:88] = \$auto$demuxmap.cc:63:execute$2850  ? \$799y  : 8'h00;
  assign \$800y [103:96] = \$auto$demuxmap.cc:63:execute$2853  ? \$799y  : 8'h00;
  assign \$800y [111:104] = \$auto$demuxmap.cc:63:execute$2856  ? \$799y  : 8'h00;
  assign \$800y [119:112] = \$auto$demuxmap.cc:63:execute$2859  ? \$799y  : 8'h00;
  assign \$800y [127:120] = \$auto$demuxmap.cc:63:execute$2862  ? \$799y  : 8'h00;
  assign \$800y [135:128] = \$auto$demuxmap.cc:63:execute$2865  ? \$799y  : 8'h00;
  assign \$800y [143:136] = \$auto$demuxmap.cc:63:execute$2868  ? \$799y  : 8'h00;
  assign \$800y [151:144] = \$auto$demuxmap.cc:63:execute$2871  ? \$799y  : 8'h00;
  assign \$800y [159:152] = \$auto$demuxmap.cc:63:execute$2874  ? \$799y  : 8'h00;
  assign \$800y [167:160] = \$auto$demuxmap.cc:63:execute$2877  ? \$799y  : 8'h00;
  assign \$800y [175:168] = \$auto$demuxmap.cc:63:execute$2880  ? \$799y  : 8'h00;
  assign \$800y [183:176] = \$auto$demuxmap.cc:63:execute$2883  ? \$799y  : 8'h00;
  assign \$800y [191:184] = \$auto$demuxmap.cc:63:execute$2886  ? \$799y  : 8'h00;
  assign \$800y [199:192] = \$auto$demuxmap.cc:63:execute$2889  ? \$799y  : 8'h00;
  assign \$800y [207:200] = \$auto$demuxmap.cc:63:execute$2892  ? \$799y  : 8'h00;
  assign \$800y [215:208] = \$auto$demuxmap.cc:63:execute$2895  ? \$799y  : 8'h00;
  assign \$800y [223:216] = \$auto$demuxmap.cc:63:execute$2898  ? \$799y  : 8'h00;
  assign \$800y [231:224] = \$auto$demuxmap.cc:63:execute$2901  ? \$799y  : 8'h00;
  assign \$800y [239:232] = \$auto$demuxmap.cc:63:execute$2904  ? \$799y  : 8'h00;
  assign \$800y [247:240] = \$auto$demuxmap.cc:63:execute$2907  ? \$799y  : 8'h00;
  assign \$800y [255:248] = \$auto$demuxmap.cc:63:execute$2910  ? \$799y  : 8'h00;
  assign \$800y [263:256] = \$auto$demuxmap.cc:63:execute$2913  ? \$799y  : 8'h00;
  assign \$800y [271:264] = \$auto$demuxmap.cc:63:execute$2916  ? \$799y  : 8'h00;
  assign \$800y [279:272] = \$auto$demuxmap.cc:63:execute$2919  ? \$799y  : 8'h00;
  assign \$800y [287:280] = \$auto$demuxmap.cc:63:execute$2922  ? \$799y  : 8'h00;
  assign \$800y [295:288] = \$auto$demuxmap.cc:63:execute$2925  ? \$799y  : 8'h00;
  assign \$800y [303:296] = \$auto$demuxmap.cc:63:execute$2928  ? \$799y  : 8'h00;
  assign \$800y [311:304] = \$auto$demuxmap.cc:63:execute$2931  ? \$799y  : 8'h00;
  assign \$800y [319:312] = \$auto$demuxmap.cc:63:execute$2934  ? \$799y  : 8'h00;
  assign \$800y [327:320] = \$auto$demuxmap.cc:63:execute$2937  ? \$799y  : 8'h00;
  assign \$800y [335:328] = \$auto$demuxmap.cc:63:execute$2940  ? \$799y  : 8'h00;
  assign \$800y [343:336] = \$auto$demuxmap.cc:63:execute$2943  ? \$799y  : 8'h00;
  assign \$800y [351:344] = \$auto$demuxmap.cc:63:execute$2946  ? \$799y  : 8'h00;
  assign \$800y [359:352] = \$auto$demuxmap.cc:63:execute$2949  ? \$799y  : 8'h00;
  assign \$800y [367:360] = \$auto$demuxmap.cc:63:execute$2952  ? \$799y  : 8'h00;
  assign \$800y [375:368] = \$auto$demuxmap.cc:63:execute$2955  ? \$799y  : 8'h00;
  assign \$800y [383:376] = \$auto$demuxmap.cc:63:execute$2958  ? \$799y  : 8'h00;
  assign \$800y [391:384] = \$auto$demuxmap.cc:63:execute$2961  ? \$799y  : 8'h00;
  assign \$800y [399:392] = \$auto$demuxmap.cc:63:execute$2964  ? \$799y  : 8'h00;
  assign \$800y [407:400] = \$auto$demuxmap.cc:63:execute$2967  ? \$799y  : 8'h00;
  assign \$800y [415:408] = \$auto$demuxmap.cc:63:execute$2970  ? \$799y  : 8'h00;
  assign \$800y [423:416] = \$auto$demuxmap.cc:63:execute$2973  ? \$799y  : 8'h00;
  assign \$800y [431:424] = \$auto$demuxmap.cc:63:execute$2976  ? \$799y  : 8'h00;
  assign \$800y [439:432] = \$auto$demuxmap.cc:63:execute$2979  ? \$799y  : 8'h00;
  assign \$800y [447:440] = \$auto$demuxmap.cc:63:execute$2982  ? \$799y  : 8'h00;
  assign \$800y [455:448] = \$auto$demuxmap.cc:63:execute$2985  ? \$799y  : 8'h00;
  assign \$800y [463:456] = \$auto$demuxmap.cc:63:execute$2988  ? \$799y  : 8'h00;
  assign \$800y [471:464] = \$auto$demuxmap.cc:63:execute$2991  ? \$799y  : 8'h00;
  assign \$800y [479:472] = \$auto$demuxmap.cc:63:execute$2994  ? \$799y  : 8'h00;
  assign \$800y [487:480] = \$auto$demuxmap.cc:63:execute$2997  ? \$799y  : 8'h00;
  assign \$800y [495:488] = \$auto$demuxmap.cc:63:execute$3000  ? \$799y  : 8'h00;
  assign \$800y [503:496] = \$auto$demuxmap.cc:63:execute$3003  ? \$799y  : 8'h00;
  assign \$800y [511:504] = \$auto$demuxmap.cc:63:execute$3006  ? \$799y  : 8'h00;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.beat_ctr_q  <= 27'h0000000;
    else if (\u_pwm.u_pwm_core.beat_ctr_en ) \u_pwm.u_pwm_core.beat_ctr_q  <= \u_pwm.u_pwm_core.beat_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.phase_ctr_q  <= 16'h0000;
    else if (\u_pwm.u_pwm_core.phase_ctr_en ) \u_pwm.u_pwm_core.phase_ctr_q  <= \u_pwm.u_pwm_core.phase_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.num_req_outstanding  <= 9'h000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2081 ) \xbar.u_s1n_6.num_req_outstanding  <= \$procmux$614_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_source  <= 8'h00;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2086 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_source  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_size  <= 2'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2086 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_size  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  <= 3'h4;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2086 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  <= \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type  <= 4'h9;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2086 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type  <= 4'h9;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.dev_select_outstanding  <= 3'h0;
    else if (\xbar.u_s1n_6.accept_t_req ) \xbar.u_s1n_6.dev_select_outstanding  <= \xbar.u_s1n_6.dev_select_t ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \uart_host_adapter.g_multiple_reqs.source_q  <= 1'h0;
    else if (\$1001y ) \uart_host_adapter.g_multiple_reqs.source_q  <= \$procmux$707_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.tx_q  <= 1'h1;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2110 ) \u_uart.u_uart_core.uart_tx.tx_q  <= \u_uart.u_uart_core.uart_tx.tx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.sreg_q  <= 11'h7ff;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2113 ) \u_uart.u_uart_core.uart_tx.sreg_q  <= \u_uart.u_uart_core.uart_tx.sreg_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.bit_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2113 ) \u_uart.u_uart_core.uart_tx.bit_cnt_q  <= \u_uart.u_uart_core.uart_tx.bit_cnt_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.baud_div_q  <= 4'h0;
    else if (\u_uart.u_uart_core.nco_sum_q [16]) \u_uart.u_uart_core.uart_tx.baud_div_q  <= \$646y [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.sreg_q  <= 11'h000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2124 ) \u_uart.u_uart_core.uart_rx.sreg_q  <= \u_uart.u_uart_core.uart_rx.sreg_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.idle_q  <= 1'h1;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2120 ) \u_uart.u_uart_core.uart_rx.idle_q  <= \u_uart.u_uart_core.uart_rx.idle_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.bit_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2120 ) \u_uart.u_uart_core.uart_rx.bit_cnt_q  <= \u_uart.u_uart_core.uart_rx.bit_cnt_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.baud_div_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2133 ) \u_uart.u_uart_core.uart_rx.baud_div_q  <= \u_uart.u_uart_core.uart_rx.baud_div_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= 6'h00;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2136 ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= \$procmux$1652_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= 6'h00;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2139 ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= \$procmux$1633_Y ;
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [79:72] <= \$640y [79:72];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [71:64] <= \$640y [71:64];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [63:56] <= \$640y [63:56];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [55:48] <= \$640y [55:48];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [47:40] <= \$640y [47:40];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [39:32] <= \$640y [39:32];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [31:24] <= \$640y [31:24];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [255:248] <= \$640y [255:248];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [247:240] <= \$640y [247:240];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [23:16] <= \$640y [23:16];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [239:232] <= \$640y [239:232];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [231:224] <= \$640y [231:224];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [223:216] <= \$640y [223:216];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [215:208] <= \$640y [215:208];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [207:200] <= \$640y [207:200];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [199:192] <= \$640y [199:192];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [191:184] <= \$640y [191:184];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [183:176] <= \$640y [183:176];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [175:168] <= \$640y [175:168];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [167:160] <= \$640y [167:160];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [15:8] <= \$640y [15:8];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [159:152] <= \$640y [159:152];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [151:144] <= \$640y [151:144];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [143:136] <= \$640y [143:136];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [135:128] <= \$640y [135:128];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [127:120] <= \$640y [127:120];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [119:112] <= \$640y [119:112];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [111:104] <= \$640y [111:104];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [103:96] <= \$640y [103:96];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [95:88] <= \$640y [95:88];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [87:80] <= \$640y [87:80];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [7:0] <= \$640y [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= 7'h00;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2174 ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= \$procmux$1364_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= 7'h00;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2177 ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= \$procmux$1345_Y ;
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [79:72] <= \$802y [79:72];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [71:64] <= \$802y [71:64];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [63:56] <= \$802y [63:56];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [55:48] <= \$802y [55:48];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [511:504] <= \$802y [511:504];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [503:496] <= \$802y [503:496];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [495:488] <= \$802y [495:488];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [487:480] <= \$802y [487:480];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [47:40] <= \$802y [47:40];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [479:472] <= \$802y [479:472];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [471:464] <= \$802y [471:464];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [463:456] <= \$802y [463:456];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [455:448] <= \$802y [455:448];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [447:440] <= \$802y [447:440];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [439:432] <= \$802y [439:432];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [431:424] <= \$802y [431:424];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [423:416] <= \$802y [423:416];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [415:408] <= \$802y [415:408];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [407:400] <= \$802y [407:400];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [39:32] <= \$802y [39:32];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [399:392] <= \$802y [399:392];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [391:384] <= \$802y [391:384];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [383:376] <= \$802y [383:376];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [375:368] <= \$802y [375:368];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [367:360] <= \$802y [367:360];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [359:352] <= \$802y [359:352];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [351:344] <= \$802y [351:344];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [343:336] <= \$802y [343:336];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [335:328] <= \$802y [335:328];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [327:320] <= \$802y [327:320];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [31:24] <= \$802y [31:24];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [319:312] <= \$802y [319:312];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [311:304] <= \$802y [311:304];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [303:296] <= \$802y [303:296];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [295:288] <= \$802y [295:288];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [287:280] <= \$802y [287:280];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [279:272] <= \$802y [279:272];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [271:264] <= \$802y [271:264];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [263:256] <= \$802y [263:256];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [255:248] <= \$802y [255:248];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [247:240] <= \$802y [247:240];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [23:16] <= \$802y [23:16];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [239:232] <= \$802y [239:232];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [231:224] <= \$802y [231:224];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [223:216] <= \$802y [223:216];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [215:208] <= \$802y [215:208];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [207:200] <= \$802y [207:200];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [199:192] <= \$802y [199:192];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [191:184] <= \$802y [191:184];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [183:176] <= \$802y [183:176];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [175:168] <= \$802y [175:168];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [167:160] <= \$802y [167:160];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [15:8] <= \$802y [15:8];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [159:152] <= \$802y [159:152];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [151:144] <= \$802y [151:144];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [143:136] <= \$802y [143:136];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [135:128] <= \$802y [135:128];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [127:120] <= \$802y [127:120];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [119:112] <= \$802y [119:112];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [111:104] <= \$802y [111:104];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [103:96] <= \$802y [103:96];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [95:88] <= \$802y [95:88];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [87:80] <= \$802y [87:80];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [7:0] <= \$802y [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_val_q  <= 16'h0000;
    else if (\u_uart.u_uart_core.nco_sum_q [16]) \u_uart.u_uart_core.rx_val_q  <= { \u_uart.u_uart_core.rx_val_q [14:0], \u_uart.u_uart_core.uart_rx.rx  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_timeout_count_q  <= 24'h000000;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2245 ) \u_uart.u_uart_core.rx_timeout_count_q  <= \u_uart.u_uart_core.rx_timeout_count_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.intr_hw_tx_watermark.g_intr_status.test_q  <= 1'h0;
    else if (\u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ) \u_uart.u_uart_core.intr_hw_tx_watermark.g_intr_status.test_q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.intr_hw_tx_empty.g_intr_status.test_q  <= 1'h0;
    else if (\u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ) \u_uart.u_uart_core.intr_hw_tx_empty.g_intr_status.test_q  <= \u_uart.u_reg.reg_wdata [8];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.intr_hw_rx_watermark.g_intr_status.test_q  <= 1'h0;
    else if (\u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ) \u_uart.u_uart_core.intr_hw_rx_watermark.g_intr_status.test_q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_wdata.q  <= 8'h00;
    else if (\u_uart.u_reg.u_wdata0_qe.d_i ) \u_uart.u_reg.u_wdata.q  <= \u_uart.u_reg.reg_wdata [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_timeout_ctrl_val.q  <= 24'h000000;
    else if (\u_uart.u_reg.timeout_ctrl_we ) \u_uart.u_reg.u_timeout_ctrl_val.q  <= \u_uart.u_reg.reg_wdata [23:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_timeout_ctrl_en.q  <= 1'h0;
    else if (\u_uart.u_reg.timeout_ctrl_we ) \u_uart.u_reg.u_timeout_ctrl_en.q  <= \u_uart.u_reg.reg_wdata [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.rspop_q  <= \$21y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.rdata_q  <= \$30y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.error_q  <= \u_uart.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ovrd_txval.q  <= 1'h0;
    else if (\u_uart.u_reg.ovrd_we ) \u_uart.u_reg.u_ovrd_txval.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ovrd_txen.q  <= 1'h0;
    else if (\u_uart.u_reg.ovrd_we ) \u_uart.u_reg.u_ovrd_txen.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_state_tx_done.q  <= 1'h0;
    else if (\u_uart.u_reg.u_intr_state_tx_done.qe ) \u_uart.u_reg.u_intr_state_tx_done.q  <= \u_uart.u_reg.u_intr_state_tx_done.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_state_rx_timeout.q  <= 1'h0;
    else if (\u_uart.u_reg.u_intr_state_rx_timeout.qe ) \u_uart.u_reg.u_intr_state_rx_timeout.q  <= \u_uart.u_reg.u_intr_state_rx_timeout.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_state_rx_parity_err.q  <= 1'h0;
    else if (\u_uart.u_reg.u_intr_state_rx_parity_err.qe ) \u_uart.u_reg.u_intr_state_rx_parity_err.q  <= \u_uart.u_reg.u_intr_state_rx_parity_err.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_state_rx_overflow.q  <= 1'h0;
    else if (\u_uart.u_reg.u_intr_state_rx_overflow.qe ) \u_uart.u_reg.u_intr_state_rx_overflow.q  <= \u_uart.u_reg.u_intr_state_rx_overflow.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_state_rx_frame_err.q  <= 1'h0;
    else if (\u_uart.u_reg.u_intr_state_rx_frame_err.qe ) \u_uart.u_reg.u_intr_state_rx_frame_err.q  <= \u_uart.u_reg.u_intr_state_rx_frame_err.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_state_rx_break_err.q  <= 1'h0;
    else if (\u_uart.u_reg.u_intr_state_rx_break_err.qe ) \u_uart.u_reg.u_intr_state_rx_break_err.q  <= \u_uart.u_reg.u_intr_state_rx_break_err.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_enable_tx_watermark.q  <= 1'h0;
    else if (\u_uart.u_reg.intr_enable_we ) \u_uart.u_reg.u_intr_enable_tx_watermark.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_enable_tx_empty.q  <= 1'h0;
    else if (\u_uart.u_reg.intr_enable_we ) \u_uart.u_reg.u_intr_enable_tx_empty.q  <= \u_uart.u_reg.reg_wdata [8];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_enable_tx_done.q  <= 1'h0;
    else if (\u_uart.u_reg.intr_enable_we ) \u_uart.u_reg.u_intr_enable_tx_done.q  <= \u_uart.u_reg.reg_wdata [2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_enable_rx_watermark.q  <= 1'h0;
    else if (\u_uart.u_reg.intr_enable_we ) \u_uart.u_reg.u_intr_enable_rx_watermark.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_enable_rx_timeout.q  <= 1'h0;
    else if (\u_uart.u_reg.intr_enable_we ) \u_uart.u_reg.u_intr_enable_rx_timeout.q  <= \u_uart.u_reg.reg_wdata [6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_enable_rx_parity_err.q  <= 1'h0;
    else if (\u_uart.u_reg.intr_enable_we ) \u_uart.u_reg.u_intr_enable_rx_parity_err.q  <= \u_uart.u_reg.reg_wdata [7];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_enable_rx_overflow.q  <= 1'h0;
    else if (\u_uart.u_reg.intr_enable_we ) \u_uart.u_reg.u_intr_enable_rx_overflow.q  <= \u_uart.u_reg.reg_wdata [3];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_enable_rx_frame_err.q  <= 1'h0;
    else if (\u_uart.u_reg.intr_enable_we ) \u_uart.u_reg.u_intr_enable_rx_frame_err.q  <= \u_uart.u_reg.reg_wdata [4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_enable_rx_break_err.q  <= 1'h0;
    else if (\u_uart.u_reg.intr_enable_we ) \u_uart.u_reg.u_intr_enable_rx_break_err.q  <= \u_uart.u_reg.reg_wdata [5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_txrst.q  <= 1'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_txrst.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_txilvl.q  <= 3'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_txilvl.q  <= \u_uart.u_reg.reg_wdata [7:5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_rxrst.q  <= 1'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_rxrst.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_rxilvl.q  <= 3'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_rxilvl.q  <= \u_uart.u_reg.reg_wdata [4:2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_tx.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_tx.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_slpbk.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_slpbk.q  <= \u_uart.u_reg.reg_wdata [4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_rxblvl.q  <= 2'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_rxblvl.q  <= \u_uart.u_reg.reg_wdata [9:8];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_rx.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_rx.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_parity_odd.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_parity_odd.q  <= \u_uart.u_reg.reg_wdata [7];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_parity_en.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_parity_en.q  <= \u_uart.u_reg.reg_wdata [6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_nf.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_nf.q  <= \u_uart.u_reg.reg_wdata [2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_nco.q  <= 16'h0970;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_nco.q  <= \u_uart.u_reg.reg_wdata [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_llpbk.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_llpbk.q  <= \u_uart.u_reg.reg_wdata [5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.we_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2303 ) \u_uart.u_bridge.we_q  <= \u_uart.u_bridge.we_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.wdata_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2318 ) \u_uart.u_bridge.wdata_q  <= \u_uart.u_bridge.wdata_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.sh_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2325 ) \u_uart.u_bridge.sh_q  <= \u_uart.u_bridge.sh_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.rxf_st_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2344 ) \u_uart.u_bridge.rxf_st_q  <= \u_uart.u_bridge.rxf_st_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.req_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2351 ) \u_uart.u_bridge.req_q  <= \u_uart.u_bridge.req_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.op_q  <= 8'h00;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2354 ) \u_uart.u_bridge.op_q  <= \u_uart.u_bridge.rx_data_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.idx_q  <= 2'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2369 ) \u_uart.u_bridge.idx_q  <= \u_uart.u_bridge.idx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.bebyte_q  <= 8'h0f;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2372 ) \u_uart.u_bridge.bebyte_q  <= \u_uart.u_bridge.rx_data_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.be_q  <= 4'hf;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2318 ) \u_uart.u_bridge.be_q  <= \u_uart.u_bridge.be_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.addr_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2390 ) \u_uart.u_bridge.addr_q  <= { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_timer_v_upper0.q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_timer_v_upper0.qe ) \u_rv_timer.u_reg.u_timer_v_upper0.q  <= \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_timer_v_lower0.q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_timer_v_lower0.qe ) \u_rv_timer.u_reg.u_timer_v_lower0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.rspop_q  <= \$2920y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.rdata_q  <= \$2929y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.error_q  <= \u_rv_timer.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_intr_state0.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.u_intr_state0.qe ) \u_rv_timer.u_reg.u_intr_state0.q  <= \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_intr_enable0.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.intr_enable0_we ) \u_rv_timer.u_reg.u_intr_enable0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_ctrl.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.ctrl_we ) \u_rv_timer.u_reg.u_ctrl.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_upper0_0.q  <= 32'd4294967295;
    else if (\u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ) \u_rv_timer.u_reg.u_compare_upper0_0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_lower0_0.q  <= 32'd4294967295;
    else if (\u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ) \u_rv_timer.u_reg.u_compare_lower0_0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_cfg0_step.q  <= 8'h01;
    else if (\u_rv_timer.u_reg.cfg0_we ) \u_rv_timer.u_reg.u_cfg0_step.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_cfg0_prescale.q  <= 12'h000;
    else if (\u_rv_timer.u_reg.cfg0_we ) \u_rv_timer.u_reg.u_cfg0_prescale.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_regwen.q  <= 1'h1;
    else if (\u_pwm.u_reg.u_regwen.wr_en_data_arb.we ) \u_pwm.u_reg.u_regwen.q  <= \u_pwm.u_reg.u_regwen.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.rspop_q  <= \$1167y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.rdata_q  <= \$1176y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.error_q  <= \u_pwm.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_pwm_param1_qe.d_i ) \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q  <= \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_param1_qe.d_i ) \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q  <= \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [30];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2415 ) \u_pwm.u_reg.u_pwm_param_1_cdc.txn_bits_q  <= \$procmux$1994_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.src_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2415 ) \u_pwm.u_reg.u_pwm_param_1_cdc.src_q  <= \$procmux$1998_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2421 ) \u_pwm.u_reg.u_pwm_param_1_cdc.src_busy_q  <= \$procmux$2007_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_param1_qe.d_i ) \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q  <= \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_pwm_param0_qe.d_i ) \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q  <= \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_param0_qe.d_i ) \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q  <= \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [30];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2427 ) \u_pwm.u_reg.u_pwm_param_0_cdc.txn_bits_q  <= \$procmux$77_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.src_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2427 ) \u_pwm.u_reg.u_pwm_param_0_cdc.src_q  <= \$procmux$81_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2433 ) \u_pwm.u_reg.u_pwm_param_0_cdc.src_busy_q  <= \$procmux$90_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_param0_qe.d_i ) \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q  <= \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_en_1.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_en0_qe.d_i ) \u_pwm.u_reg.u_pwm_en_en_1.q  <= \u_pwm.u_reg.u_pwm_en_cdc.src_q [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_en_0.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_en0_qe.d_i ) \u_pwm.u_reg.u_pwm_en_en_0.q  <= \u_pwm.u_reg.u_pwm_en_cdc.src_q [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2439 ) \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  <= \$procmux$251_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.src_q  <= 2'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2439 ) \u_pwm.u_reg.u_pwm_en_cdc.src_q  <= \$procmux$255_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2445 ) \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  <= \$procmux$264_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_invert_1.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_invert0_qe.d_i ) \u_pwm.u_reg.u_invert_invert_1.q  <= \u_pwm.u_reg.u_invert_cdc.src_q [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_invert_0.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_invert0_qe.d_i ) \u_pwm.u_reg.u_invert_invert_0.q  <= \u_pwm.u_reg.u_invert_cdc.src_q [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2450 ) \u_pwm.u_reg.u_invert_cdc.txn_bits_q  <= \$procmux$147_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.src_q  <= 2'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2450 ) \u_pwm.u_reg.u_invert_cdc.src_q  <= \$procmux$151_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2456 ) \u_pwm.u_reg.u_invert_cdc.src_busy_q  <= \$procmux$160_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2459 ) \u_pwm.u_reg.u_duty_cycle_1_cdc.txn_bits_q  <= \$procmux$726_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q  <= 32'd2147450879;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2459 ) \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q  <= \$procmux$730_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2465 ) \u_pwm.u_reg.u_duty_cycle_1_cdc.src_busy_q  <= \$procmux$1192_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_b_1.q  <= 16'h7fff;
    else if (\u_pwm.u_reg.u_duty_cycle1_qe.d_i ) \u_pwm.u_reg.u_duty_cycle_1_b_1.q  <= \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_a_1.q  <= 16'h7fff;
    else if (\u_pwm.u_reg.u_duty_cycle1_qe.d_i ) \u_pwm.u_reg.u_duty_cycle_1_a_1.q  <= \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2470 ) \u_pwm.u_reg.u_duty_cycle_0_cdc.txn_bits_q  <= \$procmux$1380_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q  <= 32'd2147450879;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2470 ) \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q  <= \$procmux$1384_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2476 ) \u_pwm.u_reg.u_duty_cycle_0_cdc.src_busy_q  <= \$procmux$1518_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_b_0.q  <= 16'h7fff;
    else if (\u_pwm.u_reg.u_duty_cycle0_qe.d_i ) \u_pwm.u_reg.u_duty_cycle_0_b_0.q  <= \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_a_0.q  <= 16'h7fff;
    else if (\u_pwm.u_reg.u_duty_cycle0_qe.d_i ) \u_pwm.u_reg.u_duty_cycle_0_a_0.q  <= \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_dc_resn.q  <= 4'h7;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_dc_resn.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cntr_en.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_cntr_en.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_clk_div.q  <= 27'h0008000;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_clk_div.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2484 ) \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  <= \$procmux$391_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.src_q  <= 32'd939556864;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2484 ) \u_pwm.u_reg.u_cfg_cdc.src_q  <= \$procmux$395_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2490 ) \u_pwm.u_reg.u_cfg_cdc.src_busy_q  <= \$procmux$404_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_y_1.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_blink_param1_qe.d_i ) \u_pwm.u_reg.u_blink_param_1_y_1.q  <= \u_pwm.u_reg.u_blink_param_1_cdc.src_q [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_x_1.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_blink_param1_qe.d_i ) \u_pwm.u_reg.u_blink_param_1_x_1.q  <= \u_pwm.u_reg.u_blink_param_1_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2495 ) \u_pwm.u_reg.u_blink_param_1_cdc.txn_bits_q  <= \$procmux$218_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.src_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2495 ) \u_pwm.u_reg.u_blink_param_1_cdc.src_q  <= \$procmux$222_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2501 ) \u_pwm.u_reg.u_blink_param_1_cdc.src_busy_q  <= \$procmux$231_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_y_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_blink_param0_qe.d_i ) \u_pwm.u_reg.u_blink_param_0_y_0.q  <= \u_pwm.u_reg.u_blink_param_0_cdc.src_q [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_x_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_blink_param0_qe.d_i ) \u_pwm.u_reg.u_blink_param_0_x_0.q  <= \u_pwm.u_reg.u_blink_param_0_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2506 ) \u_pwm.u_reg.u_blink_param_0_cdc.txn_bits_q  <= \$procmux$362_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.src_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2506 ) \u_pwm.u_reg.u_blink_param_0_cdc.src_q  <= \$procmux$366_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2512 ) \u_pwm.u_reg.u_blink_param_0_cdc.src_busy_q  <= \$procmux$375_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_en_q  <= 1'h0;
    else if (!\u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_int ) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_en_q  <= \u_pwm.u_reg.u_pwm_en_en_1.q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_direction  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2516 ) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_direction  <= \$procmux$495_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_ctr_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2523 ) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_ctr_q  <= \$procmux$504_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_wrap_q  <= 1'h0;
    else if (\$2280y ) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_wrap_q  <= \$2343y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2531 ) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_q  <= \$procmux$407_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_ctr_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2538 ) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_ctr_q  <= \$procmux$507_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  <= 1'h0;
    else if (!\u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  <= \u_pwm.u_reg.u_pwm_en_en_0.q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2542 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction  <= \$procmux$704_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2549 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  <= \$procmux$1250_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q  <= 1'h0;
    else if (\$2146y ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q  <= \$2209y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2557 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  <= \$procmux$531_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2564 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  <= \$procmux$1253_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.rspop_q  <= \$2552y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.rdata_q  <= \$2561y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.error_q  <= \u_gpio.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_state.q  <= 4'h0;
    else if (\u_gpio.u_reg.u_intr_state.qe ) \u_gpio.u_reg.u_intr_state.q  <= \u_gpio.u_reg.u_intr_state.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_enable.q  <= 4'h0;
    else if (\u_gpio.u_reg.intr_enable_we ) \u_gpio.u_reg.u_intr_enable.q  <= \u_gpio.u_reg.reg_wdata [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_rising.q  <= 4'h0;
    else if (\u_gpio.u_reg.intr_ctrl_en_rising_we ) \u_gpio.u_reg.u_intr_ctrl_en_rising.q  <= \u_gpio.u_reg.reg_wdata [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q  <= 4'h0;
    else if (\u_gpio.u_reg.intr_ctrl_en_lvllow_we ) \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q  <= \u_gpio.u_reg.reg_wdata [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q  <= 4'h0;
    else if (\u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ) \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q  <= \u_gpio.u_reg.reg_wdata [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_falling.q  <= 4'h0;
    else if (\u_gpio.u_reg.intr_ctrl_en_falling_we ) \u_gpio.u_reg.u_intr_ctrl_en_falling.q  <= \u_gpio.u_reg.reg_wdata [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_ctrl_en_input_filter.q  <= 4'h0;
    else if (\u_gpio.u_reg.ctrl_en_input_filter_we ) \u_gpio.u_reg.u_ctrl_en_input_filter.q  <= \u_gpio.u_reg.reg_wdata [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[3].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[3].u_filter.update_stored_value ) \u_gpio.gen_filter[3].u_filter.stored_value_q  <= \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[2].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[2].u_filter.update_stored_value ) \u_gpio.gen_filter[2].u_filter.stored_value_q  <= \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[1].u_filter.update_stored_value ) \u_gpio.gen_filter[1].u_filter.stored_value_q  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[0].u_filter.update_stored_value ) \u_gpio.gen_filter[0].u_filter.stored_value_q  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_q [1:0] <= 2'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2587 ) \u_gpio.cio_gpio_q [1:0] <= \$procmux$55_Y [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_q [3:2] <= 2'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2590 ) \u_gpio.cio_gpio_q [3:2] <= \$procmux$55_Y [3:2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_en_q [1:0] <= 2'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2597 ) \u_gpio.cio_gpio_en_q [1:0] <= \$procmux$24_Y [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_en_q [3:2] <= 2'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2600 ) \u_gpio.cio_gpio_en_q [3:2] <= \$procmux$24_Y [3:2];
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2077  = | { \xbar.u_s1n_6.tl_t_p [65], \xbar.u_s1n_6.accept_t_req  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2079  = { \xbar.u_s1n_6.tl_t_p [65], \xbar.u_s1n_6.accept_t_req  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2106  = { \u_uart.u_uart_core.u_uart_txfifo.rready_i , \u_uart.u_reg.u_ctrl_tx.q  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2108  = { \$657y , \u_uart.u_reg.u_ctrl_tx.q  } != 2'h1;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2113  = { \$657y , \u_uart.u_uart_core.u_uart_txfifo.rready_i , \u_uart.u_reg.u_ctrl_tx.q  } != 3'h1;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2120  = | { \$708y , \$705y  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2122  = { \$711y , \$705y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2133  = | { \$705y , \u_uart.u_uart_core.nco_sum_q [16] };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2136  = | { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set , \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i , \u_uart.u_uart_core.u_uart_txfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2139  = | { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set , \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i , \u_uart.u_uart_core.u_uart_txfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2174  = | { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set , \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i , \u_uart.u_uart_core.u_uart_rxfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2177  = | { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set , \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i , \u_uart.u_uart_core.u_uart_rxfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2245  = { \$831y , \u_uart.u_uart_core.uart_rx.tick_baud_q , \u_uart.u_uart_core.event_rx_timeout , \u_uart.u_uart_core.rx_fifo_depth_changed , \u_uart.u_reg.u_timeout_ctrl_en.q  } != 5'h01;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2289  = { \$procmux$1001_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2291  = { \$procmux$1104_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2293  = { \$procmux$1001_CMP , \$940y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2295  = { \$procmux$1104_CMP , \$940y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2297  = { \$procmux$1001_CMP , \$949y  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2299  = { \$procmux$1101_CMP , \$1001y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2301  = | { \$procmux$1104_CMP , \$procmux$1101_CMP , \$procmux$1001_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2316  = | { \$procmux$1104_CMP , \$procmux$1001_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2321  = { \$auto$opt_reduce.cc:137:opt_pmux$2075 , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2323  = | { \$procmux$1110_CMP , \$auto$opt_reduce.cc:137:opt_pmux$2075  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2330  = { \$procmux$1028_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2334  = { \$procmux$1110_CMP , \$936y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2338  = { \$procmux$1028_CMP , \$940y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2349  = | { \$procmux$1102_CMP , \$procmux$1101_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2363  = { \$procmux$1001_CMP , \$949y , \$940y  } != 3'h5;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2365  = { \$procmux$1104_CMP , \$940y  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2367  = | { \$procmux$1110_CMP , \$procmux$1104_CMP , \$procmux$1028_CMP , \$procmux$1001_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2415  = | { \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_1_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2421  = | { \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_1_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2427  = | { \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_0_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2433  = | { \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_0_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2439  = | { \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2445  = | { \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_en_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2450  = | { \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_invert_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2456  = | { \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_invert_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2459  = | { \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2465  = | { \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_duty_cycle_1_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2470  = | { \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2476  = | { \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_duty_cycle_0_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2484  = | { \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_cfg_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2490  = | { \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_cfg_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2495  = | { \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_blink_param_1_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2501  = | { \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_blink_param_1_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2506  = | { \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_blink_param_0_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2512  = | { \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_blink_param_0_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2516  = | { \$2315y , \$2312y , \$2308y , \$2305y , \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2519  = | { \$2280y , \$2278y , \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2521  = | { \$2276y , \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2527  = | { \$2350y , \$2279y  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2529  = | { \$2350y , \$2280y  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2534  = | { \$2259y , \$2257y , \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2536  = | { \$2255y , \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2542  = | { \$2181y , \$2178y , \$2174y , \$2171y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2545  = | { \$2146y , \$2144y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2547  = | { \$2142y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2553  = | { \$2216y , \$2145y  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2555  = | { \$2216y , \$2146y  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2560  = | { \$2125y , \$2123y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2562  = | { \$2121y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2583  = | { \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.direct_out_flds_we  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2585  = { \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.direct_out_flds_we  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2590  = | { \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.direct_out_flds_we  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2593  = | { \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.direct_oe_flds_we  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2595  = { \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.direct_oe_flds_we  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2600  = | { \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.direct_oe_flds_we  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2081  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2077 , \$auto$opt_dff.cc:247:make_patterns_logic$2079  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2086  = & { \$1128y , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2110  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2106 , \$auto$opt_dff.cc:247:make_patterns_logic$2108  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2124  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2120 , \$auto$opt_dff.cc:247:make_patterns_logic$2122  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2303  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2289 , \$auto$opt_dff.cc:247:make_patterns_logic$2291 , \$auto$opt_dff.cc:247:make_patterns_logic$2293 , \$auto$opt_dff.cc:247:make_patterns_logic$2295 , \$auto$opt_dff.cc:247:make_patterns_logic$2297 , \$auto$opt_dff.cc:247:make_patterns_logic$2299 , \$auto$opt_dff.cc:247:make_patterns_logic$2301  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2318  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2289 , \$auto$opt_dff.cc:247:make_patterns_logic$2291 , \$auto$opt_dff.cc:247:make_patterns_logic$2293 , \$auto$opt_dff.cc:247:make_patterns_logic$2295 , \$auto$opt_dff.cc:247:make_patterns_logic$2297 , \$auto$opt_dff.cc:247:make_patterns_logic$2316  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2325  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2321 , \$auto$opt_dff.cc:247:make_patterns_logic$2323  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2344  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2289 , \$auto$opt_dff.cc:247:make_patterns_logic$2291 , \$auto$opt_dff.cc:247:make_patterns_logic$2293 , \$auto$opt_dff.cc:247:make_patterns_logic$2295 , \$auto$opt_dff.cc:247:make_patterns_logic$2299 , \$auto$opt_dff.cc:247:make_patterns_logic$2330 , \$auto$opt_dff.cc:247:make_patterns_logic$2334 , \$auto$opt_dff.cc:247:make_patterns_logic$2338  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2351  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2299 , \$auto$opt_dff.cc:247:make_patterns_logic$2349  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2354  = & { \$procmux$1058_CMP , \$procmux$1028_CMP , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2369  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2289 , \$auto$opt_dff.cc:247:make_patterns_logic$2291 , \$auto$opt_dff.cc:247:make_patterns_logic$2330 , \$auto$opt_dff.cc:247:make_patterns_logic$2363 , \$auto$opt_dff.cc:247:make_patterns_logic$2365 , \$auto$opt_dff.cc:247:make_patterns_logic$2367  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2372  = & { \$procmux$1028_CMP , \$940y , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2390  = & { \$procmux$1001_CMP , \$940y , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2523  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2519 , \$auto$opt_dff.cc:247:make_patterns_logic$2521  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2531  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2527 , \$auto$opt_dff.cc:247:make_patterns_logic$2529  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2538  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2534 , \$auto$opt_dff.cc:247:make_patterns_logic$2536  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2549  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2545 , \$auto$opt_dff.cc:247:make_patterns_logic$2547  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2557  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2553 , \$auto$opt_dff.cc:247:make_patterns_logic$2555  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2564  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2560 , \$auto$opt_dff.cc:247:make_patterns_logic$2562  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2587  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2583 , \$auto$opt_dff.cc:247:make_patterns_logic$2585  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2597  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2593 , \$auto$opt_dff.cc:247:make_patterns_logic$2595  };
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [6] = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [6];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [5] = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5];
  assign \$auto$opt_reduce.cc:137:opt_pmux$2039  = | \u_rv_timer.u_reg.addr_hit [3:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$2041  = | { \u_gpio.u_reg.addr_hit [11:10], \u_gpio.u_reg.addr_hit [8:5], \u_gpio.u_reg.addr_hit [2:0], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2043  = | { \u_gpio.u_reg.addr_hit [10:5], \u_gpio.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3] };
  assign \$2731y  = | { \u_gpio.u_reg.addr_hit [14:4], \u_gpio.u_reg.addr_hit [2:0], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2049  = | { \u_gpio.u_reg.addr_hit [10], \u_gpio.u_reg.addr_hit [7], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2047  = | { \u_gpio.u_reg.addr_hit [10], \u_gpio.u_reg.addr_hit [7], \u_gpio.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2053  = | { \u_gpio.u_reg.addr_hit [12:5], \u_gpio.u_reg.addr_hit [2:0], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2055  = | { \u_gpio.u_reg.addr_hit [8:7], \u_gpio.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2059  = | { \u_gpio.u_reg.addr_hit [10:9], \u_gpio.u_reg.addr_hit [7], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2063  = | \u_rv_timer.u_reg.addr_hit [4:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$2067  = | { \u_gpio.u_reg.addr_hit [10:5], \u_gpio.u_reg.addr_hit [2:0], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2069  = | { \u_gpio.u_reg.addr_hit [11:5], \u_gpio.u_reg.addr_hit [2:0], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2071  = | { \u_gpio.u_reg.addr_hit [10:4], \u_gpio.u_reg.addr_hit [2:0], \u_pwm.u_reg.addr_hit [3] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$2075  = | { \$procmux$1104_CMP , \$procmux$1001_CMP  };
  always @(posedge clk_i)
    \u_gpio.data_in_q  <= { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.diff_ctr_q  <= 4'h0;
    else \u_gpio.gen_filter[0].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[0].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.filter_q  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.diff_ctr_q  <= 4'h0;
    else \u_gpio.gen_filter[1].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[1].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.filter_q  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[2].u_filter.diff_ctr_q  <= 4'h0;
    else \u_gpio.gen_filter[2].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[2].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[2].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[2].u_filter.filter_q  <= \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[3].u_filter.diff_ctr_q  <= 4'h0;
    else \u_gpio.gen_filter[3].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[3].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[3].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[3].u_filter.filter_q  <= \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[3];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_data_in.q  <= 4'h0;
    else \u_gpio.u_reg.u_data_in.q  <= { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_gpio.u_reg.u_reg_if.outstanding_q  <= \$procmux$1537_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q  <= 1'h0;
    else \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q  <= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_end_q  <= 1'h0;
    else \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_end_q  <= \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_htbt_end ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param0_qe.q_o  <= \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param1_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param1_qe.q_o  <= \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1684y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_level  <= \$1667y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1739y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_level  <= \$1722y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg0_qe.q_o  <= \u_pwm.u_reg.u_cfg0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1299y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  <= \$1282y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle0_qe.q_o  <= \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle1_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle1_qe.q_o  <= \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1574y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_level  <= \$1557y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1629y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_level  <= \$1612y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert0_qe.q_o  <= \u_pwm.u_reg.u_invert0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1409y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level  <= \$1392y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en0_qe.q_o  <= \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1354y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  <= \$1337y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param0_qe.q_o  <= \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param1_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param1_qe.q_o  <= \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1464y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_level  <= \$1447y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1519y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_level  <= \$1502y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_pwm.u_reg.u_reg_if.outstanding_q  <= \$procmux$528_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.gen_harts[0].u_core.tick_count  <= 12'h000;
    else \u_rv_timer.gen_harts[0].u_core.tick_count  <= \$procmux$131_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o  <= 1'h0;
    else \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o  <= \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  <= 1'h0;
    else \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  <= \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_rv_timer.u_reg.u_reg_if.outstanding_q  <= \$procmux$121_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  <= 1'h0;
    else \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  <= \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_state_rx_watermark.q  <= 1'h0;
    else \u_uart.u_reg.u_intr_state_rx_watermark.q  <= \u_uart.u_reg.u_intr_state_rx_watermark.d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_state_tx_empty.q  <= 1'h1;
    else \u_uart.u_reg.u_intr_state_tx_empty.q  <= \u_uart.u_reg.u_intr_state_tx_empty.d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_intr_state_tx_watermark.q  <= 1'h1;
    else \u_uart.u_reg.u_intr_state_tx_watermark.q  <= \u_uart.u_reg.u_intr_state_tx_watermark.d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_uart.u_reg.u_reg_if.outstanding_q  <= \$procmux$2030_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_wdata0_qe.q_o  <= 1'h0;
    else \u_uart.u_reg.u_wdata0_qe.q_o  <= \u_uart.u_reg.u_wdata0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.allzero_cnt_q  <= 5'h00;
    else \u_uart.u_uart_core.allzero_cnt_q  <= \u_uart.u_uart_core.allzero_cnt_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.break_st_q  <= 1'h0;
    else \u_uart.u_uart_core.break_st_q  <= \$procmux$1663_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.nco_sum_q  <= 17'h00000;
    else \u_uart.u_uart_core.nco_sum_q  <= \$580y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_fifo_depth_prev_q  <= 7'h00;
    else \u_uart.u_uart_core.rx_fifo_depth_prev_q  <= \u_uart.u_uart_core.rx_fifo_depth ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_sync_q1  <= 1'h1;
    else \u_uart.u_uart_core.rx_sync_q1  <= \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_sync_q2  <= 1'h1;
    else \u_uart.u_uart_core.rx_sync_q2  <= \u_uart.u_uart_core.rx_sync_q1 ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.sync_rx.u_sync_1.q_o  <= 1'h1;
    else \u_uart.u_uart_core.sync_rx.u_sync_1.q_o  <= cio_rx_i;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  <= 1'h1;
    else \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  <= \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.tx_out_q  <= 1'h1;
    else \u_uart.u_uart_core.tx_out_q  <= \$procmux$1547_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.tx_uart_idle_q  <= 1'h1;
    else \u_uart.u_uart_core.tx_uart_idle_q  <= \u_uart.u_uart_core.tx_uart_idle ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  <= 1'h1;
    else \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  <= \$procmux$1366_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  <= 1'h1;
    else \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  <= \$procmux$1654_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.rx_valid_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_rx.rx_valid_q  <= \$734y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.tick_baud_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_rx.tick_baud_q  <= \u_uart.u_uart_core.uart_rx.tick_baud_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.tick_baud_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_tx.tick_baud_q  <= \$procmux$1609_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  <= 1'h0;
    else \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  <= \$procmux$560_Y ;
  assign \$procmux$1_Y  = \u_gpio.u_reg.masked_oe_lower_qe  ? \$2506y  : 2'hx;
  assign \$procmux$10_Y  = \u_gpio.u_reg.masked_oe_upper_qe  ? \$2502y  : 2'hx;
  assign \$procmux$1006_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$836_Y  : 2'hx;
  assign \$procmux$1014_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$956_Y  : 3'hx;
  assign \$procmux$1023_Y  = \$940y  ? 2'h0 : \$941y ;
  assign \$procmux$1028_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h1;
  assign \$procmux$1035_Y  = \$940y  ? 3'h2 : 3'hx;
  assign \$940y  = \u_uart.u_bridge.idx_q  == 2'h3;
  assign \$procmux$1058_CMP  = \u_uart.u_bridge.idx_q  == 2'h1;
  assign \$procmux$1086_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$1023_Y  : 2'hx;
  assign \$procmux$1095_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$1035_Y  : 3'hx;
  function [2:0] \$procmux$1100 ;
    input [2:0] a;
    input [17:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$1100  = b[2:0];
      6'b????1?:
        \$procmux$1100  = b[5:3];
      6'b???1??:
        \$procmux$1100  = b[8:6];
      6'b??1???:
        \$procmux$1100  = b[11:9];
      6'b?1????:
        \$procmux$1100  = b[14:12];
      6'b1?????:
        \$procmux$1100  = b[17:15];
      default:
        \$procmux$1100  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.rxf_st_d  = \$procmux$1100 (3'hx, { \$procmux$1116_Y , \$procmux$1095_Y , \$procmux$1014_Y , \$procmux$827_Y , 3'h5, \$procmux$740_Y  }, { \$procmux$1110_CMP , \$procmux$1028_CMP , \$procmux$1001_CMP , \$procmux$1104_CMP , \$procmux$1102_CMP , \$procmux$1101_CMP  });
  assign \$procmux$1102_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h4;
  assign \$procmux$1110_CMP  = ! \u_uart.u_bridge.rxf_st_q ;
  assign \$procmux$1116_Y  = \$936y  ? 3'h1 : 3'hx;
  function [0:0] \$procmux$1121 ;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1121  = b[0:0];
      2'b1?:
        \$procmux$1121  = b[1:1];
      default:
        \$procmux$1121  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.req_d  = \$procmux$1121 (1'hx, { 1'h1, \$procmux$732_Y  }, { \$procmux$1102_CMP , \$procmux$1101_CMP  });
  function [0:0] \$procmux$1125 ;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1125  = b[0:0];
      3'b?1?:
        \$procmux$1125  = b[1:1];
      3'b1??:
        \$procmux$1125  = b[2:2];
      default:
        \$procmux$1125  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.we_d  = \$procmux$1125 (1'hx, { \$procmux$966_Y , \$procmux$792_Y , \$procmux$732_Y  }, { \$procmux$1001_CMP , \$procmux$1104_CMP , \$procmux$1101_CMP  });
  assign \$procmux$1104_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h3;
  function [3:0] \$procmux$1134 ;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1134  = b[3:0];
      2'b1?:
        \$procmux$1134  = b[7:4];
      default:
        \$procmux$1134  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.be_d  = \$procmux$1134 (4'hx, { \$procmux$974_Y , \$procmux$799_Y  }, { \$procmux$1001_CMP , \$procmux$1104_CMP  });
  function [31:0] \$procmux$1141 ;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1141  = b[31:0];
      2'b1?:
        \$procmux$1141  = b[63:32];
      default:
        \$procmux$1141  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.wdata_d  = \$procmux$1141 (32'hxxxxxxxx, { \$procmux$982_Y , \$procmux$806_Y  }, { \$procmux$1001_CMP , \$procmux$1104_CMP  });
  function [31:0] \$procmux$1168 ;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1168  = b[31:0];
      2'b1?:
        \$procmux$1168  = b[63:32];
      default:
        \$procmux$1168  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.sh_d  = \$procmux$1168 (32'hxxxxxxxx, { 32'h00000000, \$procmux$1000_Y  }, { \$procmux$1110_CMP , \$auto$opt_reduce.cc:137:opt_pmux$2075  });
  function [1:0] \$procmux$1177 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1177  = b[1:0];
      4'b??1?:
        \$procmux$1177  = b[3:2];
      4'b?1??:
        \$procmux$1177  = b[5:4];
      4'b1???:
        \$procmux$1177  = b[7:6];
      default:
        \$procmux$1177  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.idx_d  = \$procmux$1177 (2'hx, { 2'h0, \$procmux$1086_Y , \$procmux$1006_Y , \$procmux$820_Y  }, { \$procmux$1110_CMP , \$procmux$1028_CMP , \$procmux$1001_CMP , \$procmux$1104_CMP  });
  assign \$procmux$1185_Y  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$1192_Y  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$1185_Y ;
  function [7:0] \$procmux$1195 ;
    input [7:0] a;
    input [39:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1195  = b[7:0];
      5'b???1?:
        \$procmux$1195  = b[15:8];
      5'b??1??:
        \$procmux$1195  = b[23:16];
      5'b?1???:
        \$procmux$1195  = b[31:24];
      5'b1????:
        \$procmux$1195  = b[39:32];
      default:
        \$procmux$1195  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [31:24] = \$procmux$1195 (8'hff, { 8'h00, \u_rv_timer.u_reg.u_timer_v_lower0.q [31:24], \u_rv_timer.u_reg.u_timer_v_upper0.q [31:24], \u_rv_timer.u_reg.u_compare_lower0_0.q [31:24], \u_rv_timer.u_reg.u_compare_upper0_0.q [31:24] }, { \$auto$opt_reduce.cc:137:opt_pmux$2063 , \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [3:0] \$procmux$1206 ;
    input [3:0] a;
    input [19:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1206  = b[3:0];
      5'b???1?:
        \$procmux$1206  = b[7:4];
      5'b??1??:
        \$procmux$1206  = b[11:8];
      5'b?1???:
        \$procmux$1206  = b[15:12];
      5'b1????:
        \$procmux$1206  = b[19:16];
      default:
        \$procmux$1206  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [15:12] = \$procmux$1206 (4'hf, { 4'h0, \u_rv_timer.u_reg.u_timer_v_lower0.q [15:12], \u_rv_timer.u_reg.u_timer_v_upper0.q [15:12], \u_rv_timer.u_reg.u_compare_lower0_0.q [15:12], \u_rv_timer.u_reg.u_compare_upper0_0.q [15:12] }, { \$auto$opt_reduce.cc:137:opt_pmux$2063 , \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  assign \$procmux$121_Y  = \u_rv_timer.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  function [10:0] \$procmux$1217 ;
    input [10:0] a;
    input [65:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$1217  = b[10:0];
      6'b????1?:
        \$procmux$1217  = b[21:11];
      6'b???1??:
        \$procmux$1217  = b[32:22];
      6'b??1???:
        \$procmux$1217  = b[43:33];
      6'b?1????:
        \$procmux$1217  = b[54:44];
      6'b1?????:
        \$procmux$1217  = b[65:55];
      default:
        \$procmux$1217  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [11:1] = \$procmux$1217 (11'h7ff, { 11'h000, \u_rv_timer.u_reg.u_cfg0_prescale.q [11:1], \u_rv_timer.u_reg.u_timer_v_lower0.q [11:1], \u_rv_timer.u_reg.u_timer_v_upper0.q [11:1], \u_rv_timer.u_reg.u_compare_lower0_0.q [11:1], \u_rv_timer.u_reg.u_compare_upper0_0.q [11:1] }, { \$auto$opt_reduce.cc:137:opt_pmux$2039 , \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [0:0] \$procmux$1228 ;
    input [0:0] a;
    input [8:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        \$procmux$1228  = b[0:0];
      9'b???????1?:
        \$procmux$1228  = b[1:1];
      9'b??????1??:
        \$procmux$1228  = b[2:2];
      9'b?????1???:
        \$procmux$1228  = b[3:3];
      9'b????1????:
        \$procmux$1228  = b[4:4];
      9'b???1?????:
        \$procmux$1228  = b[5:5];
      9'b??1??????:
        \$procmux$1228  = b[6:6];
      9'b?1???????:
        \$procmux$1228  = b[7:7];
      9'b1????????:
        \$procmux$1228  = b[8:8];
      default:
        \$procmux$1228  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [0] = \$procmux$1228 (1'h1, { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , 1'h0, \u_rv_timer.u_reg.u_cfg0_prescale.q [0], \u_rv_timer.u_reg.u_timer_v_lower0.q [0], \u_rv_timer.u_reg.u_timer_v_upper0.q [0], \u_rv_timer.u_reg.u_compare_lower0_0.q [0], \u_rv_timer.u_reg.u_compare_upper0_0.q [0] }, { \u_rv_timer.u_reg.addr_hit [0], \u_rv_timer.u_reg.addr_hit [1], \u_rv_timer.u_reg.addr_hit [2], \u_rv_timer.u_reg.addr_hit [3], \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [7:0] \$procmux$1239 ;
    input [7:0] a;
    input [47:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$1239  = b[7:0];
      6'b????1?:
        \$procmux$1239  = b[15:8];
      6'b???1??:
        \$procmux$1239  = b[23:16];
      6'b??1???:
        \$procmux$1239  = b[31:24];
      6'b?1????:
        \$procmux$1239  = b[39:32];
      6'b1?????:
        \$procmux$1239  = b[47:40];
      default:
        \$procmux$1239  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [23:16] = \$procmux$1239 (8'hff, { 8'h00, \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_timer_v_lower0.q [23:16], \u_rv_timer.u_reg.u_timer_v_upper0.q [23:16], \u_rv_timer.u_reg.u_compare_lower0_0.q [23:16], \u_rv_timer.u_reg.u_compare_upper0_0.q [23:16] }, { \$auto$opt_reduce.cc:137:opt_pmux$2039 , \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  assign \$procmux$124_Y  = \$2890y  ? 12'h000 : \$2891y ;
  assign \$procmux$1250_Y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  ? 16'h0000 : \$2155y ;
  assign \$procmux$1253_Y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  ? 16'h0000 : \$2135y ;
  function [0:0] \$procmux$1261 ;
    input [0:0] a;
    input [8:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        \$procmux$1261  = b[0:0];
      9'b???????1?:
        \$procmux$1261  = b[1:1];
      9'b??????1??:
        \$procmux$1261  = b[2:2];
      9'b?????1???:
        \$procmux$1261  = b[3:3];
      9'b????1????:
        \$procmux$1261  = b[4:4];
      9'b???1?????:
        \$procmux$1261  = b[5:5];
      9'b??1??????:
        \$procmux$1261  = b[6:6];
      9'b?1???????:
        \$procmux$1261  = b[7:7];
      9'b1????????:
        \$procmux$1261  = b[8:8];
      default:
        \$procmux$1261  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.busy_i  = \$procmux$1261 (1'h0, { \u_pwm.u_reg.u_cfg_cdc.src_busy_q , \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q , \u_pwm.u_reg.u_invert_cdc.src_busy_q , \u_pwm.u_reg.u_pwm_param_0_cdc.src_busy_q , \u_pwm.u_reg.u_pwm_param_1_cdc.src_busy_q , \u_pwm.u_reg.u_duty_cycle_0_cdc.src_busy_q , \u_pwm.u_reg.u_duty_cycle_1_cdc.src_busy_q , \u_pwm.u_reg.u_blink_param_0_cdc.src_busy_q , \u_pwm.u_reg.u_blink_param_1_cdc.src_busy_q  }, { \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [7], \u_gpio.u_reg.addr_hit [8], \u_gpio.u_reg.addr_hit [9] });
  function [30:0] \$procmux$1272 ;
    input [30:0] a;
    input [309:0] b;
    input [9:0] s;
    casez (s) // synopsys parallel_case
      10'b?????????1:
        \$procmux$1272  = b[30:0];
      10'b????????1?:
        \$procmux$1272  = b[61:31];
      10'b???????1??:
        \$procmux$1272  = b[92:62];
      10'b??????1???:
        \$procmux$1272  = b[123:93];
      10'b?????1????:
        \$procmux$1272  = b[154:124];
      10'b????1?????:
        \$procmux$1272  = b[185:155];
      10'b???1??????:
        \$procmux$1272  = b[216:186];
      10'b??1???????:
        \$procmux$1272  = b[247:217];
      10'b?1????????:
        \$procmux$1272  = b[278:248];
      10'b1?????????:
        \$procmux$1272  = b[309:279];
      default:
        \$procmux$1272  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.rdata_i [31:1] = \$procmux$1272 (31'h7fffffff, { 31'h00000000, \u_pwm.u_reg.u_cfg_cdc.src_q [31:1], 30'h00000000, \u_pwm.u_reg.u_pwm_en_cdc.src_q [1], 30'h00000000, \u_pwm.u_reg.u_invert_cdc.src_q [1], \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [31:1], \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [31:1], \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [31:1], \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [31:1], \u_pwm.u_reg.u_blink_param_0_cdc.src_q [31:1], \u_pwm.u_reg.u_blink_param_1_cdc.src_q [31:1] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [7], \u_gpio.u_reg.addr_hit [8], \u_gpio.u_reg.addr_hit [9] });
  function [0:0] \$procmux$1284 ;
    input [0:0] a;
    input [9:0] b;
    input [9:0] s;
    casez (s) // synopsys parallel_case
      10'b?????????1:
        \$procmux$1284  = b[0:0];
      10'b????????1?:
        \$procmux$1284  = b[1:1];
      10'b???????1??:
        \$procmux$1284  = b[2:2];
      10'b??????1???:
        \$procmux$1284  = b[3:3];
      10'b?????1????:
        \$procmux$1284  = b[4:4];
      10'b????1?????:
        \$procmux$1284  = b[5:5];
      10'b???1??????:
        \$procmux$1284  = b[6:6];
      10'b??1???????:
        \$procmux$1284  = b[7:7];
      10'b?1????????:
        \$procmux$1284  = b[8:8];
      10'b1?????????:
        \$procmux$1284  = b[9:9];
      default:
        \$procmux$1284  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.rdata_i [0] = \$procmux$1284 (1'h1, { \u_pwm.u_reg.u_regwen.q , \u_pwm.u_reg.u_cfg_cdc.src_q [0], \u_pwm.u_reg.u_pwm_en_cdc.src_q [0], \u_pwm.u_reg.u_invert_cdc.src_q [0], \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [0], \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [0], \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [0], \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [0], \u_pwm.u_reg.u_blink_param_0_cdc.src_q [0], \u_pwm.u_reg.u_blink_param_1_cdc.src_q [0] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [7], \u_gpio.u_reg.addr_hit [8], \u_gpio.u_reg.addr_hit [9] });
  assign \$procmux$131_Y  = \u_rv_timer.u_reg.u_ctrl.q  ? \$procmux$124_Y  : 12'h000;
  assign \$procmux$1310_Y  = \$824y  ? 7'h3e : \$825y ;
  assign \u_uart.u_uart_core.rx_watermark_thresh  = \$823y  ? 7'h7f : \$procmux$1310_Y ;
  assign \u_uart.u_uart_core.tx_watermark_thresh  = \$810y  ? 6'h10 : \$811y ;
  assign \$procmux$1328_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  ? \$782y  : 7'hxx;
  assign \$procmux$1338_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [6], 6'h00 } : \$procmux$1328_Y ;
  assign \$procmux$1345_Y  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i  ? 7'h00 : \$procmux$1338_Y ;
  assign \$procmux$1347_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  ? \$775y  : 7'hxx;
  assign \$procmux$135_Y  = \u_pwm.u_reg.u_invert_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$1357_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [6], 6'h00 } : \$procmux$1347_Y ;
  assign \$procmux$1364_Y  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i  ? 7'h00 : \$procmux$1357_Y ;
  assign \$procmux$1366_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  ? \$749y  : 1'h0;
  assign \$procmux$1368_Y  = \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$1373_Y  = \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_to_src  ? { \u_pwm.u_reg.u_duty_cycle_0_b_0.q , \u_pwm.u_reg.u_duty_cycle_0_a_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$1380_Y  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$1368_Y ;
  assign \$procmux$1384_Y  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$1373_Y ;
  assign \$procmux$1387_Y  = \$711y  ? 1'h1 : \$713y ;
  assign \$procmux$1398_Y  = \$711y  ? 4'h0 : \$712y ;
  assign \$procmux$140_Y  = \u_pwm.u_reg.u_invert_cdc.dst_to_src  ? { \u_pwm.u_reg.u_invert_invert_1.q , \u_pwm.u_reg.u_invert_invert_0.q  } : 2'hx;
  assign \$procmux$1409_Y  = \$711y  ? 11'hxxx : { \u_uart.u_uart_core.uart_rx.rx , \u_uart.u_uart_core.uart_rx.sreg_q [10:1] };
  assign \$procmux$1420_Y  = \$708y  ? \$procmux$1387_Y  : 1'hx;
  assign \$procmux$1429_Y  = \$708y  ? \$procmux$1398_Y  : 4'hx;
  assign \$procmux$1438_Y  = \$708y  ? \$procmux$1409_Y  : 11'hxxx;
  assign \u_uart.u_uart_core.uart_rx.idle_d  = \$705y  ? 1'h0 : \$procmux$1420_Y ;
  assign \u_uart.u_uart_core.uart_rx.bit_cnt_d  = \$705y  ? \$655y  : \$procmux$1429_Y ;
  assign \u_uart.u_uart_core.uart_rx.sreg_d  = \$705y  ? 11'h000 : \$procmux$1438_Y ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud_d  = \$705y  ? 1'h0 : \$procmux$1481_Y ;
  assign \$procmux$147_Y  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$135_Y ;
  assign \u_uart.u_uart_core.uart_rx.baud_div_d  = \$705y  ? 4'h8 : \$procmux$1486_Y ;
  assign \$procmux$1481_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$701y [4] : 1'h0;
  assign \$procmux$1486_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$701y [3:0] : 4'hx;
  assign \$procmux$151_Y  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata [1:0] : \$procmux$140_Y ;
  assign \$procmux$1511_Y  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$1518_Y  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$1511_Y ;
  assign \$procmux$153_Y  = \u_pwm.u_reg.u_invert_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$1537_Y  = \u_gpio.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$1540_Y  = \u_uart.u_reg.u_ctrl_slpbk.q  ? 1'h1 : \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \$procmux$1547_Y  = \u_uart.u_reg.u_ovrd_txen.q  ? \u_uart.u_reg.u_ovrd_txval.q  : \$procmux$1540_Y ;
  assign \$procmux$1549_Y  = \$657y  ? \u_uart.u_uart_core.uart_tx.sreg_q [0] : 1'hx;
  assign \$procmux$1557_Y  = \$657y  ? { 1'h1, \u_uart.u_uart_core.uart_tx.sreg_q [10:1] } : 11'hxxx;
  assign \$procmux$1565_Y  = \$657y  ? \$658y  : 4'hx;
  assign \$procmux$1575_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? { 1'h1, \$654y , \u_uart.u_uart_core.tx_fifo_data , 1'h0 } : \$procmux$1557_Y ;
  assign \$procmux$1582_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? \$655y  : \$procmux$1565_Y ;
  assign \$procmux$1589_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? 1'hx : \$procmux$1549_Y ;
  assign \u_uart.u_uart_core.uart_tx.tx_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1589_Y  : 1'h1;
  assign \$procmux$160_Y  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$153_Y ;
  assign \u_uart.u_uart_core.uart_tx.sreg_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1575_Y  : 11'h7ff;
  assign \u_uart.u_uart_core.uart_tx.bit_cnt_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1582_Y  : 4'h0;
  assign \$procmux$1609_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$646y [4] : 1'h0;
  assign \$procmux$1616_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  ? \$620y  : 6'hxx;
  assign \$procmux$1626_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [5], 5'h00 } : \$procmux$1616_Y ;
  assign \$procmux$1633_Y  = \u_uart.u_uart_core.u_uart_txfifo.clr_i  ? 6'h00 : \$procmux$1626_Y ;
  assign \$procmux$1635_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  ? \$613y  : 6'hxx;
  assign \$procmux$1645_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [5], 5'h00 } : \$procmux$1635_Y ;
  assign \u_gpio.u_reg.u_reg_if.rdata_i [31:4] = \$2731y  ? 28'h0000000 : 28'hfffffff;
  assign \$procmux$1652_Y  = \u_uart.u_uart_core.u_uart_txfifo.clr_i  ? 6'h00 : \$procmux$1645_Y ;
  assign \$procmux$1654_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  ? \$587y  : 1'h0;
  assign \$procmux$1658_Y  = \u_uart.u_uart_core.uart_rx.rx  ? 1'h0 : 1'h1;
  function [0:0] \$procmux$1663 ;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1663  = b[0:0];
      2'b1?:
        \$procmux$1663  = b[1:1];
      default:
        \$procmux$1663  = a;
    endcase
  endfunction
  assign \$procmux$1663_Y  = \$procmux$1663 (1'hx, { \$procmux$1668_Y , \$procmux$1658_Y  }, { \$845y , \u_uart.u_uart_core.break_st_q  });
  assign \$procmux$1668_Y  = \u_uart.u_uart_core.intr_hw_rx_break_err.event_intr_i  ? 1'h1 : 1'h0;
  function [0:0] \$procmux$1673 ;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1673  = b[0:0];
      3'b?1?:
        \$procmux$1673  = b[1:1];
      3'b1??:
        \$procmux$1673  = b[2:2];
      default:
        \$procmux$1673  = a;
    endcase
  endfunction
  assign \u_uart.u_uart_core.break_err  = \$procmux$1673 (\$562y , { \$559y , \$560y , \$561y  }, { \$procmux$1676_CMP , \$procmux$1675_CMP , \$procmux$1674_CMP  });
  assign \$procmux$1674_CMP  = \u_uart.u_reg.u_ctrl_rxblvl.q  == 2'h2;
  assign \$procmux$1675_CMP  = \u_uart.u_reg.u_ctrl_rxblvl.q  == 2'h1;
  assign \$procmux$1676_CMP  = ! \u_uart.u_reg.u_ctrl_rxblvl.q ;
  function [0:0] \$procmux$1680 ;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1680  = b[0:0];
      3'b?1?:
        \$procmux$1680  = b[1:1];
      3'b1??:
        \$procmux$1680  = b[2:2];
      default:
        \$procmux$1680  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [31] = \$procmux$1680 (1'h1, { \u_uart.u_reg.u_ctrl_nco.q [15], 1'h0, \u_uart.u_reg.u_timeout_ctrl_en.q  }, { \u_gpio.u_reg.addr_hit [4], \$auto$opt_reduce.cc:137:opt_pmux$2069 , \u_gpio.u_reg.addr_hit [12] });
  function [7:0] \$procmux$1695 ;
    input [7:0] a;
    input [31:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1695  = b[7:0];
      4'b??1?:
        \$procmux$1695  = b[15:8];
      4'b?1??:
        \$procmux$1695  = b[23:16];
      4'b1???:
        \$procmux$1695  = b[31:24];
      default:
        \$procmux$1695  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [23:16] = \$procmux$1695 (8'hff, { \u_uart.u_reg.u_ctrl_nco.q [7:0], 1'h0, \u_uart.u_uart_core.rx_fifo_depth , 8'h00, \u_uart.u_reg.u_timeout_ctrl_val.q [23:16] }, { \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [9], \$auto$opt_reduce.cc:137:opt_pmux$2041 , \u_gpio.u_reg.addr_hit [12] });
  assign \$procmux$17_Y  = \u_gpio.u_reg.masked_oe_upper_qe  ? 2'hx : \$procmux$1_Y ;
  function [0:0] \$procmux$1710 ;
    input [0:0] a;
    input [5:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$1710  = b[0:0];
      6'b????1?:
        \$procmux$1710  = b[1:1];
      6'b???1??:
        \$procmux$1710  = b[2:2];
      6'b??1???:
        \$procmux$1710  = b[3:3];
      6'b?1????:
        \$procmux$1710  = b[4:4];
      6'b1?????:
        \$procmux$1710  = b[5:5];
      default:
        \$procmux$1710  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [8] = \$procmux$1710 (1'h1, { \u_uart.u_reg.u_intr_state_tx_empty.q , \u_uart.u_reg.u_intr_enable_tx_empty.q , \u_uart.u_reg.u_ctrl_rxblvl.q [0], 1'h0, \u_uart.u_uart_core.rx_val_q [8], \u_uart.u_reg.u_timeout_ctrl_val.q [8] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [4], \$auto$opt_reduce.cc:137:opt_pmux$2043 , \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12] });
  function [0:0] \$procmux$1725 ;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1725  = b[0:0];
      4'b??1?:
        \$procmux$1725  = b[1:1];
      4'b?1??:
        \$procmux$1725  = b[2:2];
      4'b1???:
        \$procmux$1725  = b[3:3];
      default:
        \$procmux$1725  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [9] = \$procmux$1725 (1'h1, { \u_uart.u_reg.u_ctrl_rxblvl.q [1], 1'h0, \u_uart.u_uart_core.rx_val_q [9], \u_uart.u_reg.u_timeout_ctrl_val.q [9] }, { \u_gpio.u_reg.addr_hit [4], \$auto$opt_reduce.cc:137:opt_pmux$2067 , \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12] });
  function [6:0] \$procmux$1740 ;
    input [6:0] a;
    input [13:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1740  = b[6:0];
      2'b1?:
        \$procmux$1740  = b[13:7];
      default:
        \$procmux$1740  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [30:24] = \$procmux$1740 (7'h7f, { \u_uart.u_reg.u_ctrl_nco.q [14:8], 7'h00 }, { \u_gpio.u_reg.addr_hit [4], \$auto$opt_reduce.cc:137:opt_pmux$2053  });
  function [0:0] \$procmux$1755 ;
    input [0:0] a;
    input [9:0] b;
    input [9:0] s;
    casez (s) // synopsys parallel_case
      10'b?????????1:
        \$procmux$1755  = b[0:0];
      10'b????????1?:
        \$procmux$1755  = b[1:1];
      10'b???????1??:
        \$procmux$1755  = b[2:2];
      10'b??????1???:
        \$procmux$1755  = b[3:3];
      10'b?????1????:
        \$procmux$1755  = b[4:4];
      10'b????1?????:
        \$procmux$1755  = b[5:5];
      10'b???1??????:
        \$procmux$1755  = b[6:6];
      10'b??1???????:
        \$procmux$1755  = b[7:7];
      10'b?1????????:
        \$procmux$1755  = b[8:8];
      10'b1?????????:
        \$procmux$1755  = b[9:9];
      default:
        \$procmux$1755  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [1] = \$procmux$1755 (1'h1, { \u_uart.u_reg.u_intr_state_rx_watermark.q , \u_uart.u_reg.u_intr_enable_rx_watermark.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_bridge.rx_data_i [1], 1'h0, \u_uart.u_uart_core.tx_fifo_depth [1], \u_uart.u_reg.u_ovrd_txval.q , \u_uart.u_uart_core.rx_val_q [1], \u_uart.u_reg.u_timeout_ctrl_val.q [1] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \$auto$opt_reduce.cc:137:opt_pmux$2055 , \u_gpio.u_reg.addr_hit [9], \u_gpio.u_reg.addr_hit [10], \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12] });
  function [1:0] \$procmux$1770 ;
    input [1:0] a;
    input [15:0] b;
    input [7:0] s;
    casez (s) // synopsys parallel_case
      8'b???????1:
        \$procmux$1770  = b[1:0];
      8'b??????1?:
        \$procmux$1770  = b[3:2];
      8'b?????1??:
        \$procmux$1770  = b[5:4];
      8'b????1???:
        \$procmux$1770  = b[7:6];
      8'b???1????:
        \$procmux$1770  = b[9:8];
      8'b??1?????:
        \$procmux$1770  = b[11:10];
      8'b?1??????:
        \$procmux$1770  = b[13:12];
      8'b1???????:
        \$procmux$1770  = b[15:14];
      default:
        \$procmux$1770  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [7:6] = \$procmux$1770 (2'h3, { \u_uart.u_reg.u_intr_state_rx_parity_err.q , \u_uart.u_reg.u_intr_state_rx_timeout.q , \u_uart.u_reg.u_intr_enable_rx_parity_err.q , \u_uart.u_reg.u_intr_enable_rx_timeout.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_bridge.rx_data_i [7:6], \u_uart.u_reg.u_fifo_ctrl_txilvl.q [2:1], 2'h0, \u_uart.u_uart_core.rx_val_q [7:6], \u_uart.u_reg.u_timeout_ctrl_val.q [7:6] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [8], \$auto$opt_reduce.cc:137:opt_pmux$2059 , \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12] });
  function [1:0] \$procmux$1785 ;
    input [1:0] a;
    input [19:0] b;
    input [9:0] s;
    casez (s) // synopsys parallel_case
      10'b?????????1:
        \$procmux$1785  = b[1:0];
      10'b????????1?:
        \$procmux$1785  = b[3:2];
      10'b???????1??:
        \$procmux$1785  = b[5:4];
      10'b??????1???:
        \$procmux$1785  = b[7:6];
      10'b?????1????:
        \$procmux$1785  = b[9:8];
      10'b????1?????:
        \$procmux$1785  = b[11:10];
      10'b???1??????:
        \$procmux$1785  = b[13:12];
      10'b??1???????:
        \$procmux$1785  = b[15:14];
      10'b?1????????:
        \$procmux$1785  = b[17:16];
      10'b1?????????:
        \$procmux$1785  = b[19:18];
      default:
        \$procmux$1785  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [5:4] = \$procmux$1785 (2'h3, { \u_uart.u_reg.u_intr_state_rx_break_err.q , \u_uart.u_reg.u_intr_state_rx_frame_err.q , \u_uart.u_reg.u_intr_enable_rx_break_err.q , \u_uart.u_reg.u_intr_enable_rx_frame_err.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_bridge.rx_data_i [5:4], \u_uart.u_reg.u_fifo_ctrl_txilvl.q [0], \u_uart.u_reg.u_fifo_ctrl_rxilvl.q [2], \u_uart.u_uart_core.tx_fifo_depth [5:4], 2'h0, \u_uart.u_uart_core.rx_val_q [5:4], \u_uart.u_reg.u_timeout_ctrl_val.q [5:4] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [8], \u_gpio.u_reg.addr_hit [9], \$auto$opt_reduce.cc:137:opt_pmux$2047 , \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12] });
  function [0:0] \$procmux$1800 ;
    input [0:0] a;
    input [8:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        \$procmux$1800  = b[0:0];
      9'b???????1?:
        \$procmux$1800  = b[1:1];
      9'b??????1??:
        \$procmux$1800  = b[2:2];
      9'b?????1???:
        \$procmux$1800  = b[3:3];
      9'b????1????:
        \$procmux$1800  = b[4:4];
      9'b???1?????:
        \$procmux$1800  = b[5:5];
      9'b??1??????:
        \$procmux$1800  = b[6:6];
      9'b?1???????:
        \$procmux$1800  = b[7:7];
      9'b1????????:
        \$procmux$1800  = b[8:8];
      default:
        \$procmux$1800  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [3] = \$procmux$1800 (1'h1, { \u_uart.u_reg.u_intr_state_rx_overflow.q , \u_uart.u_reg.u_intr_enable_rx_overflow.q , \u_uart.u_reg.status_txidle_qs , \u_uart.u_bridge.rx_data_i [3], \u_uart.u_reg.u_fifo_ctrl_rxilvl.q [1], \u_uart.u_uart_core.tx_fifo_depth [3], 1'h0, \u_uart.u_uart_core.rx_val_q [3], \u_uart.u_reg.u_timeout_ctrl_val.q [3] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [8], \u_gpio.u_reg.addr_hit [9], \$auto$opt_reduce.cc:137:opt_pmux$2049 , \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12] });
  function [5:0] \$procmux$1815 ;
    input [5:0] a;
    input [17:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1815  = b[5:0];
      3'b?1?:
        \$procmux$1815  = b[11:6];
      3'b1??:
        \$procmux$1815  = b[17:12];
      default:
        \$procmux$1815  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [15:10] = \$procmux$1815 (6'h3f, { 6'h00, \u_uart.u_uart_core.rx_val_q [15:10], \u_uart.u_reg.u_timeout_ctrl_val.q [15:10] }, { \$auto$opt_reduce.cc:137:opt_pmux$2071 , \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12] });
  function [3:0] \$procmux$182 ;
    input [3:0] a;
    input [59:0] b;
    input [14:0] s;
    casez (s) // synopsys parallel_case
      15'b??????????????1:
        \$procmux$182  = b[3:0];
      15'b?????????????1?:
        \$procmux$182  = b[7:4];
      15'b????????????1??:
        \$procmux$182  = b[11:8];
      15'b???????????1???:
        \$procmux$182  = b[15:12];
      15'b??????????1????:
        \$procmux$182  = b[19:16];
      15'b?????????1?????:
        \$procmux$182  = b[23:20];
      15'b????????1??????:
        \$procmux$182  = b[27:24];
      15'b???????1???????:
        \$procmux$182  = b[31:28];
      15'b??????1????????:
        \$procmux$182  = b[35:32];
      15'b?????1?????????:
        \$procmux$182  = b[39:36];
      15'b????1??????????:
        \$procmux$182  = b[43:40];
      15'b???1???????????:
        \$procmux$182  = b[47:44];
      15'b??1????????????:
        \$procmux$182  = b[51:48];
      15'b?1?????????????:
        \$procmux$182  = b[55:52];
      15'b1??????????????:
        \$procmux$182  = b[59:56];
      default:
        \$procmux$182  = a;
    endcase
  endfunction
  assign \u_gpio.u_reg.u_reg_if.rdata_i [3:0] = \$procmux$182 (4'hf, { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , 4'h0, \u_gpio.u_reg.u_data_in.q , \u_gpio.cio_gpio_q , 2'h0, \u_gpio.cio_gpio_q [1:0], 2'h0, \u_gpio.cio_gpio_q [3:2], \u_gpio.cio_gpio_en_q , 2'h0, \u_gpio.cio_gpio_en_q [1:0], 2'h0, \u_gpio.cio_gpio_en_q [3:2], \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [7], \u_gpio.u_reg.addr_hit [8], \u_gpio.u_reg.addr_hit [9], \u_gpio.u_reg.addr_hit [10], \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12], \u_gpio.u_reg.addr_hit [13], \u_gpio.u_reg.addr_hit [14] });
  function [0:0] \$procmux$1830 ;
    input [0:0] a;
    input [9:0] b;
    input [9:0] s;
    casez (s) // synopsys parallel_case
      10'b?????????1:
        \$procmux$1830  = b[0:0];
      10'b????????1?:
        \$procmux$1830  = b[1:1];
      10'b???????1??:
        \$procmux$1830  = b[2:2];
      10'b??????1???:
        \$procmux$1830  = b[3:3];
      10'b?????1????:
        \$procmux$1830  = b[4:4];
      10'b????1?????:
        \$procmux$1830  = b[5:5];
      10'b???1??????:
        \$procmux$1830  = b[6:6];
      10'b??1???????:
        \$procmux$1830  = b[7:7];
      10'b?1????????:
        \$procmux$1830  = b[8:8];
      10'b1?????????:
        \$procmux$1830  = b[9:9];
      default:
        \$procmux$1830  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [2] = \$procmux$1830 (1'h1, { \u_uart.u_reg.u_intr_state_tx_done.q , \u_uart.u_reg.u_intr_enable_tx_done.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.status_txempty_qs , \u_uart.u_bridge.rx_data_i [2], \u_uart.u_reg.u_fifo_ctrl_rxilvl.q [0], \u_uart.u_uart_core.tx_fifo_depth [2], 1'h0, \u_uart.u_uart_core.rx_val_q [2], \u_uart.u_reg.u_timeout_ctrl_val.q [2] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [8], \u_gpio.u_reg.addr_hit [9], \$auto$opt_reduce.cc:137:opt_pmux$2047 , \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12] });
  function [0:0] \$procmux$1845 ;
    input [0:0] a;
    input [9:0] b;
    input [9:0] s;
    casez (s) // synopsys parallel_case
      10'b?????????1:
        \$procmux$1845  = b[0:0];
      10'b????????1?:
        \$procmux$1845  = b[1:1];
      10'b???????1??:
        \$procmux$1845  = b[2:2];
      10'b??????1???:
        \$procmux$1845  = b[3:3];
      10'b?????1????:
        \$procmux$1845  = b[4:4];
      10'b????1?????:
        \$procmux$1845  = b[5:5];
      10'b???1??????:
        \$procmux$1845  = b[6:6];
      10'b??1???????:
        \$procmux$1845  = b[7:7];
      10'b?1????????:
        \$procmux$1845  = b[8:8];
      10'b1?????????:
        \$procmux$1845  = b[9:9];
      default:
        \$procmux$1845  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [0] = \$procmux$1845 (1'h1, { \u_uart.u_reg.u_intr_state_tx_watermark.q , \u_uart.u_reg.u_intr_enable_tx_watermark.q , \u_uart.u_reg.u_ctrl_tx.q , \u_uart.u_reg.status_txfull_qs , \u_uart.u_bridge.rx_data_i [0], 1'h0, \u_uart.u_uart_core.tx_fifo_depth [0], \u_uart.u_reg.u_ovrd_txen.q , \u_uart.u_uart_core.rx_val_q [0], \u_uart.u_reg.u_timeout_ctrl_val.q [0] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \$auto$opt_reduce.cc:137:opt_pmux$2055 , \u_gpio.u_reg.addr_hit [9], \u_gpio.u_reg.addr_hit [10], \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12] });
  assign \$procmux$1982_Y  = \u_pwm.u_reg.u_pwm_param_1_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$1987_Y  = \u_pwm.u_reg.u_pwm_param_1_cdc.dst_to_src  ? { \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q , \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q  } : 32'hxxxxxxxx;
  assign \$procmux$1994_Y  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$1982_Y ;
  assign \$procmux$1998_Y  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i  ? { \u_pwm.u_reg.reg_wdata [31:30], 14'h0000, \u_pwm.u_reg.reg_wdata [15:0] } : \$procmux$1987_Y ;
  assign \$procmux$2000_Y  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$2007_Y  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$2000_Y ;
  assign \$procmux$2030_Y  = \u_uart.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$206_Y  = \u_pwm.u_reg.u_blink_param_1_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$211_Y  = \u_pwm.u_reg.u_blink_param_1_cdc.dst_to_src  ? { \u_pwm.u_reg.u_blink_param_1_y_1.q , \u_pwm.u_reg.u_blink_param_1_x_1.q  } : 32'hxxxxxxxx;
  assign \$procmux$218_Y  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$206_Y ;
  assign \$procmux$222_Y  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$211_Y ;
  assign \$procmux$224_Y  = \u_pwm.u_reg.u_blink_param_1_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$231_Y  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$224_Y ;
  assign \$procmux$239_Y  = \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$24_Y  = \u_gpio.u_reg.direct_oe_flds_we  ? \u_gpio.u_reg.reg_wdata [3:0] : { \$procmux$10_Y , \$procmux$17_Y  };
  assign \$procmux$244_Y  = \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  ? { \u_pwm.u_reg.u_pwm_en_en_1.q , \u_pwm.u_reg.u_pwm_en_en_0.q  } : 2'hx;
  assign \$procmux$251_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$239_Y ;
  assign \$procmux$255_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata [1:0] : \$procmux$244_Y ;
  assign \$procmux$257_Y  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$264_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$257_Y ;
  assign \$procmux$32_Y  = \u_gpio.u_reg.masked_out_lower_qe  ? \$2492y  : 2'hx;
  assign \$procmux$350_Y  = \u_pwm.u_reg.u_blink_param_0_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$355_Y  = \u_pwm.u_reg.u_blink_param_0_cdc.dst_to_src  ? { \u_pwm.u_reg.u_blink_param_0_y_0.q , \u_pwm.u_reg.u_blink_param_0_x_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$362_Y  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$350_Y ;
  assign \$procmux$366_Y  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$355_Y ;
  assign \$procmux$368_Y  = \u_pwm.u_reg.u_blink_param_0_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$375_Y  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$368_Y ;
  assign \$procmux$379_Y  = \u_pwm.u_reg.u_cfg_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$384_Y  = \u_pwm.u_reg.u_cfg_cdc.dst_to_src  ? { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  } : 32'hxxxxxxxx;
  assign \$procmux$391_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$379_Y ;
  assign \$procmux$395_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$384_Y ;
  assign \$procmux$397_Y  = \u_pwm.u_reg.u_cfg_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$404_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$397_Y ;
  assign \$procmux$407_Y  = \$2350y  ? \u_pwm.u_reg.u_duty_cycle_1_a_1.q  : \$2353y ;
  assign \$procmux$41_Y  = \u_gpio.u_reg.masked_out_upper_qe  ? \$2488y  : 2'hx;
  assign \$procmux$449_Y  = \$2315y  ? 1'h1 : 1'hx;
  assign \$procmux$465_Y  = \$2312y  ? 1'h0 : \$procmux$449_Y ;
  assign \$procmux$478_Y  = \$2308y  ? 1'h0 : \$procmux$465_Y ;
  assign \$procmux$48_Y  = \u_gpio.u_reg.masked_out_upper_qe  ? 2'hx : \$procmux$32_Y ;
  assign \$procmux$488_Y  = \$2305y  ? 1'h1 : \$procmux$478_Y ;
  assign \$procmux$495_Y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i  ? \$2301y  : \$procmux$488_Y ;
  assign \$procmux$504_Y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i  ? 16'h0000 : \$2289y ;
  assign \$procmux$507_Y  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i  ? 16'h0000 : \$2269y ;
  assign \$procmux$528_Y  = \u_pwm.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$531_Y  = \$2216y  ? \u_pwm.u_reg.u_duty_cycle_0_a_0.q  : \$2219y ;
  assign \$procmux$538_Y  = \$1128y  ? 1'h1 : 1'h0;
  assign \$procmux$55_Y  = \u_gpio.u_reg.direct_out_flds_we  ? \u_gpio.u_reg.reg_wdata [3:0] : { \$procmux$41_Y , \$procmux$48_Y  };
  assign \$procmux$560_Y  = \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  ? 1'h0 : \$procmux$538_Y ;
  assign \xbar.u_s1n_6.tl_t_p  = \$1109y  ? { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  } : \$procmux$582_Y ;
  assign \$procmux$582_Y  = \$1107y  ? { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  } : \$procmux$585_Y ;
  assign \$procmux$585_Y  = \$1105y  ? { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  } : \$procmux$587_Y ;
  assign \$procmux$587_Y  = \$1103y  ? { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  } : { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.hfifo_reqready  = \xbar.u_s1n_6.hold_all_requests  ? 1'h0 : \$procmux$593_Y ;
  assign \$procmux$593_Y  = \$1085y  ? \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  : \$procmux$596_Y ;
  assign \$procmux$596_Y  = \$1079y  ? \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  : \$procmux$599_Y ;
  assign \$procmux$599_Y  = \$1073y  ? \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  : \$procmux$601_Y ;
  assign \$procmux$601_Y  = \$1067y  ? \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  : \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0];
  assign \$procmux$606_Y  = \xbar.u_s1n_6.tl_t_p [65] ? \$1042y  : 9'hxxx;
  assign \$procmux$614_Y  = \xbar.u_s1n_6.accept_t_req  ? \$procmux$617_Y  : \$procmux$606_Y ;
  assign \$procmux$617_Y  = \xbar.u_s1n_6.tl_t_p [65] ? 9'hxxx : \$1040y ;
  assign \$procmux$625_Y  = \$1027y  ? 3'h3 : 3'h5;
  assign \$procmux$638_Y  = \$1025y  ? 3'h2 : \$procmux$625_Y ;
  assign \$procmux$648_Y  = \$1023y  ? 3'h1 : \$procmux$638_Y ;
  assign \$procmux$65_Y  = \u_pwm.u_reg.u_pwm_param_0_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \xbar.u_s1n_6.dev_select_t  = \$1021y  ? 3'h0 : \$procmux$648_Y ;
  assign \$procmux$658_Y  = \$2181y  ? 1'h1 : 1'hx;
  assign \$procmux$674_Y  = \$2178y  ? 1'h0 : \$procmux$658_Y ;
  assign \$procmux$687_Y  = \$2174y  ? 1'h0 : \$procmux$674_Y ;
  assign \$procmux$697_Y  = \$2171y  ? 1'h1 : \$procmux$687_Y ;
  assign \$procmux$70_Y  = \u_pwm.u_reg.u_pwm_param_0_cdc.dst_to_src  ? { \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$704_Y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  ? \$2167y  : \$procmux$697_Y ;
  assign \$procmux$707_Y  = \uart_host_adapter.g_multiple_reqs.source_q  ? 1'h0 : \$1003y ;
  assign \$procmux$714_Y  = \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$719_Y  = \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_to_src  ? { \u_pwm.u_reg.u_duty_cycle_1_b_1.q , \u_pwm.u_reg.u_duty_cycle_1_a_1.q  } : 32'hxxxxxxxx;
  assign \$procmux$726_Y  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$714_Y ;
  assign \$procmux$730_Y  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$719_Y ;
  assign \$procmux$732_Y  = \$1001y  ? 1'h0 : 1'hx;
  assign \$procmux$1101_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h5;
  assign \$procmux$740_Y  = \$1001y  ? 3'h0 : 3'hx;
  assign \$procmux$747_Y  = \$940y  ? 1'h1 : 1'hx;
  assign \$procmux$756_Y  = \$940y  ? \u_uart.u_bridge.bebyte_q [3:0] : 4'hx;
  assign \$procmux$765_Y  = \$940y  ? { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] } : 32'hxxxxxxxx;
  assign \$procmux$77_Y  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$65_Y ;
  assign \$procmux$774_Y  = \$940y  ? 2'hx : \$941y ;
  assign \$procmux$783_Y  = \$940y  ? 3'h4 : 3'hx;
  assign \$procmux$792_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$747_Y  : 1'hx;
  assign \$procmux$799_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$756_Y  : 4'hx;
  assign \$procmux$806_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$765_Y  : 32'hxxxxxxxx;
  assign \$procmux$81_Y  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i  ? { \u_pwm.u_reg.reg_wdata [31:30], 14'h0000, \u_pwm.u_reg.reg_wdata [15:0] } : \$procmux$70_Y ;
  assign \$procmux$1000_Y  = \u_uart.u_bridge.rx_valid_i  ? { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] } : 32'hxxxxxxxx;
  assign \$procmux$820_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$774_Y  : 2'hx;
  assign \$procmux$827_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$783_Y  : 3'hx;
  assign \$procmux$83_Y  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$836_Y  = \$940y  ? \$procmux$899_Y  : \$941y ;
  assign \$procmux$847_Y  = \$949y  ? 3'h3 : 3'h4;
  assign \$procmux$860_Y  = \$949y  ? 1'hx : 1'h0;
  assign \$procmux$873_Y  = \$949y  ? 4'hx : 4'hf;
  assign \$procmux$886_Y  = \$949y  ? 32'hxxxxxxxx : 32'd0;
  assign \$procmux$899_Y  = \$949y  ? 2'h0 : 2'hx;
  assign \$procmux$90_Y  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$83_Y ;
  assign \$procmux$912_Y  = \$940y  ? \$procmux$860_Y  : 1'hx;
  assign \$procmux$923_Y  = \$940y  ? \$procmux$873_Y  : 4'hx;
  assign \$procmux$934_Y  = \$940y  ? \$procmux$886_Y  : 32'hxxxxxxxx;
  assign \$procmux$956_Y  = \$940y  ? \$procmux$847_Y  : 3'hx;
  assign \$procmux$966_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$912_Y  : 1'hx;
  assign \$procmux$974_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$923_Y  : 4'hx;
  assign \$procmux$982_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$934_Y  : 32'hxxxxxxxx;
  assign \$procmux$1001_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h2;
  assign cio_gpio_en_o = \u_gpio.cio_gpio_en_q ;
  assign cio_gpio_o = \u_gpio.cio_gpio_q ;
  assign cio_pwm_en_o = 2'h3;
  assign cio_pwm_o = { \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_o , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o  };
  assign cio_tx_en_o = 1'h1;
  assign tl_gpio_d2h = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign { tl_gpio_h2d[108:24], tl_gpio_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , 1'h1 };
  assign tl_pwm_d2h = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign { tl_pwm_h2d[108:24], tl_pwm_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , 1'h1 };
  assign tl_rv_timer_d2h = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign { tl_rv_timer_h2d[108:24], tl_rv_timer_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , 1'h1 };
  assign tl_uart_d2h = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign { tl_uart_h2d[108:24], tl_uart_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , 1'h1 };
  assign { tl_uart_host_d2h[65:48], tl_uart_host_d2h[15:0] } = { \xbar.u_s1n_6.tl_t_p [65:48], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign tl_uart_host_h2d = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \u_gpio.cio_gpio_en_o  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.cio_gpio_i  = cio_gpio_i;
  assign \u_gpio.cio_gpio_o  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.clk_i  = clk_i;
  assign \u_gpio.data_in_d  = { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_combined  = \u_gpio.intr_hw.event_intr_i ;
  assign \u_gpio.gen_filter[0].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [0];
  assign \u_gpio.gen_filter[0].u_filter.filter_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.filter_synced  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[0].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.thresh_i  = 4'hf;
  assign \u_gpio.gen_filter[1].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [1];
  assign \u_gpio.gen_filter[1].u_filter.filter_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.filter_synced  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[1].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.thresh_i  = 4'hf;
  assign \u_gpio.gen_filter[2].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[2].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [2];
  assign \u_gpio.gen_filter[2].u_filter.filter_i  = cio_gpio_i[2];
  assign \u_gpio.gen_filter[2].u_filter.filter_synced  = \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[2];
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[2];
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[2];
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[2].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[2].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[2].u_filter.thresh_i  = 4'hf;
  assign \u_gpio.gen_filter[3].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[3].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [3];
  assign \u_gpio.gen_filter[3].u_filter.filter_i  = cio_gpio_i[3];
  assign \u_gpio.gen_filter[3].u_filter.filter_synced  = \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[3];
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[3];
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[3];
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[3].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[3].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[3].u_filter.thresh_i  = 4'hf;
  assign \u_gpio.hw2reg  = { \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d , \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de , \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o , 1'h1, \u_gpio.cio_gpio_q , \u_gpio.cio_gpio_q [1:0], 2'h0, \u_gpio.cio_gpio_q [3:2], 2'h0, \u_gpio.cio_gpio_en_q , \u_gpio.cio_gpio_en_q [1:0], 2'h0, \u_gpio.cio_gpio_en_q [3:2], 2'h0 };
  assign \u_gpio.intr_hw.clk_i  = clk_i;
  assign \u_gpio.intr_hw.hw2reg_intr_state_d_o  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  assign \u_gpio.intr_hw.hw2reg_intr_state_de_o  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \u_gpio.intr_hw.reg2hw_intr_enable_q_i  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.intr_hw.reg2hw_intr_state_q_i  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.intr_hw.reg2hw_intr_test_q_i  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.intr_hw.rst_ni  = rst_ni;
  assign \u_gpio.intr_hw.status  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.reg2hw  = { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , \u_gpio.u_reg.reg_wdata [3:0], \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.u_reg.reg_wdata [3:0], \u_gpio.u_reg.direct_out_flds_we , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.reg_wdata [3:0], \u_gpio.u_reg.direct_oe_flds_we , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  };
  assign \u_gpio.rst_ni  = rst_ni;
  assign \u_gpio.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.addr_hit [3] = \u_pwm.u_reg.addr_hit [3];
  assign \u_gpio.u_reg.clk_i  = clk_i;
  assign \u_gpio.u_reg.ctrl_en_input_filter_qs  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.ctrl_en_input_filter_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.data_in_qs  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.devmode_i  = 1'h1;
  assign \u_gpio.u_reg.direct_oe_qe  = \u_gpio.u_reg.direct_oe_flds_we ;
  assign \u_gpio.u_reg.direct_oe_qs  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.direct_oe_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.direct_oe_we  = \u_gpio.u_reg.direct_oe_flds_we ;
  assign \u_gpio.u_reg.direct_out_qe  = \u_gpio.u_reg.direct_out_flds_we ;
  assign \u_gpio.u_reg.direct_out_qs  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.direct_out_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.direct_out_we  = \u_gpio.u_reg.direct_out_flds_we ;
  assign \u_gpio.u_reg.hw2reg  = { \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d , \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de , \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o , 1'h1, \u_gpio.cio_gpio_q , \u_gpio.cio_gpio_q [1:0], 2'h0, \u_gpio.cio_gpio_q [3:2], 2'h0, \u_gpio.cio_gpio_en_q , \u_gpio.cio_gpio_en_q [1:0], 2'h0, \u_gpio.cio_gpio_en_q [3:2], 2'h0 };
  assign \u_gpio.u_reg.intr_ctrl_en_falling_qs  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_falling_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.intr_ctrl_en_rising_qs  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_rising_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.intr_enable_qs  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.intr_enable_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.intr_state_qs  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.intr_state_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.intr_state_we  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  assign \u_gpio.u_reg.intr_test_flds_we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.intr_test_qe  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.intr_test_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.intr_test_we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.masked_oe_lower_data_qs  = \u_gpio.cio_gpio_en_q [1:0];
  assign \u_gpio.u_reg.masked_oe_lower_data_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.masked_oe_lower_flds_we  = { \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.masked_oe_lower_qe  };
  assign \u_gpio.u_reg.masked_oe_lower_mask_qs  = 2'h0;
  assign \u_gpio.u_reg.masked_oe_lower_mask_wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.masked_oe_lower_we  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.masked_oe_upper_data_qs  = \u_gpio.cio_gpio_en_q [3:2];
  assign \u_gpio.u_reg.masked_oe_upper_data_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.masked_oe_upper_flds_we  = { \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.masked_oe_upper_qe  };
  assign \u_gpio.u_reg.masked_oe_upper_mask_qs  = 2'h0;
  assign \u_gpio.u_reg.masked_oe_upper_mask_wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.masked_oe_upper_we  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.masked_out_lower_data_qs  = \u_gpio.cio_gpio_q [1:0];
  assign \u_gpio.u_reg.masked_out_lower_data_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.masked_out_lower_flds_we  = { \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.masked_out_lower_qe  };
  assign \u_gpio.u_reg.masked_out_lower_mask_wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.masked_out_lower_we  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.masked_out_upper_data_qs  = \u_gpio.cio_gpio_q [3:2];
  assign \u_gpio.u_reg.masked_out_upper_data_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.masked_out_upper_flds_we  = { \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.masked_out_upper_qe  };
  assign \u_gpio.u_reg.masked_out_upper_mask_wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.masked_out_upper_we  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.reg2hw  = { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , \u_gpio.u_reg.reg_wdata [3:0], \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.u_reg.reg_wdata [3:0], \u_gpio.u_reg.direct_out_flds_we , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.reg_wdata [3:0], \u_gpio.u_reg.direct_oe_flds_we , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  };
  assign \u_gpio.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_gpio.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_gpio.u_reg.reg_busy  = 1'h0;
  assign \u_gpio.u_reg.reg_rdata  = \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \u_gpio.u_reg.reg_rdata_next  = \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \u_gpio.u_reg.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.shadow_busy  = 1'h0;
  assign \u_gpio.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_o_pre  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_reg_d2h  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.d  = 4'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.de  = 1'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.qe  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.qs  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.we  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.d  = 4'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.q  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.we  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_en  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_data_in.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_data_in.d  = { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.de  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.ds  = { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.qe  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.qs  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_data_in.wd  = 4'h0;
  assign \u_gpio.u_reg.u_data_in.we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_data  = { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.d  = { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.de  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_q  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_wd  = 4'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.q  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wd  = 4'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_data  = { \u_gpio.gen_filter[3].u_filter.filter_o , \u_gpio.gen_filter[2].u_filter.filter_o , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_en  = 1'h1;
  assign \u_gpio.u_reg.u_direct_oe.d  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_oe.ds  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_oe.q  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_direct_oe.qe  = \u_gpio.u_reg.direct_oe_flds_we ;
  assign \u_gpio.u_reg.u_direct_oe.qs  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_oe.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_direct_oe.we  = \u_gpio.u_reg.direct_oe_flds_we ;
  assign \u_gpio.u_reg.u_direct_out.d  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_out.ds  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_out.q  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_direct_out.qe  = \u_gpio.u_reg.direct_out_flds_we ;
  assign \u_gpio.u_reg.u_direct_out.qs  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_out.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_direct_out.we  = \u_gpio.u_reg.direct_out_flds_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.qe  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.qs  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.we  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qe  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.we  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qe  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.we  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.qe  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.qs  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.we  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_enable.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_enable.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_enable.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_enable.qe  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.qs  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_enable.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_enable.we  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.we  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_state.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_state.d  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  assign \u_gpio.u_reg.u_intr_state.de  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \u_gpio.u_reg.u_intr_state.qs  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.u_intr_state.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_state.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_state.we  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  assign \u_gpio.u_reg.u_intr_state.wr_en  = \u_gpio.u_reg.u_intr_state.qe ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_data  = \u_gpio.u_reg.u_intr_state.wr_data ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_en  = \u_gpio.u_reg.u_intr_state.qe ;
  assign \u_gpio.u_reg.u_intr_test.d  = 4'h0;
  assign \u_gpio.u_reg.u_intr_test.ds  = 4'h0;
  assign \u_gpio.u_reg.u_intr_test.q  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_test.qe  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.u_intr_test.qre  = 1'h0;
  assign \u_gpio.u_reg.u_intr_test.qs  = 4'h0;
  assign \u_gpio.u_reg.u_intr_test.re  = 1'h0;
  assign \u_gpio.u_reg.u_intr_test.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_intr_test.we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.u_masked_oe_lower_data.d  = \u_gpio.cio_gpio_en_q [1:0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.ds  = \u_gpio.cio_gpio_en_q [1:0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.qe  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.u_masked_oe_lower_data.qs  = \u_gpio.cio_gpio_en_q [1:0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.we  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.d  = 2'h0;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.ds  = 2'h0;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.q  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.qe  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.qs  = 2'h0;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.we  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.u_masked_oe_upper_data.d  = \u_gpio.cio_gpio_en_q [3:2];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.ds  = \u_gpio.cio_gpio_en_q [3:2];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.qe  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.u_masked_oe_upper_data.qs  = \u_gpio.cio_gpio_en_q [3:2];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.we  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.d  = 2'h0;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.ds  = 2'h0;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.q  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.qe  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.qs  = 2'h0;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.we  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.u_masked_out_lower_data.d  = \u_gpio.cio_gpio_q [1:0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.ds  = \u_gpio.cio_gpio_q [1:0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.qe  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.u_masked_out_lower_data.qs  = \u_gpio.cio_gpio_q [1:0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.we  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.d  = 2'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.ds  = 2'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.q  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_masked_out_lower_mask.qe  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.qre  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.qs  = 2'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.re  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_masked_out_lower_mask.we  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.u_masked_out_upper_data.d  = \u_gpio.cio_gpio_q [3:2];
  assign \u_gpio.u_reg.u_masked_out_upper_data.ds  = \u_gpio.cio_gpio_q [3:2];
  assign \u_gpio.u_reg.u_masked_out_upper_data.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_masked_out_upper_data.qe  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.u_masked_out_upper_data.qs  = \u_gpio.cio_gpio_q [3:2];
  assign \u_gpio.u_reg.u_masked_out_upper_data.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_masked_out_upper_data.we  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.d  = 2'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.ds  = 2'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.q  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_masked_out_upper_mask.qe  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.qre  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.qs  = 2'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.re  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_masked_out_upper_mask.we  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_gpio.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_gpio.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_reg_if.d_ack  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_gpio.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.error  = \u_gpio.u_reg.u_reg_if.error_q ;
  assign \u_gpio.u_reg.u_reg_if.error_i  = \u_gpio.u_reg.reg_error ;
  assign \u_gpio.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.rd_req  = \u_gpio.u_reg.reg_re ;
  assign \u_gpio.u_reg.u_reg_if.rdata  = \u_gpio.u_reg.u_reg_if.rdata_q ;
  assign \u_gpio.u_reg.u_reg_if.re_o  = \u_gpio.u_reg.reg_re ;
  assign \u_gpio.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_reg_if.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.tl_o_pre  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_gpio.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.wdata_o  = \u_gpio.u_reg.reg_wdata ;
  assign \u_gpio.u_reg.u_reg_if.we_o  = \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_reg_if.wr_req  = \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_rsp_intg_gen.tl_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_rsp_intg_gen.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_pwm.cio_pwm_en_o  = 2'h3;
  assign \u_pwm.cio_pwm_o  = { \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_o , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o  };
  assign \u_pwm.clk_i  = clk_i;
  assign \u_pwm.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en_en_1.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_pwm_en_en_0.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_invert_invert_1.q , \u_pwm.u_reg.u_invert0_qe.q_o , \u_pwm.u_reg.u_invert_invert_0.q , \u_pwm.u_reg.u_invert0_qe.q_o , \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q , \u_pwm.u_reg.u_pwm_param1_qe.q_o , \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q , \u_pwm.u_reg.u_pwm_param1_qe.q_o , \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q , \u_pwm.u_reg.u_pwm_param1_qe.q_o , \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_1_b_1.q , \u_pwm.u_reg.u_duty_cycle1_qe.q_o , \u_pwm.u_reg.u_duty_cycle_1_a_1.q , \u_pwm.u_reg.u_duty_cycle1_qe.q_o , \u_pwm.u_reg.u_duty_cycle_0_b_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_0_a_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_blink_param_1_y_1.q , \u_pwm.u_reg.u_blink_param1_qe.q_o , \u_pwm.u_reg.u_blink_param_1_x_1.q , \u_pwm.u_reg.u_blink_param1_qe.q_o , \u_pwm.u_reg.u_blink_param_0_y_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o , \u_pwm.u_reg.u_blink_param_0_x_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o  };
  assign \u_pwm.rst_ni  = rst_ni;
  assign \u_pwm.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_pwm_core.clk_core_i  = clk_i;
  assign \u_pwm.u_pwm_core.clk_div  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_pwm_core.clr_blink_cntr  = { \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clr_blink_cntr_i , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \u_pwm.u_pwm_core.clr_phase_cntr  = \u_pwm.u_reg.u_cfg0_qe.q_o ;
  assign \u_pwm.u_pwm_core.cntr_en  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_pwm_core.cycle_end  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \u_pwm.u_pwm_core.dc_resn  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_en_i  = \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_x_i  = \u_pwm.u_reg.u_blink_param_0_x_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_y_i  = \u_pwm.u_reg.u_blink_param_0_y_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clk_i  = clk_i;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_mask ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_resn_i  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_a_i  = \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_b_i  = \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_en_i  = \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.invert_i  = \u_pwm.u_reg.u_invert_invert_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_ctr_i  = \u_pwm.u_pwm_core.phase_ctr_q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_i  = \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_masked  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_i  = \u_pwm.u_reg.u_pwm_en_en_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.rst_ni  = rst_ni;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_en_i  = \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_param_x_i  = \u_pwm.u_reg.u_blink_param_1_x_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.blink_param_y_i  = \u_pwm.u_reg.u_blink_param_1_y_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.clk_i  = clk_i;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.cycle_end_i  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.dc_resn_i  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_a_i  = \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.duty_cycle_b_i  = \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.htbt_en_i  = \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.invert_i  = \u_pwm.u_reg.u_invert_invert_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.phase_ctr_i  = \u_pwm.u_pwm_core.phase_ctr_q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.phase_delay_i  = \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.phase_delay_masked  = \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_en_i  = \u_pwm.u_reg.u_pwm_en_en_1.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.rst_ni  = rst_ni;
  assign \u_pwm.u_pwm_core.pwm_o  = { \u_pwm.u_pwm_core.gen_chan_insts[1].u_chan.pwm_o , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o  };
  assign \u_pwm.u_pwm_core.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en_en_1.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_pwm_en_en_0.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_invert_invert_1.q , \u_pwm.u_reg.u_invert0_qe.q_o , \u_pwm.u_reg.u_invert_invert_0.q , \u_pwm.u_reg.u_invert0_qe.q_o , \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q , \u_pwm.u_reg.u_pwm_param1_qe.q_o , \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q , \u_pwm.u_reg.u_pwm_param1_qe.q_o , \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q , \u_pwm.u_reg.u_pwm_param1_qe.q_o , \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_1_b_1.q , \u_pwm.u_reg.u_duty_cycle1_qe.q_o , \u_pwm.u_reg.u_duty_cycle_1_a_1.q , \u_pwm.u_reg.u_duty_cycle1_qe.q_o , \u_pwm.u_reg.u_duty_cycle_0_b_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_0_a_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_blink_param_1_y_1.q , \u_pwm.u_reg.u_blink_param1_qe.q_o , \u_pwm.u_reg.u_blink_param_1_x_1.q , \u_pwm.u_reg.u_blink_param1_qe.q_o , \u_pwm.u_reg.u_blink_param_0_y_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o , \u_pwm.u_reg.u_blink_param_0_x_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o  };
  assign \u_pwm.u_pwm_core.rst_core_ni  = rst_ni;
  assign \u_pwm.u_reg._blink_param_0_gated_we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg._blink_param_0_qs  = { \u_pwm.u_reg.u_blink_param_0_y_0.q , \u_pwm.u_reg.u_blink_param_0_x_0.q  };
  assign \u_pwm.u_reg._blink_param_0_wdata  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q ;
  assign \u_pwm.u_reg._blink_param_0_x_0_qs_int  = \u_pwm.u_reg.u_blink_param_0_x_0.q ;
  assign \u_pwm.u_reg._blink_param_0_y_0_qs_int  = \u_pwm.u_reg.u_blink_param_0_y_0.q ;
  assign \u_pwm.u_reg._blink_param_1_gated_we  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg._blink_param_1_qs  = { \u_pwm.u_reg.u_blink_param_1_y_1.q , \u_pwm.u_reg.u_blink_param_1_x_1.q  };
  assign \u_pwm.u_reg._blink_param_1_wdata  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q ;
  assign \u_pwm.u_reg._blink_param_1_x_1_qs_int  = \u_pwm.u_reg.u_blink_param_1_x_1.q ;
  assign \u_pwm.u_reg._blink_param_1_y_1_qs_int  = \u_pwm.u_reg.u_blink_param_1_y_1.q ;
  assign \u_pwm.u_reg._cfg_clk_div_qs_int  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg._cfg_cntr_en_qs_int  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg._cfg_dc_resn_qs_int  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg._cfg_gated_we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg._cfg_qs  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg._cfg_wdata  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg._duty_cycle_0_a_0_qs_int  = \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  assign \u_pwm.u_reg._duty_cycle_0_b_0_qs_int  = \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  assign \u_pwm.u_reg._duty_cycle_0_gated_we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg._duty_cycle_0_qs  = { \u_pwm.u_reg.u_duty_cycle_0_b_0.q , \u_pwm.u_reg.u_duty_cycle_0_a_0.q  };
  assign \u_pwm.u_reg._duty_cycle_0_wdata  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q ;
  assign \u_pwm.u_reg._duty_cycle_1_a_1_qs_int  = \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  assign \u_pwm.u_reg._duty_cycle_1_b_1_qs_int  = \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  assign \u_pwm.u_reg._duty_cycle_1_gated_we  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg._duty_cycle_1_qs  = { \u_pwm.u_reg.u_duty_cycle_1_b_1.q , \u_pwm.u_reg.u_duty_cycle_1_a_1.q  };
  assign \u_pwm.u_reg._duty_cycle_1_wdata  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q ;
  assign \u_pwm.u_reg._invert_gated_we  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg._invert_invert_0_qs_int  = \u_pwm.u_reg.u_invert_invert_0.q ;
  assign \u_pwm.u_reg._invert_invert_1_qs_int  = \u_pwm.u_reg.u_invert_invert_1.q ;
  assign \u_pwm.u_reg._invert_qs  = { \u_pwm.u_reg.u_invert_invert_1.q , \u_pwm.u_reg.u_invert_invert_0.q  };
  assign \u_pwm.u_reg._invert_wdata  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg._pwm_en_en_0_qs_int  = \u_pwm.u_reg.u_pwm_en_en_0.q ;
  assign \u_pwm.u_reg._pwm_en_en_1_qs_int  = \u_pwm.u_reg.u_pwm_en_en_1.q ;
  assign \u_pwm.u_reg._pwm_en_gated_we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg._pwm_en_qs  = { \u_pwm.u_reg.u_pwm_en_en_1.q , \u_pwm.u_reg.u_pwm_en_en_0.q  };
  assign \u_pwm.u_reg._pwm_en_wdata  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg._pwm_param_0_blink_en_0_qs_int  = \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q ;
  assign \u_pwm.u_reg._pwm_param_0_gated_we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg._pwm_param_0_htbt_en_0_qs_int  = \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q ;
  assign \u_pwm.u_reg._pwm_param_0_phase_delay_0_qs_int  = \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q ;
  assign \u_pwm.u_reg._pwm_param_0_qs  = { \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q  };
  assign \u_pwm.u_reg._pwm_param_0_wdata  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q ;
  assign \u_pwm.u_reg._pwm_param_1_blink_en_1_qs_int  = \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q ;
  assign \u_pwm.u_reg._pwm_param_1_gated_we  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg._pwm_param_1_htbt_en_1_qs_int  = \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q ;
  assign \u_pwm.u_reg._pwm_param_1_phase_delay_1_qs_int  = \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q ;
  assign \u_pwm.u_reg._pwm_param_1_qs  = { \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q , \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q  };
  assign \u_pwm.u_reg._pwm_param_1_wdata  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q ;
  assign { \u_pwm.u_reg.addr_hit [9:4], \u_pwm.u_reg.addr_hit [2:0] } = { \u_gpio.u_reg.addr_hit [9:4], \u_gpio.u_reg.addr_hit [2:0] };
  assign \u_pwm.u_reg.blink_param_0_busy  = \u_pwm.u_reg.u_blink_param_0_cdc.src_busy_q ;
  assign \u_pwm.u_reg.blink_param_0_flds_we  = { \u_pwm.u_reg.u_blink_param0_qe.d_i , \u_pwm.u_reg.u_blink_param0_qe.d_i  };
  assign \u_pwm.u_reg.blink_param_0_qe  = \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  assign \u_pwm.u_reg.blink_param_0_qs  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q ;
  assign \u_pwm.u_reg.blink_param_0_we  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.blink_param_1_busy  = \u_pwm.u_reg.u_blink_param_1_cdc.src_busy_q ;
  assign \u_pwm.u_reg.blink_param_1_flds_we  = { \u_pwm.u_reg.u_blink_param1_qe.d_i , \u_pwm.u_reg.u_blink_param1_qe.d_i  };
  assign \u_pwm.u_reg.blink_param_1_qe  = \u_pwm.u_reg.u_blink_param1_qe.q_o ;
  assign \u_pwm.u_reg.blink_param_1_qs  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q ;
  assign \u_pwm.u_reg.blink_param_1_we  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.cfg_busy  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  assign \u_pwm.u_reg.cfg_flds_we  = { \u_pwm.u_reg.u_cfg0_qe.d_i , \u_pwm.u_reg.u_cfg0_qe.d_i , \u_pwm.u_reg.u_cfg0_qe.d_i  };
  assign \u_pwm.u_reg.cfg_qe  = \u_pwm.u_reg.u_cfg0_qe.q_o ;
  assign \u_pwm.u_reg.cfg_qs  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.cfg_we  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.clk_i  = clk_i;
  assign \u_pwm.u_reg.devmode_i  = 1'h1;
  assign \u_pwm.u_reg.duty_cycle_0_busy  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_busy_q ;
  assign \u_pwm.u_reg.duty_cycle_0_flds_we  = { \u_pwm.u_reg.u_duty_cycle0_qe.d_i , \u_pwm.u_reg.u_duty_cycle0_qe.d_i  };
  assign \u_pwm.u_reg.duty_cycle_0_qe  = \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  assign \u_pwm.u_reg.duty_cycle_0_qs  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q ;
  assign \u_pwm.u_reg.duty_cycle_0_we  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.duty_cycle_1_busy  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_busy_q ;
  assign \u_pwm.u_reg.duty_cycle_1_flds_we  = { \u_pwm.u_reg.u_duty_cycle1_qe.d_i , \u_pwm.u_reg.u_duty_cycle1_qe.d_i  };
  assign \u_pwm.u_reg.duty_cycle_1_qe  = \u_pwm.u_reg.u_duty_cycle1_qe.q_o ;
  assign \u_pwm.u_reg.duty_cycle_1_qs  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q ;
  assign \u_pwm.u_reg.duty_cycle_1_we  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.invert_busy  = \u_pwm.u_reg.u_invert_cdc.src_busy_q ;
  assign \u_pwm.u_reg.invert_flds_we  = { \u_pwm.u_reg.u_invert0_qe.d_i , \u_pwm.u_reg.u_invert0_qe.d_i  };
  assign \u_pwm.u_reg.invert_qe  = \u_pwm.u_reg.u_invert0_qe.q_o ;
  assign \u_pwm.u_reg.invert_qs  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.invert_we  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.pwm_en_busy  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  assign \u_pwm.u_reg.pwm_en_flds_we  = { \u_pwm.u_reg.u_pwm_en0_qe.d_i , \u_pwm.u_reg.u_pwm_en0_qe.d_i  };
  assign \u_pwm.u_reg.pwm_en_qe  = \u_pwm.u_reg.u_pwm_en0_qe.q_o ;
  assign \u_pwm.u_reg.pwm_en_qs  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.pwm_en_we  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.pwm_param_0_busy  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_busy_q ;
  assign \u_pwm.u_reg.pwm_param_0_flds_we  = { \u_pwm.u_reg.u_pwm_param0_qe.d_i , \u_pwm.u_reg.u_pwm_param0_qe.d_i , \u_pwm.u_reg.u_pwm_param0_qe.d_i  };
  assign \u_pwm.u_reg.pwm_param_0_qe  = \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \u_pwm.u_reg.pwm_param_0_qs  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q ;
  assign \u_pwm.u_reg.pwm_param_0_we  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.pwm_param_1_busy  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_busy_q ;
  assign \u_pwm.u_reg.pwm_param_1_flds_we  = { \u_pwm.u_reg.u_pwm_param1_qe.d_i , \u_pwm.u_reg.u_pwm_param1_qe.d_i , \u_pwm.u_reg.u_pwm_param1_qe.d_i  };
  assign \u_pwm.u_reg.pwm_param_1_qe  = \u_pwm.u_reg.u_pwm_param1_qe.q_o ;
  assign \u_pwm.u_reg.pwm_param_1_qs  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q ;
  assign \u_pwm.u_reg.pwm_param_1_we  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en_en_1.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_pwm_en_en_0.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_invert_invert_1.q , \u_pwm.u_reg.u_invert0_qe.q_o , \u_pwm.u_reg.u_invert_invert_0.q , \u_pwm.u_reg.u_invert0_qe.q_o , \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q , \u_pwm.u_reg.u_pwm_param1_qe.q_o , \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q , \u_pwm.u_reg.u_pwm_param1_qe.q_o , \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q , \u_pwm.u_reg.u_pwm_param1_qe.q_o , \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_1_b_1.q , \u_pwm.u_reg.u_duty_cycle1_qe.q_o , \u_pwm.u_reg.u_duty_cycle_1_a_1.q , \u_pwm.u_reg.u_duty_cycle1_qe.q_o , \u_pwm.u_reg.u_duty_cycle_0_b_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_0_a_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_blink_param_1_y_1.q , \u_pwm.u_reg.u_blink_param1_qe.q_o , \u_pwm.u_reg.u_blink_param_1_x_1.q , \u_pwm.u_reg.u_blink_param1_qe.q_o , \u_pwm.u_reg.u_blink_param_0_y_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o , \u_pwm.u_reg.u_blink_param_0_x_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o  };
  assign \u_pwm.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_pwm.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_pwm.u_reg.reg_busy  = \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \u_pwm.u_reg.reg_busy_sel  = \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \u_pwm.u_reg.reg_rdata  = \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \u_pwm.u_reg.reg_rdata_next  = \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \u_pwm.u_reg.regwen_qs  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.regwen_wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.regwen_we  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.shadow_busy  = 1'h0;
  assign \u_pwm.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_o_pre  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_reg_d2h  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_blink_param0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param1_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param1_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_qs  = { \u_pwm.u_reg.u_blink_param_0_y_0.q , \u_pwm.u_reg.u_blink_param_0_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_qs_i  = { \u_pwm.u_reg.u_blink_param_0_y_0.q , \u_pwm.u_reg.u_blink_param_0_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_regwen_o  = \u_pwm.u_reg._blink_param_0_regwen ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_req_from_src  = \u_pwm.u_reg.u_blink_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_wd_o  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.dst_we_o  = \u_pwm.u_reg._blink_param_0_we ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.src_busy_o  = \u_pwm.u_reg.u_blink_param_0_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.src_qs_o  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.src_req  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.src_we_i  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_blink_param_0_y_0.q , \u_pwm.u_reg.u_blink_param_0_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_blink_param_0_y_0.q , \u_pwm.u_reg.u_blink_param_0_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_blink_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_blink_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_blink_param_0_cdc.src_ack ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_blink_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_blink_param_0_cdc.src_ack ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_blink_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.qe  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.qs  = \u_pwm.u_reg.u_blink_param_0_x_0.q ;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wd  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_0_x_0.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_data  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_blink_param_0_x_0.q ;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_blink_param_0_x_0.q ;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_0_x_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.qe  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.qs  = \u_pwm.u_reg.u_blink_param_0_y_0.q ;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wd  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_0_y_0.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_data  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_blink_param_0_y_0.q ;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_blink_param_0_y_0.q ;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_blink_param_0_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_0_y_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_qs  = { \u_pwm.u_reg.u_blink_param_1_y_1.q , \u_pwm.u_reg.u_blink_param_1_x_1.q  };
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_qs_i  = { \u_pwm.u_reg.u_blink_param_1_y_1.q , \u_pwm.u_reg.u_blink_param_1_x_1.q  };
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_regwen_o  = \u_pwm.u_reg._blink_param_1_regwen ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_req_from_src  = \u_pwm.u_reg.u_blink_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_wd_o  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.dst_we_o  = \u_pwm.u_reg._blink_param_1_we ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.src_busy_o  = \u_pwm.u_reg.u_blink_param_1_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.src_qs_o  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.src_req  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.src_we_i  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_blink_param_1_y_1.q , \u_pwm.u_reg.u_blink_param_1_x_1.q  };
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_blink_param_1_y_1.q , \u_pwm.u_reg.u_blink_param_1_x_1.q  };
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_blink_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_blink_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_blink_param_1_cdc.src_ack ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_blink_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_blink_param_1_cdc.src_ack ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_blink_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.qe  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.qs  = \u_pwm.u_reg.u_blink_param_1_x_1.q ;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wd  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_1_x_1.we  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_data  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_en  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_blink_param_1_x_1.q ;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.q  = \u_pwm.u_reg.u_blink_param_1_x_1.q ;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.wd  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.we  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_1_x_1.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.qe  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.qs  = \u_pwm.u_reg.u_blink_param_1_y_1.q ;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wd  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_1_y_1.we  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_data  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_en  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_blink_param_1_y_1.q ;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.q  = \u_pwm.u_reg.u_blink_param_1_y_1.q ;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.wd  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.we  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_blink_param_1_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_1_y_1.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_blink_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_qs  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.dst_qs_i  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.dst_regwen_o  = \u_pwm.u_reg._cfg_regwen ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_req_from_src  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_wd_o  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_we_o  = \u_pwm.u_reg._cfg_we ;
  assign \u_pwm.u_reg.u_cfg_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.src_busy_o  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_qs_o  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_req  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_we_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_clk_div.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_clk_div.d  = 27'h0000000;
  assign \u_pwm.u_reg.u_cfg_clk_div.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_clk_div.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.qs  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_clk_div.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.d  = 27'h0000000;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cntr_en.d  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.qs  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_dc_resn.d  = 4'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.qs  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.d  = 4'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle1_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle1_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.qe  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.qs  = \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wd  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_data  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_duty_cycle_0_a_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_0_a_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.qe  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.qs  = \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wd  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_data  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_duty_cycle_0_b_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_0_b_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_qs  = { \u_pwm.u_reg.u_duty_cycle_0_b_0.q , \u_pwm.u_reg.u_duty_cycle_0_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_qs_i  = { \u_pwm.u_reg.u_duty_cycle_0_b_0.q , \u_pwm.u_reg.u_duty_cycle_0_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_regwen_o  = \u_pwm.u_reg._duty_cycle_0_regwen ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req_from_src  = \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_wd_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_we_o  = \u_pwm.u_reg._duty_cycle_0_we ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.src_busy_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.src_qs_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.src_req  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.src_we_i  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_duty_cycle_0_b_0.q , \u_pwm.u_reg.u_duty_cycle_0_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_duty_cycle_0_b_0.q , \u_pwm.u_reg.u_duty_cycle_0_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_ack ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.src_ack ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_0_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.qe  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.qs  = \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wd  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.we  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_data  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.q  = \u_pwm.u_reg.u_duty_cycle_1_a_1.q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.wd  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.we  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_1_a_1.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.qe  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.qs  = \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wd  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.we  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_data  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.q  = \u_pwm.u_reg.u_duty_cycle_1_b_1.q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.wd  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.we  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_1_b_1.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_duty_cycle1_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_qs  = { \u_pwm.u_reg.u_duty_cycle_1_b_1.q , \u_pwm.u_reg.u_duty_cycle_1_a_1.q  };
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_qs_i  = { \u_pwm.u_reg.u_duty_cycle_1_b_1.q , \u_pwm.u_reg.u_duty_cycle_1_a_1.q  };
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_regwen_o  = \u_pwm.u_reg._duty_cycle_1_regwen ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req_from_src  = \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_wd_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_we_o  = \u_pwm.u_reg._duty_cycle_1_we ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.src_busy_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.src_qs_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.src_req  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.src_we_i  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_duty_cycle_1_b_1.q , \u_pwm.u_reg.u_duty_cycle_1_a_1.q  };
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_duty_cycle_1_b_1.q , \u_pwm.u_reg.u_duty_cycle_1_a_1.q  };
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_ack ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.src_ack ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_1_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.dst_ds_i  = 2'h0;
  assign \u_pwm.u_reg.u_invert_cdc.dst_qs  = { \u_pwm.u_reg.u_invert_invert_1.q , \u_pwm.u_reg.u_invert_invert_0.q  };
  assign \u_pwm.u_reg.u_invert_cdc.dst_qs_i  = { \u_pwm.u_reg.u_invert_invert_1.q , \u_pwm.u_reg.u_invert_invert_0.q  };
  assign \u_pwm.u_reg.u_invert_cdc.dst_regwen_o  = \u_pwm.u_reg._invert_regwen ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_req_from_src  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.dst_wd_o  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_we_o  = \u_pwm.u_reg._invert_we ;
  assign \u_pwm.u_reg.u_invert_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.src_busy_o  = \u_pwm.u_reg.u_invert_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_invert_cdc.src_qs_o  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.u_invert_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_invert_cdc.src_req  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_invert_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata [1:0];
  assign \u_pwm.u_reg.u_invert_cdc.src_we_i  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_ds_i  = 2'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_invert_invert_1.q , \u_pwm.u_reg.u_invert_invert_0.q  };
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_invert_invert_1.q , \u_pwm.u_reg.u_invert_invert_0.q  };
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_invert_cdc.src_ack ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_invert_cdc.src_ack ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_invert_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_invert_0.d  = 1'h0;
  assign \u_pwm.u_reg.u_invert_invert_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_invert_invert_0.qe  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert_invert_0.qs  = \u_pwm.u_reg.u_invert_invert_0.q ;
  assign \u_pwm.u_reg.u_invert_invert_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_invert_0.wd  = \u_pwm.u_reg.u_invert_cdc.src_q [0];
  assign \u_pwm.u_reg.u_invert_invert_0.we  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert_invert_0.wr_data  = \u_pwm.u_reg.u_invert_cdc.src_q [0];
  assign \u_pwm.u_reg.u_invert_invert_0.wr_en  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_invert_invert_0.q ;
  assign \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_invert_invert_0.q ;
  assign \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_invert_cdc.src_q [0];
  assign \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_invert_cdc.src_q [0];
  assign \u_pwm.u_reg.u_invert_invert_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert_invert_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_invert_1.d  = 1'h0;
  assign \u_pwm.u_reg.u_invert_invert_1.de  = 1'h0;
  assign \u_pwm.u_reg.u_invert_invert_1.qe  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert_invert_1.qs  = \u_pwm.u_reg.u_invert_invert_1.q ;
  assign \u_pwm.u_reg.u_invert_invert_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_invert_1.wd  = \u_pwm.u_reg.u_invert_cdc.src_q [1];
  assign \u_pwm.u_reg.u_invert_invert_1.we  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert_invert_1.wr_data  = \u_pwm.u_reg.u_invert_cdc.src_q [1];
  assign \u_pwm.u_reg.u_invert_invert_1.wr_en  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_invert_invert_1.q ;
  assign \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.q  = \u_pwm.u_reg.u_invert_invert_1.q ;
  assign \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.wd  = \u_pwm.u_reg.u_invert_cdc.src_q [1];
  assign \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.we  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_invert_cdc.src_q [1];
  assign \u_pwm.u_reg.u_invert_invert_1.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_ds_i  = 2'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_qs  = { \u_pwm.u_reg.u_pwm_en_en_1.q , \u_pwm.u_reg.u_pwm_en_en_0.q  };
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_qs_i  = { \u_pwm.u_reg.u_pwm_en_en_1.q , \u_pwm.u_reg.u_pwm_en_en_0.q  };
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_regwen_o  = \u_pwm.u_reg._pwm_en_regwen ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_req_from_src  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_wd_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_we_o  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_busy_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_qs_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_req  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata [1:0];
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_we_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_ds_i  = 2'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_pwm_en_en_1.q , \u_pwm.u_reg.u_pwm_en_en_0.q  };
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_pwm_en_en_1.q , \u_pwm.u_reg.u_pwm_en_en_0.q  };
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_en_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_en_0.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_en_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_en_0.qe  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en_en_0.qs  = \u_pwm.u_reg.u_pwm_en_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_en_en_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_en_0.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q [0];
  assign \u_pwm.u_reg.u_pwm_en_en_0.we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q [0];
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_en  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_en_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_en_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q [0];
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q [0];
  assign \u_pwm.u_reg.u_pwm_en_en_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en_en_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_en_1.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_en_1.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_en_1.qe  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en_en_1.qs  = \u_pwm.u_reg.u_pwm_en_en_1.q ;
  assign \u_pwm.u_reg.u_pwm_en_en_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_en_1.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q [1];
  assign \u_pwm.u_reg.u_pwm_en_en_1.we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q [1];
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_en  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_en_en_1.q ;
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_en_en_1.q ;
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q [1];
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q [1];
  assign \u_pwm.u_reg.u_pwm_en_en_1.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param1_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param1_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.qe  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.qs  = \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wd  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_data  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_0_blink_en_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_qs  = { \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_regwen_o  = \u_pwm.u_reg._pwm_param_0_regwen ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req_from_src  = \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_wd_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.dst_we_o  = \u_pwm.u_reg._pwm_param_0_we ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.src_busy_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.src_qs_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.src_req  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.src_we_i  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_pwm_param_0_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.qe  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.qs  = \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wd  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_data  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_0_htbt_en_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.qe  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.qs  = \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wd  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_data  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_0_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_0_phase_delay_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.qe  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.qs  = \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wd  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.we  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_data  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_1_blink_en_1.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_qs  = { \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q , \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q  };
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q , \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q  };
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_regwen_o  = \u_pwm.u_reg._pwm_param_1_regwen ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req_from_src  = \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_wd_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.dst_we_o  = \u_pwm.u_reg._pwm_param_1_we ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.src_busy_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.src_qs_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.src_req  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.src_we_i  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q , \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q  };
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_pwm_param_1_blink_en_1.q , \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q  };
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.qe  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.qs  = \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wd  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.we  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_data  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_1_htbt_en_1.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.qe  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.qs  = \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wd  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.we  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_data  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.q ;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_1_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_1_phase_delay_1.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param1_qe.d_i ;
  assign \u_pwm.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_pwm.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_pwm.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_reg_if.d_ack  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \u_pwm.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_pwm.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.error  = \u_pwm.u_reg.u_reg_if.error_q ;
  assign \u_pwm.u_reg.u_reg_if.error_i  = \u_pwm.u_reg.reg_error ;
  assign \u_pwm.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.rd_req  = \u_pwm.u_reg.reg_re ;
  assign \u_pwm.u_reg.u_reg_if.rdata  = \u_pwm.u_reg.u_reg_if.rdata_q ;
  assign \u_pwm.u_reg.u_reg_if.re_o  = \u_pwm.u_reg.reg_re ;
  assign \u_pwm.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_reg_if.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.tl_o_pre  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_pwm.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.wdata_o  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_reg_if.we_o  = \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_reg_if.wr_req  = \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_regwen.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_regwen.d  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.de  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.qe  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_regwen.qs  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_regwen.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_regwen.wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_regwen.we  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_regwen.wr_en  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.q  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_regwen.wr_data ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_rsp_intg_gen.tl_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_rsp_intg_gen.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.active  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_core.active  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.gen_harts[0].u_core.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_core.intr  = \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.gen_harts[0].u_core.mtime  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  };
  assign \u_rv_timer.gen_harts[0].u_core.mtimecmp  = { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.gen_harts[0].u_core.prescaler  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.gen_harts[0].u_core.rst_ni  = rst_ni;
  assign \u_rv_timer.gen_harts[0].u_core.step  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.gen_harts[0].u_core.tick  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_d_o  = \u_rv_timer.intr_timer_state_d ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_de_o  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_enable_q_i  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_state_q_i  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_q_i  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.gen_harts[0].u_intr_hw.rst_ni  = rst_ni;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.status  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.hw2reg  = { \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d , \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  };
  assign \u_rv_timer.intr_timer_en  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.intr_timer_set  = \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.intr_timer_state_de  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  assign \u_rv_timer.intr_timer_state_q  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.intr_timer_test_q  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.intr_timer_test_qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.mtime  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  };
  assign \u_rv_timer.mtime_d  = \u_rv_timer.gen_harts[0].u_core.mtime_d ;
  assign \u_rv_timer.mtimecmp  = { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.prescaler  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.reg2hw  = { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0], \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i , \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_cfg0_prescale.q , \u_rv_timer.u_reg.u_timer_v_lower0.q , \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q , \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o , \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  };
  assign \u_rv_timer.rst_ni  = rst_ni;
  assign \u_rv_timer.step  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.tick  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.cfg0_prescale_qs  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.cfg0_prescale_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.cfg0_step_qs  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.cfg0_step_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.compare_lower0_0_flds_we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_lower0_0_qe  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.compare_lower0_0_qs  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.compare_lower0_0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.compare_lower0_0_we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_upper0_0_flds_we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_upper0_0_qe  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.compare_upper0_0_qs  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.compare_upper0_0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.compare_upper0_0_we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.ctrl_qs  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.ctrl_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.devmode_i  = 1'h1;
  assign \u_rv_timer.u_reg.hw2reg  = { \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d , \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  };
  assign \u_rv_timer.u_reg.intr_enable0_qs  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.intr_enable0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_state0_qs  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.intr_state0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_state0_we  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.intr_test0_flds_we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.intr_test0_qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.intr_test0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_test0_we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.reg2hw  = { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0], \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i , \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_cfg0_prescale.q , \u_rv_timer.u_reg.u_timer_v_lower0.q , \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q , \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o , \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  };
  assign \u_rv_timer.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.reg_busy  = 1'h0;
  assign \u_rv_timer.u_reg.reg_rdata  = \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \u_rv_timer.u_reg.reg_rdata_next  = \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \u_rv_timer.u_reg.reg_wdata  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.shadow_busy  = 1'h0;
  assign \u_rv_timer.u_reg.timer_v_lower0_qs  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.timer_v_lower0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.timer_v_lower0_we  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.timer_v_upper0_qs  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.timer_v_upper0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.timer_v_upper0_we  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_o_pre  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_reg_d2h  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_cfg0_prescale.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.d  = 12'h000;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.qe  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.qs  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.d  = 12'h000;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_cfg0_step.d  = 8'h00;
  assign \u_rv_timer.u_reg.u_cfg0_step.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_step.qe  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.qs  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_cfg0_step.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.d  = 8'h00;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.qe  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.qs  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.qe  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.qs  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_ctrl.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_ctrl.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.qe  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.qs  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_ctrl.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.we  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.we  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_intr_enable0.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.qe  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.qs  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_intr_enable0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.we  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.we  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_state0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_intr_state0.d  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d ;
  assign \u_rv_timer.u_reg.u_intr_state0.de  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_intr_state0.qs  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.u_intr_state0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_intr_state0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_state0.we  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en  = \u_rv_timer.u_reg.u_intr_state0.qe ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_intr_state0.qe ;
  assign \u_rv_timer.u_reg.u_intr_test0.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.ds  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.q  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_test0.qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.u_intr_test0.qre  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.qs  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.re  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_test0.we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_rv_timer.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_reg_if.d_ack  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \u_rv_timer.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_rv_timer.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.error  = \u_rv_timer.u_reg.u_reg_if.error_q ;
  assign \u_rv_timer.u_reg.u_reg_if.error_i  = \u_rv_timer.u_reg.reg_error ;
  assign \u_rv_timer.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.rd_req  = \u_rv_timer.u_reg.reg_re ;
  assign \u_rv_timer.u_reg.u_reg_if.rdata  = \u_rv_timer.u_reg.u_reg_if.rdata_q ;
  assign \u_rv_timer.u_reg.u_reg_if.re_o  = \u_rv_timer.u_reg.reg_re ;
  assign \u_rv_timer.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_reg_if.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.tl_o_pre  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [108], \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [104:0] } = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.wdata_o  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_reg_if.we_o  = \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_reg_if.wr_req  = \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_rsp_intg_gen.tl_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_rsp_intg_gen.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_timer_v_lower0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_lower0.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.qs  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.we  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en  = \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.qs  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.we  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en  = \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  assign \u_uart.addr_o  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \u_uart.be_o  = \u_uart.u_bridge.be_q ;
  assign \u_uart.cio_rx_i  = cio_rx_i;
  assign \u_uart.cio_tx_en_o  = 1'h1;
  assign \u_uart.cio_tx_o  = cio_tx_o;
  assign \u_uart.clk_i  = clk_i;
  assign \u_uart.core_tx  = cio_tx_o;
  assign \u_uart.err_i  = \xbar.u_s1n_6.tl_t_p [1];
  assign \u_uart.gnt_i  = \uart_host_adapter.gnt_o ;
  assign \u_uart.hw2reg  = { \u_uart.u_reg.u_intr_state_tx_watermark.d , 1'h1, \u_uart.u_reg.u_intr_state_rx_watermark.d , 1'h1, \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_tx_empty.d , 1'h1, \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 10'h000, \u_uart.u_uart_core.tx_fifo_depth , 1'h0, \u_uart.u_uart_core.rx_fifo_depth , \u_uart.u_uart_core.rx_val_q  };
  assign \u_uart.rdata_i  = tl_uart_host_d2h[47:16];
  assign { \u_uart.reg2hw [131:95], \u_uart.reg2hw [93:68], \u_uart.reg2hw [66:0] } = { \u_uart.u_reg.u_intr_state_tx_empty.q , \u_uart.u_reg.u_intr_state_rx_parity_err.q , \u_uart.u_reg.u_intr_state_rx_timeout.q , \u_uart.u_reg.u_intr_state_rx_break_err.q , \u_uart.u_reg.u_intr_state_rx_frame_err.q , \u_uart.u_reg.u_intr_state_rx_overflow.q , \u_uart.u_reg.u_intr_state_tx_done.q , \u_uart.u_reg.u_intr_state_rx_watermark.q , \u_uart.u_reg.u_intr_state_tx_watermark.q , \u_uart.u_reg.u_intr_enable_tx_empty.q , \u_uart.u_reg.u_intr_enable_rx_parity_err.q , \u_uart.u_reg.u_intr_enable_rx_timeout.q , \u_uart.u_reg.u_intr_enable_rx_break_err.q , \u_uart.u_reg.u_intr_enable_rx_frame_err.q , \u_uart.u_reg.u_intr_enable_rx_overflow.q , \u_uart.u_reg.u_intr_enable_tx_done.q , \u_uart.u_reg.u_intr_enable_rx_watermark.q , \u_uart.u_reg.u_intr_enable_tx_watermark.q , \u_uart.u_reg.reg_wdata [8], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [7], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [6], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [5], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [4], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [3], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [2], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [1], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [0], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [0], \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_rxblvl.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 2'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txilvl.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxilvl.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_ovrd_txval.q , \u_uart.u_reg.u_ovrd_txen.q , \u_uart.u_reg.u_timeout_ctrl_en.q , \u_uart.u_reg.u_timeout_ctrl_val.q  };
  assign \u_uart.req_o  = \u_uart.u_bridge.req_q ;
  assign \u_uart.rst_ni  = rst_ni;
  assign \u_uart.rx_data_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.rx_pop_i  = \u_uart.u_uart_core.rx_pop_i ;
  assign \u_uart.rx_valid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_bridge.addr_o  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \u_uart.u_bridge.be_o  = \u_uart.u_bridge.be_q ;
  assign \u_uart.u_bridge.clk_i  = clk_i;
  assign \u_uart.u_bridge.err_i  = \xbar.u_s1n_6.tl_t_p [1];
  assign \u_uart.u_bridge.gnt_i  = \uart_host_adapter.gnt_o ;
  assign \u_uart.u_bridge.rdata_i  = tl_uart_host_d2h[47:16];
  assign \u_uart.u_bridge.req_o  = \u_uart.u_bridge.req_q ;
  assign \u_uart.u_bridge.rst_ni  = rst_ni;
  assign \u_uart.u_bridge.rx_pop_o  = \u_uart.u_uart_core.rx_pop_i ;
  assign \u_uart.u_bridge.valid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \u_uart.u_bridge.wdata_o  = \u_uart.u_bridge.wdata_q ;
  assign \u_uart.u_bridge.we_o  = \u_uart.u_bridge.we_q ;
  assign \u_uart.u_reg.addr_hit  = { \u_gpio.u_reg.addr_hit [12:4], \u_pwm.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [2:0] };
  assign \u_uart.u_reg.alert_test_flds_we  = \u_uart.reg2hw [94];
  assign \u_uart.u_reg.alert_test_qe  = \u_uart.reg2hw [94];
  assign \u_uart.u_reg.alert_test_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.alert_test_we  = \u_uart.reg2hw [94];
  assign \u_uart.u_reg.clk_i  = clk_i;
  assign \u_uart.u_reg.ctrl_llpbk_qs  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.ctrl_llpbk_wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.ctrl_nco_qs  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.ctrl_nco_wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.ctrl_nf_qs  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.ctrl_nf_wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.ctrl_parity_en_qs  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.ctrl_parity_en_wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.ctrl_parity_odd_qs  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.ctrl_parity_odd_wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.ctrl_rx_qs  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.ctrl_rx_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.ctrl_rxblvl_qs  = \u_uart.u_reg.u_ctrl_rxblvl.q ;
  assign \u_uart.u_reg.ctrl_rxblvl_wd  = \u_uart.u_reg.reg_wdata [9:8];
  assign \u_uart.u_reg.ctrl_slpbk_qs  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.ctrl_slpbk_wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.ctrl_tx_qs  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.ctrl_tx_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.devmode_i  = 1'h1;
  assign \u_uart.u_reg.fifo_ctrl_flds_we  = { \u_uart.u_reg.u_fifo_ctrl0_qe.d_i , \u_uart.u_reg.u_fifo_ctrl0_qe.d_i , \u_uart.u_reg.u_fifo_ctrl0_qe.d_i , \u_uart.u_reg.u_fifo_ctrl0_qe.d_i  };
  assign \u_uart.u_reg.fifo_ctrl_qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_reg.fifo_ctrl_rxilvl_qs  = \u_uart.u_reg.u_fifo_ctrl_rxilvl.q ;
  assign \u_uart.u_reg.fifo_ctrl_rxilvl_wd  = \u_uart.u_reg.reg_wdata [4:2];
  assign \u_uart.u_reg.fifo_ctrl_rxrst_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.fifo_ctrl_txilvl_qs  = \u_uart.u_reg.u_fifo_ctrl_txilvl.q ;
  assign \u_uart.u_reg.fifo_ctrl_txilvl_wd  = \u_uart.u_reg.reg_wdata [7:5];
  assign \u_uart.u_reg.fifo_ctrl_txrst_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.fifo_ctrl_we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.fifo_status_rxlvl_qs  = { 1'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.fifo_status_txlvl_qs  = { 2'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.hw2reg  = { \u_uart.u_reg.u_intr_state_tx_watermark.d , 1'h1, \u_uart.u_reg.u_intr_state_rx_watermark.d , 1'h1, \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_tx_empty.d , 1'h1, \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 10'h000, \u_uart.u_uart_core.tx_fifo_depth , 1'h0, \u_uart.u_uart_core.rx_fifo_depth , \u_uart.u_uart_core.rx_val_q  };
  assign \u_uart.u_reg.intr_enable_rx_break_err_qs  = \u_uart.u_reg.u_intr_enable_rx_break_err.q ;
  assign \u_uart.u_reg.intr_enable_rx_break_err_wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.intr_enable_rx_frame_err_qs  = \u_uart.u_reg.u_intr_enable_rx_frame_err.q ;
  assign \u_uart.u_reg.intr_enable_rx_frame_err_wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.intr_enable_rx_overflow_qs  = \u_uart.u_reg.u_intr_enable_rx_overflow.q ;
  assign \u_uart.u_reg.intr_enable_rx_overflow_wd  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.intr_enable_rx_parity_err_qs  = \u_uart.u_reg.u_intr_enable_rx_parity_err.q ;
  assign \u_uart.u_reg.intr_enable_rx_parity_err_wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.intr_enable_rx_timeout_qs  = \u_uart.u_reg.u_intr_enable_rx_timeout.q ;
  assign \u_uart.u_reg.intr_enable_rx_timeout_wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.intr_enable_rx_watermark_qs  = \u_uart.u_reg.u_intr_enable_rx_watermark.q ;
  assign \u_uart.u_reg.intr_enable_rx_watermark_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.intr_enable_tx_done_qs  = \u_uart.u_reg.u_intr_enable_tx_done.q ;
  assign \u_uart.u_reg.intr_enable_tx_done_wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.intr_enable_tx_empty_qs  = \u_uart.u_reg.u_intr_enable_tx_empty.q ;
  assign \u_uart.u_reg.intr_enable_tx_empty_wd  = \u_uart.u_reg.reg_wdata [8];
  assign \u_uart.u_reg.intr_enable_tx_watermark_qs  = \u_uart.u_reg.u_intr_enable_tx_watermark.q ;
  assign \u_uart.u_reg.intr_enable_tx_watermark_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.intr_state_rx_break_err_qs  = \u_uart.u_reg.u_intr_state_rx_break_err.q ;
  assign \u_uart.u_reg.intr_state_rx_break_err_wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.intr_state_rx_frame_err_qs  = \u_uart.u_reg.u_intr_state_rx_frame_err.q ;
  assign \u_uart.u_reg.intr_state_rx_frame_err_wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.intr_state_rx_overflow_qs  = \u_uart.u_reg.u_intr_state_rx_overflow.q ;
  assign \u_uart.u_reg.intr_state_rx_overflow_wd  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.intr_state_rx_parity_err_qs  = \u_uart.u_reg.u_intr_state_rx_parity_err.q ;
  assign \u_uart.u_reg.intr_state_rx_parity_err_wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.intr_state_rx_timeout_qs  = \u_uart.u_reg.u_intr_state_rx_timeout.q ;
  assign \u_uart.u_reg.intr_state_rx_timeout_wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.intr_state_rx_watermark_qs  = \u_uart.u_reg.u_intr_state_rx_watermark.q ;
  assign \u_uart.u_reg.intr_state_tx_done_qs  = \u_uart.u_reg.u_intr_state_tx_done.q ;
  assign \u_uart.u_reg.intr_state_tx_done_wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.intr_state_tx_empty_qs  = \u_uart.u_reg.u_intr_state_tx_empty.q ;
  assign \u_uart.u_reg.intr_state_tx_watermark_qs  = \u_uart.u_reg.u_intr_state_tx_watermark.q ;
  assign \u_uart.u_reg.intr_state_we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.intr_test_flds_we  = { \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i  };
  assign \u_uart.u_reg.intr_test_qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.intr_test_rx_break_err_wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.intr_test_rx_frame_err_wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.intr_test_rx_overflow_wd  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.intr_test_rx_parity_err_wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.intr_test_rx_timeout_wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.intr_test_rx_watermark_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.intr_test_tx_done_wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.intr_test_tx_empty_wd  = \u_uart.u_reg.reg_wdata [8];
  assign \u_uart.u_reg.intr_test_tx_watermark_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.intr_test_we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.ovrd_txen_qs  = \u_uart.u_reg.u_ovrd_txen.q ;
  assign \u_uart.u_reg.ovrd_txen_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.ovrd_txval_qs  = \u_uart.u_reg.u_ovrd_txval.q ;
  assign \u_uart.u_reg.ovrd_txval_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.rdata_qs  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.reg2hw  = { \u_uart.u_reg.u_intr_state_tx_empty.q , \u_uart.u_reg.u_intr_state_rx_parity_err.q , \u_uart.u_reg.u_intr_state_rx_timeout.q , \u_uart.u_reg.u_intr_state_rx_break_err.q , \u_uart.u_reg.u_intr_state_rx_frame_err.q , \u_uart.u_reg.u_intr_state_rx_overflow.q , \u_uart.u_reg.u_intr_state_tx_done.q , \u_uart.u_reg.u_intr_state_rx_watermark.q , \u_uart.u_reg.u_intr_state_tx_watermark.q , \u_uart.u_reg.u_intr_enable_tx_empty.q , \u_uart.u_reg.u_intr_enable_rx_parity_err.q , \u_uart.u_reg.u_intr_enable_rx_timeout.q , \u_uart.u_reg.u_intr_enable_rx_break_err.q , \u_uart.u_reg.u_intr_enable_rx_frame_err.q , \u_uart.u_reg.u_intr_enable_rx_overflow.q , \u_uart.u_reg.u_intr_enable_tx_done.q , \u_uart.u_reg.u_intr_enable_rx_watermark.q , \u_uart.u_reg.u_intr_enable_tx_watermark.q , \u_uart.u_reg.reg_wdata [8], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [7], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [6], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [5], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [4], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [3], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [2], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [1], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [0], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [0], \u_uart.reg2hw [94], \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_rxblvl.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txilvl.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxilvl.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_ovrd_txval.q , \u_uart.u_reg.u_ovrd_txen.q , \u_uart.u_reg.u_timeout_ctrl_en.q , \u_uart.u_reg.u_timeout_ctrl_val.q  };
  assign \u_uart.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_uart.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_uart.u_reg.reg_busy  = 1'h0;
  assign \u_uart.u_reg.reg_rdata  = \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_reg.reg_rdata_next  = \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_reg.rst_ni  = rst_ni;
  assign \u_uart.u_reg.shadow_busy  = 1'h0;
  assign \u_uart.u_reg.status_re  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.status_rxidle_qs  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.timeout_ctrl_en_qs  = \u_uart.u_reg.u_timeout_ctrl_en.q ;
  assign \u_uart.u_reg.timeout_ctrl_en_wd  = \u_uart.u_reg.reg_wdata [31];
  assign \u_uart.u_reg.timeout_ctrl_val_qs  = \u_uart.u_reg.u_timeout_ctrl_val.q ;
  assign \u_uart.u_reg.timeout_ctrl_val_wd  = \u_uart.u_reg.reg_wdata [23:0];
  assign \u_uart.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_o_pre  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_reg_d2h  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_alert_test.d  = 1'h0;
  assign \u_uart.u_reg.u_alert_test.ds  = 1'h0;
  assign \u_uart.u_reg.u_alert_test.q  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_alert_test.qe  = \u_uart.reg2hw [94];
  assign \u_uart.u_reg.u_alert_test.qre  = 1'h0;
  assign \u_uart.u_reg.u_alert_test.qs  = 1'h0;
  assign \u_uart.u_reg.u_alert_test.re  = 1'h0;
  assign \u_uart.u_reg.u_alert_test.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_alert_test.we  = \u_uart.reg2hw [94];
  assign \u_uart.u_reg.u_ctrl_llpbk.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_llpbk.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.qs  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_llpbk.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_nco.d  = 16'h0000;
  assign \u_uart.u_reg.u_ctrl_nco.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nco.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.qs  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_nco.wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_data  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.d  = 16'h0000;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_nf.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.qs  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_nf.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_parity_en.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.qs  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_parity_en.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_parity_odd.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.qs  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_rx.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.qs  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_rx.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rxblvl.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_rxblvl.d  = 2'h0;
  assign \u_uart.u_reg.u_ctrl_rxblvl.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rxblvl.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rxblvl.qs  = \u_uart.u_reg.u_ctrl_rxblvl.q ;
  assign \u_uart.u_reg.u_ctrl_rxblvl.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_rxblvl.wd  = \u_uart.u_reg.reg_wdata [9:8];
  assign \u_uart.u_reg.u_ctrl_rxblvl.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_data  = \u_uart.u_reg.reg_wdata [9:8];
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.d  = 2'h0;
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_rxblvl.q ;
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_rxblvl.q ;
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [9:8];
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [9:8];
  assign \u_uart.u_reg.u_ctrl_rxblvl.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_slpbk.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.qs  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_slpbk.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_tx.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.qs  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_tx.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.d  = 3'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.qs  = \u_uart.u_reg.u_fifo_ctrl_rxilvl.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wd  = \u_uart.u_reg.reg_wdata [4:2];
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_data  = \u_uart.u_reg.reg_wdata [4:2];
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.d  = 3'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_rxilvl.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_rxilvl.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [4:2];
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [4:2];
  assign \u_uart.u_reg.u_fifo_ctrl_rxilvl.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.qs  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.d  = 3'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.qs  = \u_uart.u_reg.u_fifo_ctrl_txilvl.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wd  = \u_uart.u_reg.reg_wdata [7:5];
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_data  = \u_uart.u_reg.reg_wdata [7:5];
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.d  = 3'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_txilvl.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_txilvl.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7:5];
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7:5];
  assign \u_uart.u_reg.u_fifo_ctrl_txilvl.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.qs  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.d  = { 1'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.ds  = { 1'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.q  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.qe  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.qs  = { 1'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.wd  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.we  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_txlvl.d  = { 2'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.ds  = { 2'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.q  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_txlvl.qe  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_txlvl.qs  = { 2'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.wd  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_txlvl.we  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.qe  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.qs  = \u_uart.u_reg.u_intr_enable_rx_break_err.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_intr_enable_rx_break_err.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_enable_rx_break_err.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_intr_enable_rx_break_err.wr_en_data_arb.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.qe  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.qs  = \u_uart.u_reg.u_intr_enable_rx_frame_err.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_intr_enable_rx_frame_err.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_enable_rx_frame_err.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_intr_enable_rx_frame_err.wr_en_data_arb.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.qe  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.qs  = \u_uart.u_reg.u_intr_enable_rx_overflow.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wd  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_data  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_intr_enable_rx_overflow.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_enable_rx_overflow.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.u_intr_enable_rx_overflow.wr_en_data_arb.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.qe  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.qs  = \u_uart.u_reg.u_intr_enable_rx_parity_err.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_intr_enable_rx_parity_err.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_enable_rx_parity_err.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_intr_enable_rx_parity_err.wr_en_data_arb.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.qe  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.qs  = \u_uart.u_reg.u_intr_enable_rx_timeout.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_intr_enable_rx_timeout.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_enable_rx_timeout.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_intr_enable_rx_timeout.wr_en_data_arb.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.qe  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.qs  = \u_uart.u_reg.u_intr_enable_rx_watermark.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_intr_enable_rx_watermark.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_enable_rx_watermark.q ;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_intr_enable_rx_watermark.wr_en_data_arb.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_done.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_enable_tx_done.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_done.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_done.qe  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_done.qs  = \u_uart.u_reg.u_intr_enable_tx_done.q ;
  assign \u_uart.u_reg.u_intr_enable_tx_done.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_enable_tx_done.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_intr_enable_tx_done.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_intr_enable_tx_done.q ;
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_enable_tx_done.q ;
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_intr_enable_tx_done.wr_en_data_arb.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.qe  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.qs  = \u_uart.u_reg.u_intr_enable_tx_empty.q ;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wd  = \u_uart.u_reg.reg_wdata [8];
  assign \u_uart.u_reg.u_intr_enable_tx_empty.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_data  = \u_uart.u_reg.reg_wdata [8];
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_intr_enable_tx_empty.q ;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_enable_tx_empty.q ;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [8];
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [8];
  assign \u_uart.u_reg.u_intr_enable_tx_empty.wr_en_data_arb.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.qe  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.qs  = \u_uart.u_reg.u_intr_enable_tx_watermark.q ;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_intr_enable_tx_watermark.q ;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_enable_tx_watermark.q ;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.we  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_intr_enable_tx_watermark.wr_en_data_arb.wr_en  = \u_uart.u_reg.intr_enable_we ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.d  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.d ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.de  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.qs  = \u_uart.u_reg.u_intr_state_rx_break_err.q ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_intr_state_rx_break_err.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wr_en  = \u_uart.u_reg.u_intr_state_rx_break_err.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_state_rx_break_err.q ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.wr_data  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_data ;
  assign \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_intr_state_rx_break_err.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.d  = \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.d ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.de  = \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.qs  = \u_uart.u_reg.u_intr_state_rx_frame_err.q ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en  = \u_uart.u_reg.u_intr_state_rx_frame_err.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_state_rx_frame_err.q ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.wr_data  = \u_uart.u_reg.u_intr_state_rx_frame_err.wr_data ;
  assign \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_intr_state_rx_frame_err.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.d  = \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.d ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.de  = \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.qs  = \u_uart.u_reg.u_intr_state_rx_overflow.q ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wd  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.u_intr_state_rx_overflow.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wr_en  = \u_uart.u_reg.u_intr_state_rx_overflow.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_state_rx_overflow.q ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.wr_data  = \u_uart.u_reg.u_intr_state_rx_overflow.wr_data ;
  assign \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_intr_state_rx_overflow.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.d  = \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.d ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.de  = \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.qs  = \u_uart.u_reg.u_intr_state_rx_parity_err.q ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en  = \u_uart.u_reg.u_intr_state_rx_parity_err.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_state_rx_parity_err.q ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.wr_data  = \u_uart.u_reg.u_intr_state_rx_parity_err.wr_data ;
  assign \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_intr_state_rx_parity_err.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.d  = \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.d ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.de  = \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.qs  = \u_uart.u_reg.u_intr_state_rx_timeout.q ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_intr_state_rx_timeout.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wr_en  = \u_uart.u_reg.u_intr_state_rx_timeout.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_state_rx_timeout.q ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.wr_data  = \u_uart.u_reg.u_intr_state_rx_timeout.wr_data ;
  assign \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_intr_state_rx_timeout.qe ;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.de  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.ds  = \u_uart.u_reg.u_intr_state_rx_watermark.d ;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.qe  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.qs  = \u_uart.u_reg.u_intr_state_rx_watermark.q ;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wd  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.we  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_data  = \u_uart.u_reg.u_intr_state_rx_watermark.d ;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.d  = \u_uart.u_reg.u_intr_state_rx_watermark.d ;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.de  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.gen_ro.unused_q  = \u_uart.u_reg.u_intr_state_rx_watermark.q ;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.gen_ro.unused_wd  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.gen_ro.unused_we  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_state_rx_watermark.q ;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.wd  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.we  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.wr_data  = \u_uart.u_reg.u_intr_state_rx_watermark.d ;
  assign \u_uart.u_reg.u_intr_state_rx_watermark.wr_en_data_arb.wr_en  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_done.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_state_tx_done.d  = \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.d ;
  assign \u_uart.u_reg.u_intr_state_tx_done.de  = \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de ;
  assign \u_uart.u_reg.u_intr_state_tx_done.qs  = \u_uart.u_reg.u_intr_state_tx_done.q ;
  assign \u_uart.u_reg.u_intr_state_tx_done.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_state_tx_done.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_intr_state_tx_done.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_tx_done.wr_en  = \u_uart.u_reg.u_intr_state_tx_done.qe ;
  assign \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_state_tx_done.q ;
  assign \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.we  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.we ;
  assign \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.wr_data  = \u_uart.u_reg.u_intr_state_tx_done.wr_data ;
  assign \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_intr_state_tx_done.qe ;
  assign \u_uart.u_reg.u_intr_state_tx_empty.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_state_tx_empty.de  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_empty.ds  = \u_uart.u_reg.u_intr_state_tx_empty.d ;
  assign \u_uart.u_reg.u_intr_state_tx_empty.qe  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_empty.qs  = \u_uart.u_reg.u_intr_state_tx_empty.q ;
  assign \u_uart.u_reg.u_intr_state_tx_empty.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wd  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_empty.we  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_data  = \u_uart.u_reg.u_intr_state_tx_empty.d ;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.d  = \u_uart.u_reg.u_intr_state_tx_empty.d ;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.de  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.gen_ro.unused_q  = \u_uart.u_reg.u_intr_state_tx_empty.q ;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.gen_ro.unused_wd  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.gen_ro.unused_we  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_state_tx_empty.q ;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.wd  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.we  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.wr_data  = \u_uart.u_reg.u_intr_state_tx_empty.d ;
  assign \u_uart.u_reg.u_intr_state_tx_empty.wr_en_data_arb.wr_en  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.clk_i  = clk_i;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.de  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.ds  = \u_uart.u_reg.u_intr_state_tx_watermark.d ;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.qe  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.qs  = \u_uart.u_reg.u_intr_state_tx_watermark.q ;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wd  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.we  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_data  = \u_uart.u_reg.u_intr_state_tx_watermark.d ;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.d  = \u_uart.u_reg.u_intr_state_tx_watermark.d ;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.de  = 1'h1;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.gen_ro.unused_q  = \u_uart.u_reg.u_intr_state_tx_watermark.q ;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.gen_ro.unused_wd  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.gen_ro.unused_we  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.q  = \u_uart.u_reg.u_intr_state_tx_watermark.q ;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.wd  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.we  = 1'h0;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.wr_data  = \u_uart.u_reg.u_intr_state_tx_watermark.d ;
  assign \u_uart.u_reg.u_intr_state_tx_watermark.wr_en_data_arb.wr_en  = 1'h1;
  assign \u_uart.u_reg.u_intr_test_rx_break_err.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_break_err.ds  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_break_err.q  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_intr_test_rx_break_err.qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_break_err.qre  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_break_err.qs  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_break_err.re  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_break_err.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_intr_test_rx_break_err.we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_frame_err.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_frame_err.ds  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_frame_err.q  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_intr_test_rx_frame_err.qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_frame_err.qre  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_frame_err.qs  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_frame_err.re  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_frame_err.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_intr_test_rx_frame_err.we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_overflow.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_overflow.ds  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_overflow.q  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.u_intr_test_rx_overflow.qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_overflow.qre  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_overflow.qs  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_overflow.re  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_overflow.wd  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_reg.u_intr_test_rx_overflow.we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_parity_err.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_parity_err.ds  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_parity_err.q  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_intr_test_rx_parity_err.qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_parity_err.qre  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_parity_err.qs  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_parity_err.re  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_parity_err.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_intr_test_rx_parity_err.we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_timeout.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_timeout.ds  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_timeout.q  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_intr_test_rx_timeout.qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_timeout.qre  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_timeout.qs  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_timeout.re  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_timeout.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_intr_test_rx_timeout.we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_watermark.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_watermark.ds  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_watermark.q  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_intr_test_rx_watermark.qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_rx_watermark.qre  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_watermark.qs  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_watermark.re  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_rx_watermark.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_intr_test_rx_watermark.we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_tx_done.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_done.ds  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_done.q  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_intr_test_tx_done.qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_tx_done.qre  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_done.qs  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_done.re  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_done.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_intr_test_tx_done.we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_tx_empty.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_empty.ds  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_empty.q  = \u_uart.u_reg.reg_wdata [8];
  assign \u_uart.u_reg.u_intr_test_tx_empty.qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_tx_empty.qre  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_empty.qs  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_empty.re  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_empty.wd  = \u_uart.u_reg.reg_wdata [8];
  assign \u_uart.u_reg.u_intr_test_tx_empty.we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_tx_watermark.d  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_watermark.ds  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_watermark.q  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_intr_test_tx_watermark.qe  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_intr_test_tx_watermark.qre  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_watermark.qs  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_watermark.re  = 1'h0;
  assign \u_uart.u_reg.u_intr_test_tx_watermark.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_intr_test_tx_watermark.we  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_reg.u_ovrd_txen.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ovrd_txen.d  = 1'h0;
  assign \u_uart.u_reg.u_ovrd_txen.de  = 1'h0;
  assign \u_uart.u_reg.u_ovrd_txen.qe  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_ovrd_txen.qs  = \u_uart.u_reg.u_ovrd_txen.q ;
  assign \u_uart.u_reg.u_ovrd_txen.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ovrd_txen.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ovrd_txen.we  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_ovrd_txen.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ovrd_txen.wr_en  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ovrd_txen.q ;
  assign \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.q  = \u_uart.u_reg.u_ovrd_txen.q ;
  assign \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.we  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ovrd_txen.wr_en_data_arb.wr_en  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_ovrd_txval.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ovrd_txval.d  = 1'h0;
  assign \u_uart.u_reg.u_ovrd_txval.de  = 1'h0;
  assign \u_uart.u_reg.u_ovrd_txval.qe  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_ovrd_txval.qs  = \u_uart.u_reg.u_ovrd_txval.q ;
  assign \u_uart.u_reg.u_ovrd_txval.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ovrd_txval.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ovrd_txval.we  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_ovrd_txval.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ovrd_txval.wr_en  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ovrd_txval.q ;
  assign \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.q  = \u_uart.u_reg.u_ovrd_txval.q ;
  assign \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.we  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ovrd_txval.wr_en_data_arb.wr_en  = \u_uart.u_reg.ovrd_we ;
  assign \u_uart.u_reg.u_rdata.d  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.ds  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.q  = 8'h00;
  assign \u_uart.u_reg.u_rdata.qe  = 1'h0;
  assign \u_uart.u_reg.u_rdata.qre  = \u_uart.u_reg.rdata_re ;
  assign \u_uart.u_reg.u_rdata.qs  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.re  = \u_uart.u_reg.rdata_re ;
  assign \u_uart.u_reg.u_rdata.wd  = 8'h00;
  assign \u_uart.u_reg.u_rdata.we  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_uart.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_uart.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_uart.u_reg.u_reg_if.d_ack  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \u_uart.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_uart.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.error  = \u_uart.u_reg.u_reg_if.error_q ;
  assign \u_uart.u_reg.u_reg_if.error_i  = \u_uart.u_reg.reg_error ;
  assign \u_uart.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.rd_req  = \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.u_reg_if.rdata  = \u_uart.u_reg.u_reg_if.rdata_q ;
  assign \u_uart.u_reg.u_reg_if.re_o  = \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_reg_if.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.tl_o_pre  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_uart.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_uart.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_uart.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_uart.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.wdata_o  = \u_uart.u_reg.reg_wdata ;
  assign \u_uart.u_reg.u_reg_if.we_o  = \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_reg_if.wr_req  = \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_rsp_intg_gen.tl_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_rsp_intg_gen.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_status_rxempty.d  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.ds  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.qre  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_rxempty.qs  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.re  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_rxempty.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.we  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.d  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.ds  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.qre  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_rxfull.qs  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.re  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_rxfull.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.we  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.d  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.ds  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.qre  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_rxidle.qs  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.re  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_rxidle.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.d  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.ds  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.qre  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_txempty.qs  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.re  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_txempty.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.d  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.ds  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.qre  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_txfull.qs  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.re  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_txfull.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.d  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.ds  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.qre  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_txidle.qs  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.re  = \u_uart.reg2hw [67];
  assign \u_uart.u_reg.u_status_txidle.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.we  = 1'h0;
  assign \u_uart.u_reg.u_timeout_ctrl_en.clk_i  = clk_i;
  assign \u_uart.u_reg.u_timeout_ctrl_en.d  = 1'h0;
  assign \u_uart.u_reg.u_timeout_ctrl_en.de  = 1'h0;
  assign \u_uart.u_reg.u_timeout_ctrl_en.qe  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_timeout_ctrl_en.qs  = \u_uart.u_reg.u_timeout_ctrl_en.q ;
  assign \u_uart.u_reg.u_timeout_ctrl_en.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_timeout_ctrl_en.wd  = \u_uart.u_reg.reg_wdata [31];
  assign \u_uart.u_reg.u_timeout_ctrl_en.we  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_data  = \u_uart.u_reg.reg_wdata [31];
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_en  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_timeout_ctrl_en.q ;
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.q  = \u_uart.u_reg.u_timeout_ctrl_en.q ;
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [31];
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.we  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [31];
  assign \u_uart.u_reg.u_timeout_ctrl_en.wr_en_data_arb.wr_en  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_timeout_ctrl_val.clk_i  = clk_i;
  assign \u_uart.u_reg.u_timeout_ctrl_val.d  = 24'h000000;
  assign \u_uart.u_reg.u_timeout_ctrl_val.de  = 1'h0;
  assign \u_uart.u_reg.u_timeout_ctrl_val.qe  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_timeout_ctrl_val.qs  = \u_uart.u_reg.u_timeout_ctrl_val.q ;
  assign \u_uart.u_reg.u_timeout_ctrl_val.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_timeout_ctrl_val.wd  = \u_uart.u_reg.reg_wdata [23:0];
  assign \u_uart.u_reg.u_timeout_ctrl_val.we  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_data  = \u_uart.u_reg.reg_wdata [23:0];
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_en  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.d  = 24'h000000;
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_timeout_ctrl_val.q ;
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.q  = \u_uart.u_reg.u_timeout_ctrl_val.q ;
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [23:0];
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.we  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [23:0];
  assign \u_uart.u_reg.u_timeout_ctrl_val.wr_en_data_arb.wr_en  = \u_uart.u_reg.timeout_ctrl_we ;
  assign \u_uart.u_reg.u_val.d  = \u_uart.u_uart_core.rx_val_q ;
  assign \u_uart.u_reg.u_val.ds  = \u_uart.u_uart_core.rx_val_q ;
  assign \u_uart.u_reg.u_val.q  = 16'h0000;
  assign \u_uart.u_reg.u_val.qe  = 1'h0;
  assign \u_uart.u_reg.u_val.qs  = \u_uart.u_uart_core.rx_val_q ;
  assign \u_uart.u_reg.u_val.wd  = 16'h0000;
  assign \u_uart.u_reg.u_val.we  = 1'h0;
  assign \u_uart.u_reg.u_wdata.clk_i  = clk_i;
  assign \u_uart.u_reg.u_wdata.d  = 8'h00;
  assign \u_uart.u_reg.u_wdata.de  = 1'h0;
  assign \u_uart.u_reg.u_wdata.qe  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.qs  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_wdata.wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_data  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.d  = 8'h00;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.q  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata0_qe.clk_i  = clk_i;
  assign \u_uart.u_reg.u_wdata0_qe.rst_ni  = rst_ni;
  assign \u_uart.u_reg.val_qs  = \u_uart.u_uart_core.rx_val_q ;
  assign \u_uart.u_reg.wdata_flds_we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.wdata_qe  = \u_uart.u_reg.u_wdata0_qe.q_o ;
  assign \u_uart.u_reg.wdata_wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.wdata_we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_uart_core.clk_i  = clk_i;
  assign \u_uart.u_uart_core.event_rx_break_err  = \u_uart.u_uart_core.intr_hw_rx_break_err.event_intr_i ;
  assign \u_uart.u_uart_core.event_rx_overflow  = \u_uart.u_uart_core.intr_hw_rx_overflow.event_intr_i ;
  assign \u_uart.u_uart_core.event_rx_watermark  = \u_uart.u_uart_core.intr_hw_rx_watermark.event_intr_i ;
  assign \u_uart.u_uart_core.event_tx_done  = \u_uart.u_uart_core.intr_hw_tx_done.event_intr_i ;
  assign \u_uart.u_uart_core.event_tx_empty  = \u_uart.u_uart_core.intr_hw_tx_empty.event_intr_i ;
  assign \u_uart.u_uart_core.event_tx_watermark  = \u_uart.u_uart_core.intr_hw_tx_watermark.event_intr_i ;
  assign \u_uart.u_uart_core.hw2reg  = { \u_uart.u_reg.u_intr_state_tx_watermark.d , 1'h1, \u_uart.u_reg.u_intr_state_rx_watermark.d , 1'h1, \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.d , \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de , \u_uart.u_reg.u_intr_state_tx_empty.d , 1'h1, \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 10'h000, \u_uart.u_uart_core.tx_fifo_depth , 1'h0, \u_uart.u_uart_core.rx_fifo_depth , \u_uart.u_uart_core.rx_val_q  };
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.clk_i  = clk_i;
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.g_intr_event.new_event  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.hw2reg_intr_state_d_o  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.d ;
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.hw2reg_intr_state_de_o  = \u_uart.u_reg.u_intr_state_rx_break_err.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_enable_q_i  = \u_uart.u_reg.u_intr_enable_rx_break_err.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_state_q_i  = \u_uart.u_reg.u_intr_state_rx_break_err.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_q_i  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.intr_hw_rx_break_err.status  = \u_uart.u_reg.u_intr_state_rx_break_err.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.clk_i  = clk_i;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.event_intr_i  = \u_uart.u_uart_core.event_rx_frame_err ;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.g_intr_event.new_event  = \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.hw2reg_intr_state_d_o  = \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.d ;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.hw2reg_intr_state_de_o  = \u_uart.u_reg.u_intr_state_rx_frame_err.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.reg2hw_intr_enable_q_i  = \u_uart.u_reg.u_intr_enable_rx_frame_err.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.reg2hw_intr_state_q_i  = \u_uart.u_reg.u_intr_state_rx_frame_err.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.reg2hw_intr_test_q_i  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.reg2hw_intr_test_qe_i  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.intr_hw_rx_frame_err.status  = \u_uart.u_reg.u_intr_state_rx_frame_err.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.clk_i  = clk_i;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.g_intr_event.new_event  = \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.hw2reg_intr_state_d_o  = \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.d ;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.hw2reg_intr_state_de_o  = \u_uart.u_reg.u_intr_state_rx_overflow.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.reg2hw_intr_enable_q_i  = \u_uart.u_reg.u_intr_enable_rx_overflow.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.reg2hw_intr_state_q_i  = \u_uart.u_reg.u_intr_state_rx_overflow.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.reg2hw_intr_test_q_i  = \u_uart.u_reg.reg_wdata [3];
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.reg2hw_intr_test_qe_i  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.intr_hw_rx_overflow.status  = \u_uart.u_reg.u_intr_state_rx_overflow.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.clk_i  = clk_i;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.event_intr_i  = \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.g_intr_event.new_event  = \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.hw2reg_intr_state_d_o  = \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.d ;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.hw2reg_intr_state_de_o  = \u_uart.u_reg.u_intr_state_rx_parity_err.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.reg2hw_intr_enable_q_i  = \u_uart.u_reg.u_intr_enable_rx_parity_err.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.reg2hw_intr_state_q_i  = \u_uart.u_reg.u_intr_state_rx_parity_err.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.reg2hw_intr_test_q_i  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.reg2hw_intr_test_qe_i  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.intr_hw_rx_parity_err.status  = \u_uart.u_reg.u_intr_state_rx_parity_err.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.clk_i  = clk_i;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.event_intr_i  = \u_uart.u_uart_core.event_rx_timeout ;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.g_intr_event.new_event  = \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.hw2reg_intr_state_d_o  = \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.d ;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.hw2reg_intr_state_de_o  = \u_uart.u_reg.u_intr_state_rx_timeout.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.reg2hw_intr_enable_q_i  = \u_uart.u_reg.u_intr_enable_rx_timeout.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.reg2hw_intr_state_q_i  = \u_uart.u_reg.u_intr_state_rx_timeout.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.reg2hw_intr_test_q_i  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.reg2hw_intr_test_qe_i  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.intr_hw_rx_timeout.status  = \u_uart.u_reg.u_intr_state_rx_timeout.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.clk_i  = clk_i;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.g_intr_status.unused_reg2hw  = \u_uart.u_reg.u_intr_state_rx_watermark.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.hw2reg_intr_state_d_o  = \u_uart.u_reg.u_intr_state_rx_watermark.d ;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.hw2reg_intr_state_de_o  = 1'h1;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.reg2hw_intr_enable_q_i  = \u_uart.u_reg.u_intr_enable_rx_watermark.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.reg2hw_intr_state_q_i  = \u_uart.u_reg.u_intr_state_rx_watermark.q ;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.reg2hw_intr_test_q_i  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.reg2hw_intr_test_qe_i  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.intr_hw_rx_watermark.status  = \u_uart.u_reg.u_intr_state_rx_watermark.d ;
  assign \u_uart.u_uart_core.intr_hw_tx_done.clk_i  = clk_i;
  assign \u_uart.u_uart_core.intr_hw_tx_done.g_intr_event.new_event  = \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_tx_done.hw2reg_intr_state_d_o  = \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.d ;
  assign \u_uart.u_uart_core.intr_hw_tx_done.hw2reg_intr_state_de_o  = \u_uart.u_reg.u_intr_state_tx_done.wr_en_data_arb.de ;
  assign \u_uart.u_uart_core.intr_hw_tx_done.reg2hw_intr_enable_q_i  = \u_uart.u_reg.u_intr_enable_tx_done.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_done.reg2hw_intr_state_q_i  = \u_uart.u_reg.u_intr_state_tx_done.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_done.reg2hw_intr_test_q_i  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_uart_core.intr_hw_tx_done.reg2hw_intr_test_qe_i  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_uart_core.intr_hw_tx_done.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.intr_hw_tx_done.status  = \u_uart.u_reg.u_intr_state_tx_done.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.clk_i  = clk_i;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.g_intr_status.unused_reg2hw  = \u_uart.u_reg.u_intr_state_tx_empty.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.hw2reg_intr_state_d_o  = \u_uart.u_reg.u_intr_state_tx_empty.d ;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.hw2reg_intr_state_de_o  = 1'h1;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.reg2hw_intr_enable_q_i  = \u_uart.u_reg.u_intr_enable_tx_empty.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.reg2hw_intr_state_q_i  = \u_uart.u_reg.u_intr_state_tx_empty.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.reg2hw_intr_test_q_i  = \u_uart.u_reg.reg_wdata [8];
  assign \u_uart.u_uart_core.intr_hw_tx_empty.reg2hw_intr_test_qe_i  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.intr_hw_tx_empty.status  = \u_uart.u_reg.u_intr_state_tx_empty.d ;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.clk_i  = clk_i;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.g_intr_status.unused_reg2hw  = \u_uart.u_reg.u_intr_state_tx_watermark.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.hw2reg_intr_state_d_o  = \u_uart.u_reg.u_intr_state_tx_watermark.d ;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.hw2reg_intr_state_de_o  = 1'h1;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.reg2hw_intr_enable_q_i  = \u_uart.u_reg.u_intr_enable_tx_watermark.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.reg2hw_intr_state_q_i  = \u_uart.u_reg.u_intr_state_tx_watermark.q ;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.reg2hw_intr_test_q_i  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.reg2hw_intr_test_qe_i  = \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i ;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.intr_hw_tx_watermark.status  = \u_uart.u_reg.u_intr_state_tx_watermark.d ;
  assign \u_uart.u_uart_core.line_loopback  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_uart_core.ovrd_tx_en  = \u_uart.u_reg.u_ovrd_txen.q ;
  assign \u_uart.u_uart_core.ovrd_tx_val  = \u_uart.u_reg.u_ovrd_txval.q ;
  assign \u_uart.u_uart_core.reg2hw  = { \u_uart.u_reg.u_intr_state_tx_empty.q , \u_uart.u_reg.u_intr_state_rx_parity_err.q , \u_uart.u_reg.u_intr_state_rx_timeout.q , \u_uart.u_reg.u_intr_state_rx_break_err.q , \u_uart.u_reg.u_intr_state_rx_frame_err.q , \u_uart.u_reg.u_intr_state_rx_overflow.q , \u_uart.u_reg.u_intr_state_tx_done.q , \u_uart.u_reg.u_intr_state_rx_watermark.q , \u_uart.u_reg.u_intr_state_tx_watermark.q , \u_uart.u_reg.u_intr_enable_tx_empty.q , \u_uart.u_reg.u_intr_enable_rx_parity_err.q , \u_uart.u_reg.u_intr_enable_rx_timeout.q , \u_uart.u_reg.u_intr_enable_rx_break_err.q , \u_uart.u_reg.u_intr_enable_rx_frame_err.q , \u_uart.u_reg.u_intr_enable_rx_overflow.q , \u_uart.u_reg.u_intr_enable_tx_done.q , \u_uart.u_reg.u_intr_enable_rx_watermark.q , \u_uart.u_reg.u_intr_enable_tx_watermark.q , \u_uart.u_reg.reg_wdata [8], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [7], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [6], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [5], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [4], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [3], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [2], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [1], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [0], \u_uart.u_uart_core.intr_hw_rx_break_err.reg2hw_intr_test_qe_i , \u_uart.u_reg.reg_wdata [0], \u_uart.reg2hw [94], \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_rxblvl.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 1'h0, \u_uart.reg2hw [67], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txilvl.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxilvl.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_ovrd_txval.q , \u_uart.u_reg.u_ovrd_txen.q , \u_uart.u_reg.u_timeout_ctrl_en.q , \u_uart.u_reg.u_timeout_ctrl_val.q  };
  assign \u_uart.u_uart_core.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.rx  = cio_rx_i;
  assign \u_uart.u_uart_core.rx_data_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.rx_enable  = 1'h1;
  assign \u_uart.u_uart_core.rx_fifo_pop  = \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  assign \u_uart.u_uart_core.rx_fifo_rvalid  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.rx_in  = \u_uart.u_uart_core.uart_rx.rx ;
  assign \u_uart.u_uart_core.rx_sync  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \u_uart.u_uart_core.rx_tick_baud  = \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \u_uart.u_uart_core.rx_uart_idle  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_uart_core.rx_valid  = \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \u_uart.u_uart_core.rx_valid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.rxnf_enable  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_uart_core.sync_rx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.d_i  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.d_o  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.intq  = \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  assign \u_uart.u_uart_core.sync_rx.q_o  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \u_uart.u_uart_core.sync_rx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.d_i  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.d_i  = \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.unused_sig  = 1'h1;
  assign \u_uart.u_uart_core.sys_loopback  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_uart_core.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.tx  = cio_tx_o;
  assign \u_uart.u_uart_core.tx_enable  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.tx_fifo_rready  = \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \u_uart.u_uart_core.tx_out  = \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_rxfifo.depth_o  = \u_uart.u_uart_core.rx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_empty  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_wptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_wptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage_rdata  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clr_i  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.depth_o  = \u_uart.u_uart_core.rx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.empty_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.full_o  = \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [6];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [5:0] = 6'h00;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [6];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [5:0] = 6'h00;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rdata_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rvalid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wdata_i  = \u_uart.u_uart_core.rx_fifo_data ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wready_o  = \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i  = \u_uart.u_uart_core.rx_fifo_wvalid ;
  assign \u_uart.u_uart_core.u_uart_txfifo.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_txfifo.depth_o  = \u_uart.u_uart_core.tx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_txfifo.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_empty  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_rptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_rptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage_rdata  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clr_i  = \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.depth_o  = \u_uart.u_uart_core.tx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.empty_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.full_o  = \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [5];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4:0] = 5'h00;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [5];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [4:0] = 5'h00;
  assign \u_uart.u_uart_core.u_uart_txfifo.rdata_o  = \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.u_uart_core.u_uart_txfifo.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_txfifo.rvalid_o  = \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wdata_i  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wready_o  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wvalid_i  = \u_uart.u_reg.u_wdata0_qe.q_o ;
  assign \u_uart.u_uart_core.uart_fifo_rxilvl  = \u_uart.u_reg.u_fifo_ctrl_rxilvl.q ;
  assign \u_uart.u_uart_core.uart_fifo_rxrst  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  assign \u_uart.u_uart_core.uart_fifo_txilvl  = \u_uart.u_reg.u_fifo_ctrl_txilvl.q ;
  assign \u_uart.u_uart_core.uart_fifo_txrst  = \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  assign \u_uart.u_uart_core.uart_rdata  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.uart_rx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.uart_rx.frame_err  = \u_uart.u_uart_core.event_rx_frame_err ;
  assign \u_uart.u_uart_core.uart_rx.idle  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_uart_core.uart_rx.parity_enable  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_uart_core.uart_rx.parity_odd  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_uart_core.uart_rx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.uart_rx.rx_data  = \u_uart.u_uart_core.rx_fifo_data ;
  assign \u_uart.u_uart_core.uart_rx.rx_enable  = 1'h1;
  assign \u_uart.u_uart_core.uart_rx.rx_parity_err  = \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_uart_core.uart_rx.rx_valid  = \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud  = \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.uart_rxto_en  = \u_uart.u_reg.u_timeout_ctrl_en.q ;
  assign \u_uart.u_uart_core.uart_rxto_val  = \u_uart.u_reg.u_timeout_ctrl_val.q ;
  assign \u_uart.u_uart_core.uart_tx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.uart_tx.idle  = \u_uart.u_uart_core.tx_uart_idle ;
  assign \u_uart.u_uart_core.uart_tx.parity_enable  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_uart_core.uart_tx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.uart_tx.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.uart_tx.tx  = \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \u_uart.u_uart_core.uart_tx.tx_enable  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.uart_tx.wr  = \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \u_uart.u_uart_core.uart_tx.wr_data  = \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.valid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \u_uart.wdata_o  = \u_uart.u_bridge.wdata_q ;
  assign \u_uart.we_o  = \u_uart.u_bridge.we_q ;
  assign uart_addr = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign uart_be = \u_uart.u_bridge.be_q ;
  assign uart_err = \xbar.u_s1n_6.tl_t_p [1];
  assign uart_gnt = \uart_host_adapter.gnt_o ;
  assign \uart_host_adapter.addr_i  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \uart_host_adapter.be_i  = \u_uart.u_bridge.be_q ;
  assign \uart_host_adapter.clk_i  = clk_i;
  assign \uart_host_adapter.err_o  = \xbar.u_s1n_6.tl_t_p [1];
  assign \uart_host_adapter.instr_type_i  = 4'h9;
  assign \uart_host_adapter.intg_err  = 1'h0;
  assign \uart_host_adapter.intg_err_o  = 1'h0;
  assign \uart_host_adapter.intg_err_q  = 1'h0;
  assign \uart_host_adapter.rdata_intg_o  = \xbar.u_s1n_6.tl_t_p [8:2];
  assign \uart_host_adapter.rdata_o  = tl_uart_host_d2h[47:16];
  assign \uart_host_adapter.req_i  = \u_uart.u_bridge.req_q ;
  assign \uart_host_adapter.rst_ni  = rst_ni;
  assign \uart_host_adapter.tl_be  = \u_rv_timer.u_reg.reg_be ;
  assign \uart_host_adapter.tl_i  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \uart_host_adapter.tl_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.tl_out  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.tl_source  = { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  assign \uart_host_adapter.u_cmd_intg_gen.cmd_intg  = 7'h00;
  assign \uart_host_adapter.u_cmd_intg_gen.data_final  = \u_uart.u_bridge.wdata_q ;
  assign \uart_host_adapter.u_cmd_intg_gen.data_intg  = 7'h00;
  assign \uart_host_adapter.u_cmd_intg_gen.tl_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.u_cmd_intg_gen.tl_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.unused_addr_bottom_bits  = 1'h0;
  assign \uart_host_adapter.valid_o  = \xbar.u_s1n_6.tl_t_p [65];
  assign \uart_host_adapter.wdata_i  = \u_uart.u_bridge.wdata_q ;
  assign \uart_host_adapter.wdata_intg_i  = 7'h00;
  assign \uart_host_adapter.we_i  = \u_uart.u_bridge.we_q ;
  assign uart_rdata = tl_uart_host_d2h[47:16];
  assign uart_req = \u_uart.u_bridge.req_q ;
  assign uart_rvalid = \xbar.u_s1n_6.tl_t_p [65];
  assign uart_wdata = \u_uart.u_bridge.wdata_q ;
  assign uart_we = \u_uart.u_bridge.we_q ;
  assign \xbar.clk_i  = clk_i;
  assign \xbar.dev_sel_s1n_6  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.rst_ni  = rst_ni;
  assign \xbar.scanmode_i  = 4'h9;
  assign \xbar.tl_gpio_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_gpio_o  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.tl_pwm_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_pwm_o  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.tl_rv_timer_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_rv_timer_o  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.tl_s1n_6_ds_d2h  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_s1n_6_ds_h2d  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.tl_s1n_6_us_d2h  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.tl_s1n_6_us_h2d  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.tl_uart_host_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.tl_uart_host_o  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.tl_uart_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_uart_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.accept_t_rsp  = \xbar.u_s1n_6.tl_t_p [65];
  assign { \xbar.u_s1n_6.blanked_auser [22:14], \xbar.u_s1n_6.blanked_auser [6:0] } = 16'h04d5;
  assign \xbar.u_s1n_6.clk_i  = clk_i;
  assign \xbar.u_s1n_6.dev_select_i  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.full_o  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 23'h024000, \xbar.u_s1n_6.dev_select_t  };
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rready_i  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 23'h024000, \xbar.u_s1n_6.dev_select_t  };
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wready_o  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wvalid_i  = \u_uart.u_bridge.req_q ;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rdata_o  = { \xbar.u_s1n_6.tl_t_p [64:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], 1'h0 };
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rvalid_o  = \xbar.u_s1n_6.tl_t_p [65];
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wdata_i  = { \xbar.u_s1n_6.tl_t_p [64:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], 1'h0 };
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wvalid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \xbar.u_s1n_6.fifo_h.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.spare_req_i  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.spare_req_o  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.tl_d_i  = { \xbar.u_s1n_6.tl_t_p [65:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.fifo_h.tl_d_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.fifo_h.tl_h_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.fifo_h.tl_h_o  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [15:0] } = { \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 15'h0000, \u_uart.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rvalid_o  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wdata_i  = { \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wvalid_i  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [15:0] } = { \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 15'h0000, \u_pwm.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rvalid_o  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wdata_i  = { \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wvalid_i  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [15:0] } = { \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 15'h0000, \u_gpio.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rvalid_o  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wdata_i  = { \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wvalid_i  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [15:0] } = { \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 15'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rvalid_o  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wvalid_i  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [107:0] = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign { \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [65], \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [61:48], \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [15:0] } = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 16'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [65:1] = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001 };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_i  = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_o  = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.tl_d_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.tl_h_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.tl_h_o  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.tl_t_i  = { \xbar.u_s1n_6.tl_t_p [65:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.tl_t_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.tl_u_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o , \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.tl_u_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108], \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.unused_scanmode  = 1'h0;
  assign \$631y  = \$auto$bmuxmap.cc:84:execute$2650 ;
  assign \$793y  = \$auto$bmuxmap.cc:84:execute$2719 ;
endmodule
