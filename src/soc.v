/* Generated by Yosys 0.52+102 (git sha1 b69394783, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module soc(clk_i, rst_ni, cio_rx_i, cio_tx_o, cio_tx_en_o, cio_pwm_o, cio_pwm_en_o, cio_gpio_i, cio_gpio_o, cio_gpio_en_o);
  wire \$1027y ;
  wire \$1044y ;
  wire \$1082y ;
  wire \$1099y ;
  wire \$1137y ;
  wire \$1154y ;
  wire \$1171y ;
  wire \$1312y ;
  wire \$1313y ;
  wire \$1314y ;
  wire [3:0] \$1317y ;
  wire \$1320y ;
  wire \$1323y ;
  wire \$1324y ;
  wire \$1325y ;
  wire \$1329y ;
  wire \$1330y ;
  wire \$1334y ;
  wire \$1335y ;
  wire \$1339y ;
  wire \$1340y ;
  wire \$1344y ;
  wire \$1345y ;
  wire \$1349y ;
  wire \$1350y ;
  wire \$1352y ;
  wire \$1353y ;
  wire \$1355y ;
  wire \$1358y ;
  wire \$1361y ;
  wire \$1364y ;
  wire \$1367y ;
  wire \$1370y ;
  wire \$1382y ;
  wire \$1383y ;
  wire \$1384y ;
  wire \$1385y ;
  wire \$1386y ;
  wire \$1387y ;
  wire \$1388y ;
  wire [26:0] \$1391y ;
  wire [26:0] \$1392y ;
  wire [16:0] \$1411y ;
  wire \$1413y ;
  wire \$1414y ;
  wire \$1415y ;
  wire \$1416y ;
  wire \$1417y ;
  wire \$1418y ;
  wire [15:0] \$1419y ;
  wire [15:0] \$1420y ;
  wire [15:0] \$1421y ;
  wire [15:0] \$1428y ;
  wire \$1432y ;
  wire \$1433y ;
  wire \$1435y ;
  wire \$1436y ;
  wire \$1437y ;
  wire \$1438y ;
  wire \$1439y ;
  wire [15:0] \$1440y ;
  wire [15:0] \$1441y ;
  wire [15:0] \$1442y ;
  wire [15:0] \$1448y ;
  wire \$1460y ;
  wire \$1461y ;
  wire \$1462y ;
  wire \$1463y ;
  wire \$1464y ;
  wire \$1465y ;
  wire \$1466y ;
  wire \$1467y ;
  wire \$1468y ;
  wire \$1470y ;
  wire \$1471y ;
  wire \$1473y ;
  wire \$1474y ;
  wire \$1480y ;
  wire \$1481y ;
  wire \$1486y ;
  wire [16:0] \$1487y ;
  wire [16:0] \$1488y ;
  wire [16:0] \$1489y ;
  wire [16:0] \$1490y ;
  wire [16:0] \$1491y ;
  wire [16:0] \$1492y ;
  wire \$1499y ;
  wire \$1500y ;
  wire \$1501y ;
  wire \$1502y ;
  wire \$1508y ;
  wire \$1509y ;
  wire [15:0] \$1512y ;
  wire [15:0] \$1515y ;
  wire [15:0] \$1520y ;
  wire [31:0] \$1522y ;
  wire [15:0] \$1524y ;
  wire \$1537y ;
  wire \$1538y ;
  wire \$1540y ;
  wire \$1541y ;
  wire \$1543y ;
  wire \$1566y ;
  wire \$1567y ;
  wire [1:0] \$1568y ;
  wire [1:0] \$1569y ;
  wire \$1590y ;
  wire \$1591y ;
  wire [1:0] \$1592y ;
  wire [1:0] \$1593y ;
  wire \$1599y ;
  wire \$1600y ;
  wire \$1601y ;
  wire \$1602y ;
  wire \$1605y ;
  wire \$1606y ;
  wire \$1615y ;
  wire \$1616y ;
  wire \$1619y ;
  wire \$1620y ;
  wire [1:0] \$1625y ;
  wire [1:0] \$1633y ;
  wire [1:0] \$1634y ;
  wire [1:0] \$1636y ;
  wire [1:0] \$1637y ;
  wire [1:0] \$1642y ;
  wire [1:0] \$1643y ;
  wire \$1650y ;
  wire [2:0] \$1666y ;
  wire \$1674y ;
  wire [31:0] \$1675y ;
  wire [1:0] \$1759y ;
  wire [1:0] \$1760y ;
  wire [1:0] \$1761y ;
  wire \$1844y ;
  wire \$1845y ;
  wire \$1846y ;
  wire \$1852y ;
  wire \$1856y ;
  wire \$1857y ;
  wire \$1861y ;
  wire \$1862y ;
  wire \$1866y ;
  wire \$1867y ;
  wire \$1871y ;
  wire \$1872y ;
  wire \$1876y ;
  wire \$1877y ;
  wire \$1881y ;
  wire \$1882y ;
  wire \$1886y ;
  wire \$1887y ;
  wire \$1891y ;
  wire \$1892y ;
  wire \$1896y ;
  wire \$1897y ;
  wire \$1901y ;
  wire \$1902y ;
  wire \$1906y ;
  wire \$1907y ;
  wire \$1911y ;
  wire \$1912y ;
  wire \$1916y ;
  wire \$1917y ;
  wire \$1921y ;
  wire \$1922y ;
  wire \$1924y ;
  wire \$1925y ;
  wire \$1927y ;
  wire \$1930y ;
  wire \$1936y ;
  wire \$1942y ;
  wire \$1948y ;
  wire \$1954y ;
  wire \$1960y ;
  wire \$1966y ;
  wire \$1969y ;
  wire \$1972y ;
  wire \$1975y ;
  wire \$1978y ;
  wire \$1981y ;
  wire \$1990y ;
  wire \$1992y ;
  wire \$2004y ;
  wire [11:0] \$2005y ;
  wire \$2008y ;
  wire \$2011y ;
  wire [2:0] \$2034y ;
  wire \$2042y ;
  wire [31:0] \$2043y ;
  wire \$2143y ;
  wire \$2144y ;
  wire \$2145y ;
  wire \$216y ;
  wire \$217y ;
  wire \$218y ;
  wire [2:0] \$21y ;
  wire \$2219y ;
  wire \$2220y ;
  wire \$2221y ;
  wire \$2227y ;
  wire \$2231y ;
  wire \$2232y ;
  wire \$2236y ;
  wire \$2237y ;
  wire \$2241y ;
  wire \$2242y ;
  wire \$2245y ;
  wire \$2246y ;
  wire \$2247y ;
  wire \$224y ;
  wire \$2251y ;
  wire \$2252y ;
  wire \$2256y ;
  wire \$2257y ;
  wire \$2261y ;
  wire \$2262y ;
  wire \$2266y ;
  wire \$2267y ;
  wire \$2269y ;
  wire \$2270y ;
  wire \$2272y ;
  wire \$2275y ;
  wire \$2278y ;
  wire \$2281y ;
  wire \$2284y ;
  wire \$2287y ;
  wire \$228y ;
  wire \$2290y ;
  wire \$2293y ;
  wire \$229y ;
  wire \$234y ;
  wire \$239y ;
  wire \$243y ;
  wire \$244y ;
  wire \$248y ;
  wire \$249y ;
  wire \$251y ;
  wire \$252y ;
  wire \$257y ;
  wire \$260y ;
  wire \$263y ;
  wire [16:0] \$285y ;
  wire \$287y ;
  wire \$292y ;
  wire \$294y ;
  wire \$297y ;
  wire \$29y ;
  wire \$300y ;
  wire \$302y ;
  wire \$309y ;
  wire [31:0] \$30y ;
  wire [3:0] \$310y ;
  wire [3:0] \$311y ;
  wire [3:0] \$312y ;
  wire [3:0] \$313y ;
  wire [3:0] \$318y ;
  wire [3:0] \$325y ;
  wire \$329y ;
  wire \$332y ;
  wire \$335y ;
  wire [7:0] \$336y ;
  wire \$339y ;
  wire \$340y ;
  wire \$341y ;
  wire [7:0] \$342y ;
  wire [63:0] \$343y ;
  wire [63:0] \$345y ;
  wire [4:0] \$351y ;
  wire \$359y ;
  wire [3:0] \$360y ;
  wire \$361y ;
  wire \$362y ;
  wire [3:0] \$363y ;
  wire \$373y ;
  wire \$375y ;
  wire \$392y ;
  wire \$393y ;
  wire \$394y ;
  wire \$395y ;
  wire \$398y ;
  wire [4:0] \$405y ;
  wire \$408y ;
  wire \$409y ;
  wire \$411y ;
  wire \$412y ;
  wire \$414y ;
  wire \$415y ;
  wire [3:0] \$416y ;
  wire \$417y ;
  wire \$438y ;
  wire \$440y ;
  wire \$442y ;
  wire \$443y ;
  wire \$445y ;
  wire \$446y ;
  wire \$447y ;
  wire \$453y ;
  wire \$455y ;
  wire \$458y ;
  wire \$461y ;
  wire \$463y ;
  wire \$470y ;
  wire [4:0] \$471y ;
  wire [4:0] \$472y ;
  wire [4:0] \$473y ;
  wire [4:0] \$474y ;
  wire [4:0] \$479y ;
  wire [4:0] \$486y ;
  wire \$490y ;
  wire \$493y ;
  wire \$496y ;
  wire [7:0] \$497y ;
  wire \$500y ;
  wire \$501y ;
  wire \$502y ;
  wire [7:0] \$503y ;
  wire [127:0] \$504y ;
  wire [127:0] \$506y ;
  wire \$509y ;
  wire \$515y ;
  wire \$516y ;
  wire \$520y ;
  wire [1:0] \$521y ;
  wire \$529y ;
  wire \$562y ;
  wire \$583y ;
  wire \$589y ;
  wire [2:0] \$590y ;
  wire \$601y ;
  wire \$603y ;
  wire \$605y ;
  wire \$607y ;
  wire [8:0] \$620y ;
  wire [8:0] \$622y ;
  wire \$626y ;
  wire \$627y ;
  wire \$647y ;
  wire \$648y ;
  wire \$653y ;
  wire \$659y ;
  wire \$665y ;
  wire \$683y ;
  wire \$685y ;
  wire \$687y ;
  wire \$689y ;
  wire \$691y ;
  wire \$693y ;
  wire \$695y ;
  wire \$697y ;
  wire \$699y ;
  wire \$700y ;
  wire \$708y ;
  wire \$720y ;
  wire \$723y ;
  wire [2:0] \$747y ;
  wire \$755y ;
  wire [31:0] \$756y ;
  wire \$760y ;
  wire \$761y ;
  wire \$862y ;
  wire \$879y ;
  wire \$917y ;
  wire \$934y ;
  wire \$972y ;
  wire \$989y ;
  wire [31:0] \$auto$bmuxmap.cc:84:execute$2055 ;
  wire [15:0] \$auto$bmuxmap.cc:84:execute$2060 ;
  wire [7:0] \$auto$bmuxmap.cc:84:execute$2063 ;
  wire [63:0] \$auto$bmuxmap.cc:84:execute$2065 ;
  wire [31:0] \$auto$bmuxmap.cc:84:execute$2074 ;
  wire [15:0] \$auto$bmuxmap.cc:84:execute$2079 ;
  wire [7:0] \$auto$bmuxmap.cc:84:execute$2082 ;
  wire \$auto$demuxmap.cc:63:execute$2084 ;
  wire \$auto$demuxmap.cc:63:execute$2087 ;
  wire \$auto$demuxmap.cc:63:execute$2090 ;
  wire \$auto$demuxmap.cc:63:execute$2093 ;
  wire \$auto$demuxmap.cc:63:execute$2096 ;
  wire \$auto$demuxmap.cc:63:execute$2099 ;
  wire \$auto$demuxmap.cc:63:execute$2102 ;
  wire \$auto$demuxmap.cc:63:execute$2105 ;
  wire \$auto$demuxmap.cc:63:execute$2108 ;
  wire \$auto$demuxmap.cc:63:execute$2111 ;
  wire \$auto$demuxmap.cc:63:execute$2114 ;
  wire \$auto$demuxmap.cc:63:execute$2117 ;
  wire \$auto$demuxmap.cc:63:execute$2120 ;
  wire \$auto$demuxmap.cc:63:execute$2123 ;
  wire \$auto$demuxmap.cc:63:execute$2126 ;
  wire \$auto$demuxmap.cc:63:execute$2129 ;
  wire \$auto$demuxmap.cc:63:execute$2132 ;
  wire \$auto$demuxmap.cc:63:execute$2135 ;
  wire \$auto$demuxmap.cc:63:execute$2138 ;
  wire \$auto$demuxmap.cc:63:execute$2141 ;
  wire \$auto$demuxmap.cc:63:execute$2144 ;
  wire \$auto$demuxmap.cc:63:execute$2147 ;
  wire \$auto$demuxmap.cc:63:execute$2150 ;
  wire \$auto$demuxmap.cc:63:execute$2153 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1681 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1683 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1710 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1712 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1724 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1726 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1737 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1740 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1743 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1754 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1757 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1792 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1794 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1796 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1798 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1800 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1802 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1804 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1819 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1824 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1826 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1835 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1841 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1843 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1852 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1866 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1868 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1870 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1918 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1924 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1928 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1934 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1938 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1944 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1948 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1954 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1962 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1968 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1973 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1979 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1983 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1986 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1988 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1994 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$1996 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$2001 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$2003 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$2022 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$2024 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$2029 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$2032 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$2034 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$2039 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1685 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1690 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1714 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1728 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1806 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1821 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1828 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1847 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1854 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1857 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1872 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1875 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1893 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1990 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$1998 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$2005 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$2026 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$2036 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1649 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1653 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1655 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1659 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1663 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1667 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1669 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1671 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1673 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1679 ;
  wire [63:0] \$auto$rtlil.cc:2918:Not$2042 ;
  wire [127:0] \$auto$rtlil.cc:2918:Not$2049 ;
  wire [63:0] \$auto$rtlil.cc:2965:And$2044 ;
  wire [63:0] \$auto$rtlil.cc:2965:And$2046 ;
  wire [127:0] \$auto$rtlil.cc:2965:And$2051 ;
  wire [127:0] \$auto$rtlil.cc:2965:And$2053 ;
  wire \$procmux$1001_CMP ;
  wire \$procmux$1003_CMP ;
  wire \$procmux$1005_CMP ;
  wire \$procmux$1007_CMP ;
  wire [2:0] \$procmux$1013_Y ;
  wire \$procmux$1019_CMP ;
  wire \$procmux$1020_CMP ;
  wire [4:0] \$procmux$1086_Y ;
  wire [4:0] \$procmux$1096_Y ;
  wire [4:0] \$procmux$1103_Y ;
  wire [4:0] \$procmux$1105_Y ;
  wire [4:0] \$procmux$1115_Y ;
  wire [4:0] \$procmux$1122_Y ;
  wire \$procmux$1124_Y ;
  wire \$procmux$1129_Y ;
  wire [3:0] \$procmux$1140_Y ;
  wire [10:0] \$procmux$1151_Y ;
  wire \$procmux$1162_Y ;
  wire [3:0] \$procmux$1171_Y ;
  wire [10:0] \$procmux$1180_Y ;
  wire \$procmux$1223_Y ;
  wire [3:0] \$procmux$1228_Y ;
  wire [2:0] \$procmux$1253_Y ;
  wire [31:0] \$procmux$1258_Y ;
  wire [2:0] \$procmux$1265_Y ;
  wire [31:0] \$procmux$1269_Y ;
  wire \$procmux$1271_Y ;
  wire \$procmux$1278_Y ;
  wire \$procmux$1287_Y ;
  wire \$procmux$1289_Y ;
  wire [10:0] \$procmux$1297_Y ;
  wire [3:0] \$procmux$1305_Y ;
  wire [10:0] \$procmux$1315_Y ;
  wire [3:0] \$procmux$1322_Y ;
  wire \$procmux$1329_Y ;
  wire [15:0] \$procmux$1347_Y ;
  wire \$procmux$1350_Y ;
  wire [3:0] \$procmux$1357_Y ;
  wire [3:0] \$procmux$1367_Y ;
  wire [3:0] \$procmux$1374_Y ;
  wire [3:0] \$procmux$1376_Y ;
  wire [3:0] \$procmux$1386_Y ;
  wire [3:0] \$procmux$1393_Y ;
  wire \$procmux$1395_Y ;
  wire \$procmux$1467_Y ;
  wire \$procmux$1483_Y ;
  wire \$procmux$1496_Y ;
  wire \$procmux$1506_Y ;
  wire \$procmux$1513_Y ;
  wire [15:0] \$procmux$1524_Y ;
  wire [15:0] \$procmux$1579_Y ;
  wire [2:0] \$procmux$1588_Y ;
  wire [31:0] \$procmux$1593_Y ;
  wire [2:0] \$procmux$1600_Y ;
  wire [31:0] \$procmux$1604_Y ;
  wire \$procmux$1606_Y ;
  wire \$procmux$1613_Y ;
  wire \$procmux$1640_Y ;
  wire [2:0] \$procmux$208_Y ;
  wire \$procmux$213_Y ;
  wire [2:0] \$procmux$220_Y ;
  wire \$procmux$224_Y ;
  wire \$procmux$226_Y ;
  wire \$procmux$233_Y ;
  wire \$procmux$261_Y ;
  wire \$procmux$267_Y ;
  wire \$procmux$276_Y ;
  wire \$procmux$283_Y ;
  wire [1:0] \$procmux$290_Y ;
  wire \$procmux$292_Y ;
  wire \$procmux$301_Y ;
  wire \$procmux$308_Y ;
  wire [1:0] \$procmux$315_Y ;
  wire [2:0] \$procmux$317_Y ;
  wire [31:0] \$procmux$322_Y ;
  wire [2:0] \$procmux$329_Y ;
  wire [31:0] \$procmux$333_Y ;
  wire \$procmux$335_Y ;
  wire \$procmux$342_Y ;
  wire [2:0] \$procmux$344_Y ;
  wire [31:0] \$procmux$349_Y ;
  wire [2:0] \$procmux$356_Y ;
  wire [31:0] \$procmux$360_Y ;
  wire \$procmux$398_Y ;
  wire \$procmux$405_Y ;
  wire \$procmux$431_Y ;
  wire \$procmux$450_Y ;
  wire [11:0] \$procmux$453_Y ;
  wire [11:0] \$procmux$460_Y ;
  wire \$procmux$467_Y ;
  wire \$procmux$489_Y ;
  wire [65:0] \$procmux$511_Y ;
  wire [65:0] \$procmux$514_Y ;
  wire [65:0] \$procmux$516_Y ;
  wire \$procmux$522_Y ;
  wire \$procmux$525_Y ;
  wire \$procmux$528_Y ;
  wire \$procmux$530_Y ;
  wire [8:0] \$procmux$534_Y ;
  wire [8:0] \$procmux$542_Y ;
  wire [8:0] \$procmux$545_Y ;
  wire [2:0] \$procmux$553_Y ;
  wire [2:0] \$procmux$566_Y ;
  wire [2:0] \$procmux$576_Y ;
  wire \$procmux$588_Y ;
  wire \$procmux$629_Y ;
  wire [2:0] \$procmux$637_Y ;
  wire \$procmux$644_Y ;
  wire [3:0] \$procmux$653_Y ;
  wire [31:0] \$procmux$662_Y ;
  wire [1:0] \$procmux$671_Y ;
  wire [2:0] \$procmux$680_Y ;
  wire \$procmux$689_Y ;
  wire [3:0] \$procmux$696_Y ;
  wire [31:0] \$procmux$703_Y ;
  wire [31:0] \$procmux$710_Y ;
  wire [1:0] \$procmux$717_Y ;
  wire [2:0] \$procmux$71_Y ;
  wire [2:0] \$procmux$724_Y ;
  wire [1:0] \$procmux$733_Y ;
  wire [2:0] \$procmux$744_Y ;
  wire \$procmux$757_Y ;
  wire \$procmux$76_Y ;
  wire [3:0] \$procmux$770_Y ;
  wire [31:0] \$procmux$783_Y ;
  wire [1:0] \$procmux$796_Y ;
  wire \$procmux$809_Y ;
  wire [3:0] \$procmux$820_Y ;
  wire [31:0] \$procmux$831_Y ;
  wire [2:0] \$procmux$83_Y ;
  wire [2:0] \$procmux$853_Y ;
  wire \$procmux$863_Y ;
  wire [3:0] \$procmux$871_Y ;
  wire [31:0] \$procmux$879_Y ;
  wire \$procmux$87_Y ;
  wire \$procmux$89_Y ;
  wire [1:0] \$procmux$903_Y ;
  wire [2:0] \$procmux$911_Y ;
  wire [1:0] \$procmux$920_Y ;
  wire [2:0] \$procmux$932_Y ;
  wire \$procmux$955_CMP ;
  wire \$procmux$96_Y ;
  wire [1:0] \$procmux$983_Y ;
  wire [2:0] \$procmux$992_Y ;
  output [1:0] cio_gpio_en_o;
  wire [1:0] cio_gpio_en_o;
  input [1:0] cio_gpio_i;
  wire [1:0] cio_gpio_i;
  output [1:0] cio_gpio_o;
  wire [1:0] cio_gpio_o;
  output cio_pwm_en_o;
  wire cio_pwm_en_o;
  output cio_pwm_o;
  wire cio_pwm_o;
  input cio_rx_i;
  wire cio_rx_i;
  output cio_tx_en_o;
  wire cio_tx_en_o;
  output cio_tx_o;
  wire cio_tx_o;
  input clk_i;
  wire clk_i;
  input rst_ni;
  wire rst_ni;
  wire [65:0] tl_gpio_d2h;
  wire [108:0] tl_gpio_h2d;
  wire [65:0] tl_pwm_d2h;
  wire [108:0] tl_pwm_h2d;
  wire [65:0] tl_rv_timer_d2h;
  wire [108:0] tl_rv_timer_h2d;
  wire [65:0] tl_uart_d2h;
  wire [108:0] tl_uart_h2d;
  wire [65:0] tl_uart_host_d2h;
  wire [108:0] tl_uart_host_h2d;
  wire [1:0] \u_gpio.cio_gpio_en_o ;
  reg [1:0] \u_gpio.cio_gpio_en_q ;
  wire [1:0] \u_gpio.cio_gpio_i ;
  wire [1:0] \u_gpio.cio_gpio_o ;
  reg [1:0] \u_gpio.cio_gpio_q ;
  wire \u_gpio.clk_i ;
  wire [1:0] \u_gpio.data_in_d ;
  reg [1:0] \u_gpio.data_in_q ;
  wire [1:0] \u_gpio.event_intr_acthigh ;
  wire [1:0] \u_gpio.event_intr_actlow ;
  wire [1:0] \u_gpio.event_intr_combined ;
  wire [1:0] \u_gpio.event_intr_fall ;
  wire [1:0] \u_gpio.event_intr_rise ;
  wire \u_gpio.gen_filter[0].u_filter.clk_i ;
  wire [1:0] \u_gpio.gen_filter[0].u_filter.diff_ctr_d ;
  reg [1:0] \u_gpio.gen_filter[0].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[0].u_filter.enable_i ;
  wire \u_gpio.gen_filter[0].u_filter.filter_i ;
  wire \u_gpio.gen_filter[0].u_filter.filter_o ;
  reg \u_gpio.gen_filter[0].u_filter.filter_q ;
  wire \u_gpio.gen_filter[0].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[0].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[0].u_filter.stored_value_q ;
  wire [1:0] \u_gpio.gen_filter[0].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[0].u_filter.update_stored_value ;
  wire \u_gpio.gen_filter[1].u_filter.clk_i ;
  wire [1:0] \u_gpio.gen_filter[1].u_filter.diff_ctr_d ;
  reg [1:0] \u_gpio.gen_filter[1].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[1].u_filter.enable_i ;
  wire \u_gpio.gen_filter[1].u_filter.filter_i ;
  wire \u_gpio.gen_filter[1].u_filter.filter_o ;
  reg \u_gpio.gen_filter[1].u_filter.filter_q ;
  wire \u_gpio.gen_filter[1].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[1].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[1].u_filter.stored_value_q ;
  wire [1:0] \u_gpio.gen_filter[1].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[1].u_filter.update_stored_value ;
  wire [17:0] \u_gpio.hw2reg ;
  wire \u_gpio.intr_hw.clk_i ;
  wire [1:0] \u_gpio.intr_hw.event_intr_i ;
  wire [1:0] \u_gpio.intr_hw.g_intr_event.new_event ;
  wire [1:0] \u_gpio.intr_hw.hw2reg_intr_state_d_o ;
  wire \u_gpio.intr_hw.hw2reg_intr_state_de_o ;
  wire [1:0] \u_gpio.intr_hw.reg2hw_intr_enable_q_i ;
  wire [1:0] \u_gpio.intr_hw.reg2hw_intr_state_q_i ;
  wire [1:0] \u_gpio.intr_hw.reg2hw_intr_test_q_i ;
  wire \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  wire \u_gpio.intr_hw.rst_ni ;
  wire [1:0] \u_gpio.intr_hw.status ;
  wire [38:0] \u_gpio.reg2hw ;
  wire \u_gpio.rst_ni ;
  wire [108:0] \u_gpio.tl_i ;
  wire [65:0] \u_gpio.tl_o ;
  wire [14:0] \u_gpio.u_reg.addr_hit ;
  wire \u_gpio.u_reg.addrmiss ;
  wire \u_gpio.u_reg.clk_i ;
  wire [1:0] \u_gpio.u_reg.ctrl_en_input_filter_qs ;
  wire [1:0] \u_gpio.u_reg.ctrl_en_input_filter_wd ;
  wire \u_gpio.u_reg.ctrl_en_input_filter_we ;
  wire [1:0] \u_gpio.u_reg.data_in_qs ;
  wire \u_gpio.u_reg.devmode_i ;
  wire \u_gpio.u_reg.direct_oe_flds_we ;
  wire \u_gpio.u_reg.direct_oe_qe ;
  wire [1:0] \u_gpio.u_reg.direct_oe_qs ;
  wire [1:0] \u_gpio.u_reg.direct_oe_wd ;
  wire \u_gpio.u_reg.direct_oe_we ;
  wire \u_gpio.u_reg.direct_out_flds_we ;
  wire \u_gpio.u_reg.direct_out_qe ;
  wire [1:0] \u_gpio.u_reg.direct_out_qs ;
  wire [1:0] \u_gpio.u_reg.direct_out_wd ;
  wire \u_gpio.u_reg.direct_out_we ;
  wire [17:0] \u_gpio.u_reg.hw2reg ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_falling_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_falling_wd ;
  wire \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvlhigh_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvlhigh_wd ;
  wire \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvllow_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvllow_wd ;
  wire \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_rising_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_rising_wd ;
  wire \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  wire [1:0] \u_gpio.u_reg.intr_enable_qs ;
  wire [1:0] \u_gpio.u_reg.intr_enable_wd ;
  wire \u_gpio.u_reg.intr_enable_we ;
  wire [1:0] \u_gpio.u_reg.intr_state_qs ;
  wire [1:0] \u_gpio.u_reg.intr_state_wd ;
  wire \u_gpio.u_reg.intr_state_we ;
  wire \u_gpio.u_reg.intr_test_flds_we ;
  wire \u_gpio.u_reg.intr_test_qe ;
  wire [1:0] \u_gpio.u_reg.intr_test_wd ;
  wire \u_gpio.u_reg.intr_test_we ;
  wire \u_gpio.u_reg.masked_oe_lower_data_qs ;
  wire \u_gpio.u_reg.masked_oe_lower_data_wd ;
  wire [1:0] \u_gpio.u_reg.masked_oe_lower_flds_we ;
  wire \u_gpio.u_reg.masked_oe_lower_mask_qs ;
  wire \u_gpio.u_reg.masked_oe_lower_mask_wd ;
  wire \u_gpio.u_reg.masked_oe_lower_qe ;
  wire \u_gpio.u_reg.masked_oe_lower_we ;
  wire \u_gpio.u_reg.masked_oe_upper_data_qs ;
  wire \u_gpio.u_reg.masked_oe_upper_data_wd ;
  wire [1:0] \u_gpio.u_reg.masked_oe_upper_flds_we ;
  wire \u_gpio.u_reg.masked_oe_upper_mask_qs ;
  wire \u_gpio.u_reg.masked_oe_upper_mask_wd ;
  wire \u_gpio.u_reg.masked_oe_upper_qe ;
  wire \u_gpio.u_reg.masked_oe_upper_we ;
  wire \u_gpio.u_reg.masked_out_lower_data_qs ;
  wire \u_gpio.u_reg.masked_out_lower_data_wd ;
  wire [1:0] \u_gpio.u_reg.masked_out_lower_flds_we ;
  wire \u_gpio.u_reg.masked_out_lower_mask_wd ;
  wire \u_gpio.u_reg.masked_out_lower_qe ;
  wire \u_gpio.u_reg.masked_out_lower_we ;
  wire \u_gpio.u_reg.masked_out_upper_data_qs ;
  wire \u_gpio.u_reg.masked_out_upper_data_wd ;
  wire [1:0] \u_gpio.u_reg.masked_out_upper_flds_we ;
  wire \u_gpio.u_reg.masked_out_upper_mask_wd ;
  wire \u_gpio.u_reg.masked_out_upper_qe ;
  wire \u_gpio.u_reg.masked_out_upper_we ;
  wire [38:0] \u_gpio.u_reg.reg2hw ;
  wire [5:0] \u_gpio.u_reg.reg_addr ;
  wire [3:0] \u_gpio.u_reg.reg_be ;
  wire \u_gpio.u_reg.reg_busy ;
  wire \u_gpio.u_reg.reg_error ;
  wire [31:0] \u_gpio.u_reg.reg_rdata ;
  wire [31:0] \u_gpio.u_reg.reg_rdata_next ;
  wire \u_gpio.u_reg.reg_re ;
  wire [31:0] \u_gpio.u_reg.reg_wdata ;
  wire \u_gpio.u_reg.reg_we ;
  wire \u_gpio.u_reg.rst_ni ;
  wire \u_gpio.u_reg.shadow_busy ;
  wire [108:0] \u_gpio.u_reg.tl_i ;
  wire [65:0] \u_gpio.u_reg.tl_o ;
  wire [65:0] \u_gpio.u_reg.tl_o_pre ;
  wire [65:0] \u_gpio.u_reg.tl_reg_d2h ;
  wire [108:0] \u_gpio.u_reg.tl_reg_h2d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.de ;
  reg [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.qe ;
  wire [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.qs ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wd ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.we ;
  wire [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_data ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_data_in.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_data_in.d ;
  wire \u_gpio.u_reg.u_data_in.de ;
  wire [1:0] \u_gpio.u_reg.u_data_in.ds ;
  reg [1:0] \u_gpio.u_reg.u_data_in.q ;
  wire \u_gpio.u_reg.u_data_in.qe ;
  wire [1:0] \u_gpio.u_reg.u_data_in.qs ;
  wire \u_gpio.u_reg.u_data_in.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wd ;
  wire \u_gpio.u_reg.u_data_in.we ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_data ;
  wire \u_gpio.u_reg.u_data_in.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_wd ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_we ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_direct_oe.d ;
  wire [1:0] \u_gpio.u_reg.u_direct_oe.ds ;
  wire [1:0] \u_gpio.u_reg.u_direct_oe.q ;
  wire \u_gpio.u_reg.u_direct_oe.qe ;
  wire [1:0] \u_gpio.u_reg.u_direct_oe.qs ;
  wire [1:0] \u_gpio.u_reg.u_direct_oe.wd ;
  wire \u_gpio.u_reg.u_direct_oe.we ;
  wire [1:0] \u_gpio.u_reg.u_direct_out.d ;
  wire [1:0] \u_gpio.u_reg.u_direct_out.ds ;
  wire [1:0] \u_gpio.u_reg.u_direct_out.q ;
  wire \u_gpio.u_reg.u_direct_out.qe ;
  wire [1:0] \u_gpio.u_reg.u_direct_out.qs ;
  wire [1:0] \u_gpio.u_reg.u_direct_out.wd ;
  wire \u_gpio.u_reg.u_direct_out.we ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_enable.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.d ;
  wire \u_gpio.u_reg.u_intr_enable.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_enable.q ;
  wire \u_gpio.u_reg.u_intr_enable.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.qs ;
  wire \u_gpio.u_reg.u_intr_enable.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wd ;
  wire \u_gpio.u_reg.u_intr_enable.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_data ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_state.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.d ;
  wire \u_gpio.u_reg.u_intr_state.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_state.q ;
  wire \u_gpio.u_reg.u_intr_state.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.qs ;
  wire \u_gpio.u_reg.u_intr_state.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wd ;
  wire \u_gpio.u_reg.u_intr_state.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_data ;
  wire \u_gpio.u_reg.u_intr_state.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.d ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.ds ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.q ;
  wire \u_gpio.u_reg.u_intr_test.qe ;
  wire \u_gpio.u_reg.u_intr_test.qre ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.qs ;
  wire \u_gpio.u_reg.u_intr_test.re ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.wd ;
  wire \u_gpio.u_reg.u_intr_test.we ;
  wire \u_gpio.u_reg.u_masked_oe_lower_data.d ;
  wire \u_gpio.u_reg.u_masked_oe_lower_data.ds ;
  wire \u_gpio.u_reg.u_masked_oe_lower_data.q ;
  wire \u_gpio.u_reg.u_masked_oe_lower_data.qe ;
  wire \u_gpio.u_reg.u_masked_oe_lower_data.qs ;
  wire \u_gpio.u_reg.u_masked_oe_lower_data.wd ;
  wire \u_gpio.u_reg.u_masked_oe_lower_data.we ;
  wire \u_gpio.u_reg.u_masked_oe_lower_mask.d ;
  wire \u_gpio.u_reg.u_masked_oe_lower_mask.ds ;
  wire \u_gpio.u_reg.u_masked_oe_lower_mask.q ;
  wire \u_gpio.u_reg.u_masked_oe_lower_mask.qe ;
  wire \u_gpio.u_reg.u_masked_oe_lower_mask.qs ;
  wire \u_gpio.u_reg.u_masked_oe_lower_mask.wd ;
  wire \u_gpio.u_reg.u_masked_oe_lower_mask.we ;
  wire \u_gpio.u_reg.u_masked_oe_upper_data.d ;
  wire \u_gpio.u_reg.u_masked_oe_upper_data.ds ;
  wire \u_gpio.u_reg.u_masked_oe_upper_data.q ;
  wire \u_gpio.u_reg.u_masked_oe_upper_data.qe ;
  wire \u_gpio.u_reg.u_masked_oe_upper_data.qs ;
  wire \u_gpio.u_reg.u_masked_oe_upper_data.wd ;
  wire \u_gpio.u_reg.u_masked_oe_upper_data.we ;
  wire \u_gpio.u_reg.u_masked_oe_upper_mask.d ;
  wire \u_gpio.u_reg.u_masked_oe_upper_mask.ds ;
  wire \u_gpio.u_reg.u_masked_oe_upper_mask.q ;
  wire \u_gpio.u_reg.u_masked_oe_upper_mask.qe ;
  wire \u_gpio.u_reg.u_masked_oe_upper_mask.qs ;
  wire \u_gpio.u_reg.u_masked_oe_upper_mask.wd ;
  wire \u_gpio.u_reg.u_masked_oe_upper_mask.we ;
  wire \u_gpio.u_reg.u_masked_out_lower_data.d ;
  wire \u_gpio.u_reg.u_masked_out_lower_data.ds ;
  wire \u_gpio.u_reg.u_masked_out_lower_data.q ;
  wire \u_gpio.u_reg.u_masked_out_lower_data.qe ;
  wire \u_gpio.u_reg.u_masked_out_lower_data.qs ;
  wire \u_gpio.u_reg.u_masked_out_lower_data.wd ;
  wire \u_gpio.u_reg.u_masked_out_lower_data.we ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.d ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.ds ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.q ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.qe ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.qre ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.qs ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.re ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.wd ;
  wire \u_gpio.u_reg.u_masked_out_lower_mask.we ;
  wire \u_gpio.u_reg.u_masked_out_upper_data.d ;
  wire \u_gpio.u_reg.u_masked_out_upper_data.ds ;
  wire \u_gpio.u_reg.u_masked_out_upper_data.q ;
  wire \u_gpio.u_reg.u_masked_out_upper_data.qe ;
  wire \u_gpio.u_reg.u_masked_out_upper_data.qs ;
  wire \u_gpio.u_reg.u_masked_out_upper_data.wd ;
  wire \u_gpio.u_reg.u_masked_out_upper_data.we ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.d ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.ds ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.q ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.qe ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.qre ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.qs ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.re ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.wd ;
  wire \u_gpio.u_reg.u_masked_out_upper_mask.we ;
  wire \u_gpio.u_reg.u_reg_if.a_ack ;
  wire \u_gpio.u_reg.u_reg_if.addr_align_err ;
  wire [5:0] \u_gpio.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.be_o ;
  wire \u_gpio.u_reg.u_reg_if.busy_i ;
  wire \u_gpio.u_reg.u_reg_if.clk_i ;
  wire \u_gpio.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_gpio.u_reg.u_reg_if.err_internal ;
  wire \u_gpio.u_reg.u_reg_if.error ;
  wire \u_gpio.u_reg.u_reg_if.error_i ;
  reg \u_gpio.u_reg.u_reg_if.error_q ;
  wire \u_gpio.u_reg.u_reg_if.intg_error ;
  wire \u_gpio.u_reg.u_reg_if.intg_error_o ;
  reg \u_gpio.u_reg.u_reg_if.outstanding_q ;
  wire \u_gpio.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_gpio.u_reg.u_reg_if.rdata_q ;
  wire \u_gpio.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_gpio.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_gpio.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_gpio.u_reg.u_reg_if.rspop_q ;
  wire \u_gpio.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_gpio.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.tl_o_pre ;
  wire \u_gpio.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.u_err.mask ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_gpio.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_gpio.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.wdata_o ;
  wire \u_gpio.u_reg.u_reg_if.we_o ;
  wire \u_gpio.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_gpio.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_gpio.u_reg.wr_err ;
  wire \u_pwm.cio_pwm_en_o ;
  wire \u_pwm.cio_pwm_o ;
  wire \u_pwm.clk_i ;
  wire [127:0] \u_pwm.reg2hw ;
  wire \u_pwm.rst_ni ;
  wire [108:0] \u_pwm.tl_i ;
  wire [65:0] \u_pwm.tl_o ;
  wire [26:0] \u_pwm.u_pwm_core.beat_ctr_d ;
  wire \u_pwm.u_pwm_core.beat_ctr_en ;
  reg [26:0] \u_pwm.u_pwm_core.beat_ctr_q ;
  wire \u_pwm.u_pwm_core.beat_end ;
  wire \u_pwm.u_pwm_core.clk_core_i ;
  wire [26:0] \u_pwm.u_pwm_core.clk_div ;
  wire \u_pwm.u_pwm_core.clr_blink_cntr ;
  wire \u_pwm.u_pwm_core.clr_phase_cntr ;
  wire \u_pwm.u_pwm_core.cntr_en ;
  wire \u_pwm.u_pwm_core.cycle_end ;
  wire [3:0] \u_pwm.u_pwm_core.dc_resn ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_d ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_en_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_x_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_y_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_sum ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clk_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_d ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask ;
  wire [3:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_resn_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_a_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_actual ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_b_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_blink ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_htbt ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_d ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_en_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.invert_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pattern_repeat ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_ctr_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_masked ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_i ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.rst_ni ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.unused_sum ;
  wire [3:0] \u_pwm.u_pwm_core.lshift ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_d ;
  wire \u_pwm.u_pwm_core.phase_ctr_en ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_incr ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_next ;
  wire \u_pwm.u_pwm_core.phase_ctr_overflow ;
  reg [15:0] \u_pwm.u_pwm_core.phase_ctr_q ;
  wire \u_pwm.u_pwm_core.pwm_o ;
  wire [127:0] \u_pwm.u_pwm_core.reg2hw ;
  wire \u_pwm.u_pwm_core.rst_core_ni ;
  wire \u_pwm.u_reg._blink_param_gated_we ;
  wire [31:0] \u_pwm.u_reg._blink_param_qs ;
  wire \u_pwm.u_reg._blink_param_regwen ;
  wire [31:0] \u_pwm.u_reg._blink_param_wdata ;
  wire \u_pwm.u_reg._blink_param_we ;
  wire [15:0] \u_pwm.u_reg._blink_param_x_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._blink_param_y_0_qs_int ;
  wire [26:0] \u_pwm.u_reg._cfg_clk_div_qs_int ;
  wire \u_pwm.u_reg._cfg_cntr_en_qs_int ;
  wire [3:0] \u_pwm.u_reg._cfg_dc_resn_qs_int ;
  wire \u_pwm.u_reg._cfg_gated_we ;
  wire [31:0] \u_pwm.u_reg._cfg_qs ;
  wire \u_pwm.u_reg._cfg_regwen ;
  wire [31:0] \u_pwm.u_reg._cfg_wdata ;
  wire \u_pwm.u_reg._cfg_we ;
  wire [15:0] \u_pwm.u_reg._duty_cycle_a_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._duty_cycle_b_0_qs_int ;
  wire \u_pwm.u_reg._duty_cycle_gated_we ;
  wire [31:0] \u_pwm.u_reg._duty_cycle_qs ;
  wire \u_pwm.u_reg._duty_cycle_regwen ;
  wire [31:0] \u_pwm.u_reg._duty_cycle_wdata ;
  wire \u_pwm.u_reg._duty_cycle_we ;
  wire \u_pwm.u_reg._invert_gated_we ;
  wire \u_pwm.u_reg._invert_qs ;
  wire \u_pwm.u_reg._invert_qs_int ;
  wire \u_pwm.u_reg._invert_regwen ;
  wire \u_pwm.u_reg._invert_wdata ;
  wire \u_pwm.u_reg._invert_we ;
  wire \u_pwm.u_reg._pwm_en_gated_we ;
  wire \u_pwm.u_reg._pwm_en_qs ;
  wire \u_pwm.u_reg._pwm_en_qs_int ;
  wire \u_pwm.u_reg._pwm_en_regwen ;
  wire \u_pwm.u_reg._pwm_en_wdata ;
  wire \u_pwm.u_reg._pwm_en_we ;
  wire \u_pwm.u_reg._pwm_param_blink_en_0_qs_int ;
  wire \u_pwm.u_reg._pwm_param_gated_we ;
  wire \u_pwm.u_reg._pwm_param_htbt_en_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._pwm_param_phase_delay_0_qs_int ;
  wire [31:0] \u_pwm.u_reg._pwm_param_qs ;
  wire \u_pwm.u_reg._pwm_param_regwen ;
  wire [31:0] \u_pwm.u_reg._pwm_param_wdata ;
  wire \u_pwm.u_reg._pwm_param_we ;
  wire [6:0] \u_pwm.u_reg.addr_hit ;
  wire \u_pwm.u_reg.addrmiss ;
  wire \u_pwm.u_reg.blink_param_busy ;
  wire [1:0] \u_pwm.u_reg.blink_param_flds_we ;
  wire \u_pwm.u_reg.blink_param_qe ;
  wire [31:0] \u_pwm.u_reg.blink_param_qs ;
  wire \u_pwm.u_reg.blink_param_we ;
  wire \u_pwm.u_reg.cfg_busy ;
  wire [2:0] \u_pwm.u_reg.cfg_flds_we ;
  wire \u_pwm.u_reg.cfg_qe ;
  wire [31:0] \u_pwm.u_reg.cfg_qs ;
  wire \u_pwm.u_reg.cfg_we ;
  wire \u_pwm.u_reg.clk_i ;
  wire \u_pwm.u_reg.devmode_i ;
  wire \u_pwm.u_reg.duty_cycle_busy ;
  wire [1:0] \u_pwm.u_reg.duty_cycle_flds_we ;
  wire \u_pwm.u_reg.duty_cycle_qe ;
  wire [31:0] \u_pwm.u_reg.duty_cycle_qs ;
  wire \u_pwm.u_reg.duty_cycle_we ;
  wire \u_pwm.u_reg.invert_busy ;
  wire \u_pwm.u_reg.invert_flds_we ;
  wire \u_pwm.u_reg.invert_qe ;
  wire \u_pwm.u_reg.invert_qs ;
  wire \u_pwm.u_reg.invert_we ;
  wire \u_pwm.u_reg.pwm_en_busy ;
  wire \u_pwm.u_reg.pwm_en_flds_we ;
  wire \u_pwm.u_reg.pwm_en_qe ;
  wire \u_pwm.u_reg.pwm_en_qs ;
  wire \u_pwm.u_reg.pwm_en_we ;
  wire \u_pwm.u_reg.pwm_param_busy ;
  wire [2:0] \u_pwm.u_reg.pwm_param_flds_we ;
  wire \u_pwm.u_reg.pwm_param_qe ;
  wire [31:0] \u_pwm.u_reg.pwm_param_qs ;
  wire \u_pwm.u_reg.pwm_param_we ;
  wire [127:0] \u_pwm.u_reg.reg2hw ;
  wire [4:0] \u_pwm.u_reg.reg_addr ;
  wire [3:0] \u_pwm.u_reg.reg_be ;
  wire \u_pwm.u_reg.reg_busy ;
  wire \u_pwm.u_reg.reg_busy_sel ;
  wire \u_pwm.u_reg.reg_error ;
  wire [31:0] \u_pwm.u_reg.reg_rdata ;
  wire [31:0] \u_pwm.u_reg.reg_rdata_next ;
  wire \u_pwm.u_reg.reg_re ;
  wire [31:0] \u_pwm.u_reg.reg_wdata ;
  wire \u_pwm.u_reg.reg_we ;
  wire \u_pwm.u_reg.regwen_qs ;
  wire \u_pwm.u_reg.regwen_wd ;
  wire \u_pwm.u_reg.regwen_we ;
  wire \u_pwm.u_reg.rst_ni ;
  wire \u_pwm.u_reg.shadow_busy ;
  wire [108:0] \u_pwm.u_reg.tl_i ;
  wire [65:0] \u_pwm.u_reg.tl_o ;
  wire [65:0] \u_pwm.u_reg.tl_o_pre ;
  wire [65:0] \u_pwm.u_reg.tl_reg_d2h ;
  wire [108:0] \u_pwm.u_reg.tl_reg_h2d ;
  wire \u_pwm.u_reg.u_blink_param0_qe.clk_i ;
  wire \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  reg \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  wire \u_pwm.u_reg.u_blink_param0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_ack ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_blink_param_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_req ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_blink_param_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_blink_param_x_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.d ;
  wire \u_pwm.u_reg.u_blink_param_x_0.de ;
  reg [15:0] \u_pwm.u_reg.u_blink_param_x_0.q ;
  wire \u_pwm.u_reg.u_blink_param_x_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.qs ;
  wire \u_pwm.u_reg.u_blink_param_x_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wd ;
  wire \u_pwm.u_reg.u_blink_param_x_0.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_x_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_blink_param_y_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.d ;
  wire \u_pwm.u_reg.u_blink_param_y_0.de ;
  reg [15:0] \u_pwm.u_reg.u_blink_param_y_0.q ;
  wire \u_pwm.u_reg.u_blink_param_y_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.qs ;
  wire \u_pwm.u_reg.u_blink_param_y_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wd ;
  wire \u_pwm.u_reg.u_blink_param_y_0.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_y_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg0_qe.clk_i ;
  wire \u_pwm.u_reg.u_cfg0_qe.d_i ;
  reg \u_pwm.u_reg.u_cfg0_qe.q_o ;
  wire \u_pwm.u_reg.u_cfg0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_cfg_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_req ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_cfg_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_cfg_clk_div.clk_i ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.d ;
  wire \u_pwm.u_reg.u_cfg_clk_div.de ;
  reg [26:0] \u_pwm.u_reg.u_cfg_clk_div.q ;
  wire \u_pwm.u_reg.u_cfg_clk_div.qe ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.qs ;
  wire \u_pwm.u_reg.u_cfg_clk_div.rst_ni ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wd ;
  wire \u_pwm.u_reg.u_cfg_clk_div.we ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_data ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.de ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.gen_w.unused_q ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.q ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.we ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.d ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.de ;
  reg \u_pwm.u_reg.u_cfg_cntr_en.q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.qe ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.qs ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wd ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.we ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_data ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.clk_i ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.d ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.de ;
  reg [3:0] \u_pwm.u_reg.u_cfg_dc_resn.q ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.qe ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.qs ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.rst_ni ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wd ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.we ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_data ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.de ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.q ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.we ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle0_qe.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.d ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.de ;
  reg [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.qs ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.d ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.de ;
  reg [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.qs ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_ack ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_req ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_duty_cycle_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_invert.clk_i ;
  wire \u_pwm.u_reg.u_invert.d ;
  wire \u_pwm.u_reg.u_invert.de ;
  reg \u_pwm.u_reg.u_invert.q ;
  wire \u_pwm.u_reg.u_invert.qe ;
  wire \u_pwm.u_reg.u_invert.qs ;
  wire \u_pwm.u_reg.u_invert.rst_ni ;
  wire \u_pwm.u_reg.u_invert.wd ;
  wire \u_pwm.u_reg.u_invert.we ;
  wire \u_pwm.u_reg.u_invert.wr_data ;
  wire \u_pwm.u_reg.u_invert.wr_en ;
  wire \u_pwm.u_reg.u_invert.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_invert.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_invert.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_invert.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_invert.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_invert.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_invert.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_invert.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_invert0_qe.clk_i ;
  wire \u_pwm.u_reg.u_invert0_qe.d_i ;
  reg \u_pwm.u_reg.u_invert0_qe.q_o ;
  wire \u_pwm.u_reg.u_invert0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_invert_cdc.clk_src_i ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_ds_i ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_qs ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_req ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_update_i ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_invert_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_invert_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.src_ack ;
  wire \u_pwm.u_reg.u_invert_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_invert_cdc.src_busy_q ;
  reg \u_pwm.u_reg.u_invert_cdc.src_q ;
  wire \u_pwm.u_reg.u_invert_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_invert_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_invert_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_invert_cdc.src_req ;
  wire \u_pwm.u_reg.u_invert_cdc.src_update ;
  wire \u_pwm.u_reg.u_invert_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_invert_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_invert_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.clk_src_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_ds_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_qs_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_invert_cdc.unused_wd ;
  wire \u_pwm.u_reg.u_pwm_en.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en.d ;
  wire \u_pwm.u_reg.u_pwm_en.de ;
  reg \u_pwm.u_reg.u_pwm_en.q ;
  wire \u_pwm.u_reg.u_pwm_en.qe ;
  wire \u_pwm.u_reg.u_pwm_en.qs ;
  wire \u_pwm.u_reg.u_pwm_en.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en.wd ;
  wire \u_pwm.u_reg.u_pwm_en.we ;
  wire \u_pwm.u_reg.u_pwm_en.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  reg \u_pwm.u_reg.u_pwm_en0_qe.q_o ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_ds_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_qs ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_req ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_update ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_ds_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.unused_wd ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  reg \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.de ;
  reg \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.qe ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.we ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_req ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.de ;
  reg \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.qe ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.we ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.de ;
  reg [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_reg_if.a_ack ;
  wire \u_pwm.u_reg.u_reg_if.addr_align_err ;
  wire [4:0] \u_pwm.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.be_o ;
  wire \u_pwm.u_reg.u_reg_if.busy_i ;
  wire \u_pwm.u_reg.u_reg_if.clk_i ;
  wire \u_pwm.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_pwm.u_reg.u_reg_if.err_internal ;
  wire \u_pwm.u_reg.u_reg_if.error ;
  wire \u_pwm.u_reg.u_reg_if.error_i ;
  reg \u_pwm.u_reg.u_reg_if.error_q ;
  wire \u_pwm.u_reg.u_reg_if.intg_error ;
  wire \u_pwm.u_reg.u_reg_if.intg_error_o ;
  reg \u_pwm.u_reg.u_reg_if.outstanding_q ;
  wire \u_pwm.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_pwm.u_reg.u_reg_if.rdata_q ;
  wire \u_pwm.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_pwm.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_pwm.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_pwm.u_reg.u_reg_if.rspop_q ;
  wire \u_pwm.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_pwm.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.tl_o_pre ;
  wire \u_pwm.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.u_err.mask ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_full ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_get ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_pwm.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_pwm.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.wdata_o ;
  wire \u_pwm.u_reg.u_reg_if.we_o ;
  wire \u_pwm.u_reg.u_reg_if.wr_req ;
  wire \u_pwm.u_reg.u_regwen.clk_i ;
  wire \u_pwm.u_reg.u_regwen.d ;
  wire \u_pwm.u_reg.u_regwen.de ;
  reg \u_pwm.u_reg.u_regwen.q ;
  wire \u_pwm.u_reg.u_regwen.qe ;
  wire \u_pwm.u_reg.u_regwen.qs ;
  wire \u_pwm.u_reg.u_regwen.rst_ni ;
  wire \u_pwm.u_reg.u_regwen.wd ;
  wire \u_pwm.u_reg.u_regwen.we ;
  wire \u_pwm.u_reg.u_regwen.wr_data ;
  wire \u_pwm.u_reg.u_regwen.wr_en ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_en ;
  wire [65:0] \u_pwm.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_pwm.u_reg.unused__invert_wdata ;
  wire \u_pwm.u_reg.unused__pwm_en_wdata ;
  wire \u_pwm.u_reg.wr_err ;
  wire \u_rv_timer.active ;
  wire \u_rv_timer.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_core.active ;
  wire \u_rv_timer.gen_harts[0].u_core.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_core.intr ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtime ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtime_d ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtimecmp ;
  wire [11:0] \u_rv_timer.gen_harts[0].u_core.prescaler ;
  wire \u_rv_timer.gen_harts[0].u_core.rst_ni ;
  wire [7:0] \u_rv_timer.gen_harts[0].u_core.step ;
  wire \u_rv_timer.gen_harts[0].u_core.tick ;
  reg [11:0] \u_rv_timer.gen_harts[0].u_core.tick_count ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_d_o ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_de_o ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_enable_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_state_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.rst_ni ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.status ;
  wire [67:0] \u_rv_timer.hw2reg ;
  wire \u_rv_timer.intr_timer_en ;
  wire \u_rv_timer.intr_timer_set ;
  wire \u_rv_timer.intr_timer_state_d ;
  wire \u_rv_timer.intr_timer_state_de ;
  wire \u_rv_timer.intr_timer_state_q ;
  wire \u_rv_timer.intr_timer_test_q ;
  wire \u_rv_timer.intr_timer_test_qe ;
  wire [63:0] \u_rv_timer.mtime ;
  wire [63:0] \u_rv_timer.mtime_d ;
  wire [63:0] \u_rv_timer.mtimecmp ;
  wire \u_rv_timer.mtimecmp_update ;
  wire [11:0] \u_rv_timer.prescaler ;
  wire [154:0] \u_rv_timer.reg2hw ;
  wire \u_rv_timer.rst_ni ;
  wire [7:0] \u_rv_timer.step ;
  wire \u_rv_timer.tick ;
  wire [108:0] \u_rv_timer.tl_i ;
  wire [65:0] \u_rv_timer.tl_o ;
  wire [8:0] \u_rv_timer.u_reg.addr_hit ;
  wire \u_rv_timer.u_reg.addrmiss ;
  wire [11:0] \u_rv_timer.u_reg.cfg0_prescale_qs ;
  wire [11:0] \u_rv_timer.u_reg.cfg0_prescale_wd ;
  wire [7:0] \u_rv_timer.u_reg.cfg0_step_qs ;
  wire [7:0] \u_rv_timer.u_reg.cfg0_step_wd ;
  wire \u_rv_timer.u_reg.cfg0_we ;
  wire \u_rv_timer.u_reg.clk_i ;
  wire \u_rv_timer.u_reg.compare_lower0_0_flds_we ;
  wire \u_rv_timer.u_reg.compare_lower0_0_qe ;
  wire [31:0] \u_rv_timer.u_reg.compare_lower0_0_qs ;
  wire [31:0] \u_rv_timer.u_reg.compare_lower0_0_wd ;
  wire \u_rv_timer.u_reg.compare_lower0_0_we ;
  wire \u_rv_timer.u_reg.compare_upper0_0_flds_we ;
  wire \u_rv_timer.u_reg.compare_upper0_0_qe ;
  wire [31:0] \u_rv_timer.u_reg.compare_upper0_0_qs ;
  wire [31:0] \u_rv_timer.u_reg.compare_upper0_0_wd ;
  wire \u_rv_timer.u_reg.compare_upper0_0_we ;
  wire \u_rv_timer.u_reg.ctrl_qs ;
  wire \u_rv_timer.u_reg.ctrl_wd ;
  wire \u_rv_timer.u_reg.ctrl_we ;
  wire \u_rv_timer.u_reg.devmode_i ;
  wire [67:0] \u_rv_timer.u_reg.hw2reg ;
  wire \u_rv_timer.u_reg.intr_enable0_qs ;
  wire \u_rv_timer.u_reg.intr_enable0_wd ;
  wire \u_rv_timer.u_reg.intr_enable0_we ;
  wire \u_rv_timer.u_reg.intr_state0_qs ;
  wire \u_rv_timer.u_reg.intr_state0_wd ;
  wire \u_rv_timer.u_reg.intr_state0_we ;
  wire \u_rv_timer.u_reg.intr_test0_flds_we ;
  wire \u_rv_timer.u_reg.intr_test0_qe ;
  wire \u_rv_timer.u_reg.intr_test0_wd ;
  wire \u_rv_timer.u_reg.intr_test0_we ;
  wire [154:0] \u_rv_timer.u_reg.reg2hw ;
  wire [8:0] \u_rv_timer.u_reg.reg_addr ;
  wire [3:0] \u_rv_timer.u_reg.reg_be ;
  wire \u_rv_timer.u_reg.reg_busy ;
  wire \u_rv_timer.u_reg.reg_error ;
  wire [31:0] \u_rv_timer.u_reg.reg_rdata ;
  wire [31:0] \u_rv_timer.u_reg.reg_rdata_next ;
  wire \u_rv_timer.u_reg.reg_re ;
  wire [31:0] \u_rv_timer.u_reg.reg_wdata ;
  wire \u_rv_timer.u_reg.reg_we ;
  wire \u_rv_timer.u_reg.rst_ni ;
  wire \u_rv_timer.u_reg.shadow_busy ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_lower0_qs ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_lower0_wd ;
  wire \u_rv_timer.u_reg.timer_v_lower0_we ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_upper0_qs ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_upper0_wd ;
  wire \u_rv_timer.u_reg.timer_v_upper0_we ;
  wire [108:0] \u_rv_timer.u_reg.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.tl_o ;
  wire [65:0] \u_rv_timer.u_reg.tl_o_pre ;
  wire [65:0] \u_rv_timer.u_reg.tl_reg_d2h ;
  wire [108:0] \u_rv_timer.u_reg.tl_reg_h2d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.clk_i ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.de ;
  reg [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.qe ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.qs ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.rst_ni ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.we ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.de ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.gen_w.unused_q ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.q ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.we ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_cfg0_step.clk_i ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.d ;
  wire \u_rv_timer.u_reg.u_cfg0_step.de ;
  reg [7:0] \u_rv_timer.u_reg.u_cfg0_step.q ;
  wire \u_rv_timer.u_reg.u_cfg0_step.qe ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.qs ;
  wire \u_rv_timer.u_reg.u_cfg0_step.rst_ni ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_step.we ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.de ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.gen_w.unused_q ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.q ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.we ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.d ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.qs ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wd ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.clk_i ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  reg \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.rst_ni ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.d ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.qs ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wd ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.clk_i ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  reg \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.rst_ni ;
  wire \u_rv_timer.u_reg.u_ctrl.clk_i ;
  wire \u_rv_timer.u_reg.u_ctrl.d ;
  wire \u_rv_timer.u_reg.u_ctrl.de ;
  reg \u_rv_timer.u_reg.u_ctrl.q ;
  wire \u_rv_timer.u_reg.u_ctrl.qe ;
  wire \u_rv_timer.u_reg.u_ctrl.qs ;
  wire \u_rv_timer.u_reg.u_ctrl.rst_ni ;
  wire \u_rv_timer.u_reg.u_ctrl.wd ;
  wire \u_rv_timer.u_reg.u_ctrl.we ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_data ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.gen_w.unused_q ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_enable0.clk_i ;
  wire \u_rv_timer.u_reg.u_intr_enable0.d ;
  wire \u_rv_timer.u_reg.u_intr_enable0.de ;
  reg \u_rv_timer.u_reg.u_intr_enable0.q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.qe ;
  wire \u_rv_timer.u_reg.u_intr_enable0.qs ;
  wire \u_rv_timer.u_reg.u_intr_enable0.rst_ni ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wd ;
  wire \u_rv_timer.u_reg.u_intr_enable0.we ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_state0.clk_i ;
  wire \u_rv_timer.u_reg.u_intr_state0.d ;
  wire \u_rv_timer.u_reg.u_intr_state0.de ;
  reg \u_rv_timer.u_reg.u_intr_state0.q ;
  wire \u_rv_timer.u_reg.u_intr_state0.qe ;
  wire \u_rv_timer.u_reg.u_intr_state0.qs ;
  wire \u_rv_timer.u_reg.u_intr_state0.rst_ni ;
  wire \u_rv_timer.u_reg.u_intr_state0.wd ;
  wire \u_rv_timer.u_reg.u_intr_state0.we ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_test0.d ;
  wire \u_rv_timer.u_reg.u_intr_test0.ds ;
  wire \u_rv_timer.u_reg.u_intr_test0.q ;
  wire \u_rv_timer.u_reg.u_intr_test0.qe ;
  wire \u_rv_timer.u_reg.u_intr_test0.qre ;
  wire \u_rv_timer.u_reg.u_intr_test0.qs ;
  wire \u_rv_timer.u_reg.u_intr_test0.re ;
  wire \u_rv_timer.u_reg.u_intr_test0.wd ;
  wire \u_rv_timer.u_reg.u_intr_test0.we ;
  wire \u_rv_timer.u_reg.u_reg_if.a_ack ;
  wire \u_rv_timer.u_reg.u_reg_if.addr_align_err ;
  wire [8:0] \u_rv_timer.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.be_o ;
  wire \u_rv_timer.u_reg.u_reg_if.busy_i ;
  wire \u_rv_timer.u_reg.u_reg_if.clk_i ;
  wire \u_rv_timer.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_rv_timer.u_reg.u_reg_if.err_internal ;
  wire \u_rv_timer.u_reg.u_reg_if.error ;
  wire \u_rv_timer.u_reg.u_reg_if.error_i ;
  reg \u_rv_timer.u_reg.u_reg_if.error_q ;
  wire \u_rv_timer.u_reg.u_reg_if.intg_error ;
  wire \u_rv_timer.u_reg.u_reg_if.intg_error_o ;
  reg \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  wire \u_rv_timer.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_rv_timer.u_reg.u_reg_if.rdata_q ;
  wire \u_rv_timer.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_rv_timer.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_rv_timer.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_rv_timer.u_reg.u_reg_if.rspop_q ;
  wire \u_rv_timer.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_rv_timer.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.tl_o_pre ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.u_err.mask ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_full ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_get ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_rv_timer.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.wdata_o ;
  wire \u_rv_timer.u_reg.u_reg_if.we_o ;
  wire \u_rv_timer.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_rv_timer.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.d ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.qs ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.d ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.qs ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.wr_err ;
  wire [31:0] \u_uart.addr_o ;
  wire [3:0] \u_uart.be_o ;
  wire \u_uart.cio_rx_i ;
  wire \u_uart.cio_tx_en_o ;
  wire \u_uart.cio_tx_o ;
  wire \u_uart.clk_i ;
  wire \u_uart.core_tx ;
  wire \u_uart.err_i ;
  wire \u_uart.gnt_i ;
  wire [29:0] \u_uart.hw2reg ;
  wire [31:0] \u_uart.rdata_i ;
  wire [56:0] \u_uart.reg2hw ;
  wire \u_uart.req_o ;
  wire \u_uart.rst_ni ;
  wire [7:0] \u_uart.rx_data_o ;
  wire \u_uart.rx_pop_i ;
  wire \u_uart.rx_valid_o ;
  wire [108:0] \u_uart.tl_i ;
  wire [65:0] \u_uart.tl_o ;
  wire [31:0] \u_uart.u_bridge.addr_o ;
  reg [31:0] \u_uart.u_bridge.addr_q ;
  wire [3:0] \u_uart.u_bridge.be_d ;
  wire [3:0] \u_uart.u_bridge.be_o ;
  reg [3:0] \u_uart.u_bridge.be_q ;
  reg [7:0] \u_uart.u_bridge.bebyte_q ;
  wire \u_uart.u_bridge.clk_i ;
  wire \u_uart.u_bridge.err_i ;
  wire \u_uart.u_bridge.gnt_i ;
  wire [1:0] \u_uart.u_bridge.idx_d ;
  reg [1:0] \u_uart.u_bridge.idx_q ;
  reg [7:0] \u_uart.u_bridge.op_q ;
  wire [31:0] \u_uart.u_bridge.rdata_i ;
  wire \u_uart.u_bridge.req_d ;
  wire \u_uart.u_bridge.req_o ;
  reg \u_uart.u_bridge.req_q ;
  wire \u_uart.u_bridge.rst_ni ;
  wire [7:0] \u_uart.u_bridge.rx_data_i ;
  wire \u_uart.u_bridge.rx_pop_o ;
  wire \u_uart.u_bridge.rx_valid_i ;
  wire [2:0] \u_uart.u_bridge.rxf_st_d ;
  reg [2:0] \u_uart.u_bridge.rxf_st_q ;
  wire [31:0] \u_uart.u_bridge.sh_d ;
  reg [31:0] \u_uart.u_bridge.sh_q ;
  wire \u_uart.u_bridge.valid_i ;
  wire [31:0] \u_uart.u_bridge.wdata_d ;
  wire [31:0] \u_uart.u_bridge.wdata_o ;
  reg [31:0] \u_uart.u_bridge.wdata_q ;
  wire \u_uart.u_bridge.we_d ;
  wire \u_uart.u_bridge.we_o ;
  reg \u_uart.u_bridge.we_q ;
  wire [5:0] \u_uart.u_reg.addr_hit ;
  wire \u_uart.u_reg.addrmiss ;
  wire \u_uart.u_reg.clk_i ;
  wire \u_uart.u_reg.ctrl_llpbk_qs ;
  wire \u_uart.u_reg.ctrl_llpbk_wd ;
  wire [15:0] \u_uart.u_reg.ctrl_nco_qs ;
  wire [15:0] \u_uart.u_reg.ctrl_nco_wd ;
  wire \u_uart.u_reg.ctrl_nf_qs ;
  wire \u_uart.u_reg.ctrl_nf_wd ;
  wire \u_uart.u_reg.ctrl_parity_en_qs ;
  wire \u_uart.u_reg.ctrl_parity_en_wd ;
  wire \u_uart.u_reg.ctrl_parity_odd_qs ;
  wire \u_uart.u_reg.ctrl_parity_odd_wd ;
  wire \u_uart.u_reg.ctrl_rx_qs ;
  wire \u_uart.u_reg.ctrl_rx_wd ;
  wire \u_uart.u_reg.ctrl_slpbk_qs ;
  wire \u_uart.u_reg.ctrl_slpbk_wd ;
  wire \u_uart.u_reg.ctrl_tx_qs ;
  wire \u_uart.u_reg.ctrl_tx_wd ;
  wire \u_uart.u_reg.ctrl_we ;
  wire \u_uart.u_reg.devmode_i ;
  wire [1:0] \u_uart.u_reg.fifo_ctrl_flds_we ;
  wire \u_uart.u_reg.fifo_ctrl_qe ;
  wire \u_uart.u_reg.fifo_ctrl_rxrst_wd ;
  wire \u_uart.u_reg.fifo_ctrl_txrst_wd ;
  wire \u_uart.u_reg.fifo_ctrl_we ;
  wire [7:0] \u_uart.u_reg.fifo_status_rxlvl_qs ;
  wire [7:0] \u_uart.u_reg.fifo_status_txlvl_qs ;
  wire [29:0] \u_uart.u_reg.hw2reg ;
  wire [7:0] \u_uart.u_reg.rdata_qs ;
  wire \u_uart.u_reg.rdata_re ;
  wire [56:0] \u_uart.u_reg.reg2hw ;
  wire [4:0] \u_uart.u_reg.reg_addr ;
  wire [3:0] \u_uart.u_reg.reg_be ;
  wire \u_uart.u_reg.reg_busy ;
  wire \u_uart.u_reg.reg_error ;
  wire [31:0] \u_uart.u_reg.reg_rdata ;
  wire [31:0] \u_uart.u_reg.reg_rdata_next ;
  wire \u_uart.u_reg.reg_re ;
  wire [31:0] \u_uart.u_reg.reg_wdata ;
  wire \u_uart.u_reg.reg_we ;
  wire \u_uart.u_reg.rst_ni ;
  wire \u_uart.u_reg.shadow_busy ;
  wire \u_uart.u_reg.status_re ;
  wire \u_uart.u_reg.status_rxempty_qs ;
  wire \u_uart.u_reg.status_rxfull_qs ;
  wire \u_uart.u_reg.status_rxidle_qs ;
  wire \u_uart.u_reg.status_txempty_qs ;
  wire \u_uart.u_reg.status_txfull_qs ;
  wire \u_uart.u_reg.status_txidle_qs ;
  wire [108:0] \u_uart.u_reg.tl_i ;
  wire [65:0] \u_uart.u_reg.tl_o ;
  wire [65:0] \u_uart.u_reg.tl_o_pre ;
  wire [65:0] \u_uart.u_reg.tl_reg_d2h ;
  wire [108:0] \u_uart.u_reg.tl_reg_h2d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.clk_i ;
  wire \u_uart.u_reg.u_ctrl_llpbk.d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.de ;
  reg \u_uart.u_reg.u_ctrl_llpbk.q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.qe ;
  wire \u_uart.u_reg.u_ctrl_llpbk.qs ;
  wire \u_uart.u_reg.u_ctrl_llpbk.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wd ;
  wire \u_uart.u_reg.u_ctrl_llpbk.we ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_data ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nco.clk_i ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.d ;
  wire \u_uart.u_reg.u_ctrl_nco.de ;
  reg [15:0] \u_uart.u_reg.u_ctrl_nco.q ;
  wire \u_uart.u_reg.u_ctrl_nco.qe ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.qs ;
  wire \u_uart.u_reg.u_ctrl_nco.rst_ni ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wd ;
  wire \u_uart.u_reg.u_ctrl_nco.we ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.de ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.q ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.we ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nf.clk_i ;
  wire \u_uart.u_reg.u_ctrl_nf.d ;
  wire \u_uart.u_reg.u_ctrl_nf.de ;
  reg \u_uart.u_reg.u_ctrl_nf.q ;
  wire \u_uart.u_reg.u_ctrl_nf.qe ;
  wire \u_uart.u_reg.u_ctrl_nf.qs ;
  wire \u_uart.u_reg.u_ctrl_nf.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_nf.wd ;
  wire \u_uart.u_reg.u_ctrl_nf.we ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_en.clk_i ;
  wire \u_uart.u_reg.u_ctrl_parity_en.d ;
  wire \u_uart.u_reg.u_ctrl_parity_en.de ;
  reg \u_uart.u_reg.u_ctrl_parity_en.q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.qe ;
  wire \u_uart.u_reg.u_ctrl_parity_en.qs ;
  wire \u_uart.u_reg.u_ctrl_parity_en.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_en.we ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.clk_i ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.d ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.de ;
  reg \u_uart.u_reg.u_ctrl_parity_odd.q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.qe ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.qs ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.we ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_rx.clk_i ;
  wire \u_uart.u_reg.u_ctrl_rx.d ;
  wire \u_uart.u_reg.u_ctrl_rx.de ;
  reg \u_uart.u_reg.u_ctrl_rx.q ;
  wire \u_uart.u_reg.u_ctrl_rx.qe ;
  wire \u_uart.u_reg.u_ctrl_rx.qs ;
  wire \u_uart.u_reg.u_ctrl_rx.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_rx.wd ;
  wire \u_uart.u_reg.u_ctrl_rx.we ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_slpbk.clk_i ;
  wire \u_uart.u_reg.u_ctrl_slpbk.d ;
  wire \u_uart.u_reg.u_ctrl_slpbk.de ;
  reg \u_uart.u_reg.u_ctrl_slpbk.q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.qe ;
  wire \u_uart.u_reg.u_ctrl_slpbk.qs ;
  wire \u_uart.u_reg.u_ctrl_slpbk.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wd ;
  wire \u_uart.u_reg.u_ctrl_slpbk.we ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_data ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_tx.clk_i ;
  wire \u_uart.u_reg.u_ctrl_tx.d ;
  wire \u_uart.u_reg.u_ctrl_tx.de ;
  reg \u_uart.u_reg.u_ctrl_tx.q ;
  wire \u_uart.u_reg.u_ctrl_tx.qe ;
  wire \u_uart.u_reg.u_ctrl_tx.qs ;
  wire \u_uart.u_reg.u_ctrl_tx.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_tx.wd ;
  wire \u_uart.u_reg.u_ctrl_tx.we ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_data ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  reg \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.de ;
  reg \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.qe ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.de ;
  reg \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.qe ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_en ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.d ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.ds ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.q ;
  wire \u_uart.u_reg.u_fifo_status_rxlvl.qe ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.qs ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.wd ;
  wire \u_uart.u_reg.u_fifo_status_rxlvl.we ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.d ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.ds ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.q ;
  wire \u_uart.u_reg.u_fifo_status_txlvl.qe ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.qs ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.wd ;
  wire \u_uart.u_reg.u_fifo_status_txlvl.we ;
  wire [7:0] \u_uart.u_reg.u_rdata.d ;
  wire [7:0] \u_uart.u_reg.u_rdata.ds ;
  wire [7:0] \u_uart.u_reg.u_rdata.q ;
  wire \u_uart.u_reg.u_rdata.qe ;
  wire \u_uart.u_reg.u_rdata.qre ;
  wire [7:0] \u_uart.u_reg.u_rdata.qs ;
  wire \u_uart.u_reg.u_rdata.re ;
  wire [7:0] \u_uart.u_reg.u_rdata.wd ;
  wire \u_uart.u_reg.u_rdata.we ;
  wire \u_uart.u_reg.u_reg_if.a_ack ;
  wire \u_uart.u_reg.u_reg_if.addr_align_err ;
  wire [4:0] \u_uart.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_uart.u_reg.u_reg_if.be_o ;
  wire \u_uart.u_reg.u_reg_if.busy_i ;
  wire \u_uart.u_reg.u_reg_if.clk_i ;
  wire \u_uart.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_uart.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_uart.u_reg.u_reg_if.err_internal ;
  wire \u_uart.u_reg.u_reg_if.error ;
  wire \u_uart.u_reg.u_reg_if.error_i ;
  reg \u_uart.u_reg.u_reg_if.error_q ;
  wire \u_uart.u_reg.u_reg_if.intg_error ;
  wire \u_uart.u_reg.u_reg_if.intg_error_o ;
  reg \u_uart.u_reg.u_reg_if.outstanding_q ;
  wire \u_uart.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_uart.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_uart.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_uart.u_reg.u_reg_if.rdata_q ;
  wire \u_uart.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_uart.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_uart.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_uart.u_reg.u_reg_if.rspop_q ;
  wire \u_uart.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_uart.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_uart.u_reg.u_reg_if.tl_o_pre ;
  wire \u_uart.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_uart.u_reg.u_reg_if.u_err.mask ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_full ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_get ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_uart.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_uart.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_uart.u_reg.u_reg_if.wdata_o ;
  wire \u_uart.u_reg.u_reg_if.we_o ;
  wire \u_uart.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_uart.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_uart.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_uart.u_reg.u_status_rxempty.d ;
  wire \u_uart.u_reg.u_status_rxempty.ds ;
  wire \u_uart.u_reg.u_status_rxempty.q ;
  wire \u_uart.u_reg.u_status_rxempty.qe ;
  wire \u_uart.u_reg.u_status_rxempty.qre ;
  wire \u_uart.u_reg.u_status_rxempty.qs ;
  wire \u_uart.u_reg.u_status_rxempty.re ;
  wire \u_uart.u_reg.u_status_rxempty.wd ;
  wire \u_uart.u_reg.u_status_rxempty.we ;
  wire \u_uart.u_reg.u_status_rxfull.d ;
  wire \u_uart.u_reg.u_status_rxfull.ds ;
  wire \u_uart.u_reg.u_status_rxfull.q ;
  wire \u_uart.u_reg.u_status_rxfull.qe ;
  wire \u_uart.u_reg.u_status_rxfull.qre ;
  wire \u_uart.u_reg.u_status_rxfull.qs ;
  wire \u_uart.u_reg.u_status_rxfull.re ;
  wire \u_uart.u_reg.u_status_rxfull.wd ;
  wire \u_uart.u_reg.u_status_rxfull.we ;
  wire \u_uart.u_reg.u_status_rxidle.d ;
  wire \u_uart.u_reg.u_status_rxidle.ds ;
  wire \u_uart.u_reg.u_status_rxidle.q ;
  wire \u_uart.u_reg.u_status_rxidle.qe ;
  wire \u_uart.u_reg.u_status_rxidle.qre ;
  wire \u_uart.u_reg.u_status_rxidle.qs ;
  wire \u_uart.u_reg.u_status_rxidle.re ;
  wire \u_uart.u_reg.u_status_rxidle.wd ;
  wire \u_uart.u_reg.u_status_rxidle.we ;
  wire \u_uart.u_reg.u_status_txempty.d ;
  wire \u_uart.u_reg.u_status_txempty.ds ;
  wire \u_uart.u_reg.u_status_txempty.q ;
  wire \u_uart.u_reg.u_status_txempty.qe ;
  wire \u_uart.u_reg.u_status_txempty.qre ;
  wire \u_uart.u_reg.u_status_txempty.qs ;
  wire \u_uart.u_reg.u_status_txempty.re ;
  wire \u_uart.u_reg.u_status_txempty.wd ;
  wire \u_uart.u_reg.u_status_txempty.we ;
  wire \u_uart.u_reg.u_status_txfull.d ;
  wire \u_uart.u_reg.u_status_txfull.ds ;
  wire \u_uart.u_reg.u_status_txfull.q ;
  wire \u_uart.u_reg.u_status_txfull.qe ;
  wire \u_uart.u_reg.u_status_txfull.qre ;
  wire \u_uart.u_reg.u_status_txfull.qs ;
  wire \u_uart.u_reg.u_status_txfull.re ;
  wire \u_uart.u_reg.u_status_txfull.wd ;
  wire \u_uart.u_reg.u_status_txfull.we ;
  wire \u_uart.u_reg.u_status_txidle.d ;
  wire \u_uart.u_reg.u_status_txidle.ds ;
  wire \u_uart.u_reg.u_status_txidle.q ;
  wire \u_uart.u_reg.u_status_txidle.qe ;
  wire \u_uart.u_reg.u_status_txidle.qre ;
  wire \u_uart.u_reg.u_status_txidle.qs ;
  wire \u_uart.u_reg.u_status_txidle.re ;
  wire \u_uart.u_reg.u_status_txidle.wd ;
  wire \u_uart.u_reg.u_status_txidle.we ;
  wire \u_uart.u_reg.u_wdata.clk_i ;
  wire [7:0] \u_uart.u_reg.u_wdata.d ;
  wire \u_uart.u_reg.u_wdata.de ;
  reg [7:0] \u_uart.u_reg.u_wdata.q ;
  wire \u_uart.u_reg.u_wdata.qe ;
  wire [7:0] \u_uart.u_reg.u_wdata.qs ;
  wire \u_uart.u_reg.u_wdata.rst_ni ;
  wire [7:0] \u_uart.u_reg.u_wdata.wd ;
  wire \u_uart.u_reg.u_wdata.we ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_data ;
  wire \u_uart.u_reg.u_wdata.wr_en ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.de ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.gen_w.unused_q ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.q ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.we ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_wdata0_qe.clk_i ;
  wire \u_uart.u_reg.u_wdata0_qe.d_i ;
  reg \u_uart.u_reg.u_wdata0_qe.q_o ;
  wire \u_uart.u_reg.u_wdata0_qe.rst_ni ;
  wire \u_uart.u_reg.wdata_flds_we ;
  wire \u_uart.u_reg.wdata_qe ;
  wire [7:0] \u_uart.u_reg.wdata_wd ;
  wire \u_uart.u_reg.wdata_we ;
  wire \u_uart.u_reg.wr_err ;
  wire \u_uart.u_uart_core.clk_i ;
  wire \u_uart.u_uart_core.event_rx_frame_err ;
  wire \u_uart.u_uart_core.event_rx_parity_err ;
  wire [29:0] \u_uart.u_uart_core.hw2reg ;
  wire \u_uart.u_uart_core.line_loopback ;
  reg [16:0] \u_uart.u_uart_core.nco_sum_q ;
  wire [56:0] \u_uart.u_uart_core.reg2hw ;
  wire \u_uart.u_uart_core.rst_ni ;
  wire \u_uart.u_uart_core.rx ;
  wire [7:0] \u_uart.u_uart_core.rx_data_o ;
  wire \u_uart.u_uart_core.rx_enable ;
  wire [7:0] \u_uart.u_uart_core.rx_fifo_data ;
  wire [4:0] \u_uart.u_uart_core.rx_fifo_depth ;
  wire \u_uart.u_uart_core.rx_fifo_pop ;
  wire \u_uart.u_uart_core.rx_fifo_rvalid ;
  wire \u_uart.u_uart_core.rx_fifo_wready ;
  wire \u_uart.u_uart_core.rx_fifo_wvalid ;
  wire \u_uart.u_uart_core.rx_in ;
  wire \u_uart.u_uart_core.rx_in_maj ;
  wire \u_uart.u_uart_core.rx_in_mx ;
  wire \u_uart.u_uart_core.rx_pop_i ;
  wire \u_uart.u_uart_core.rx_sync ;
  reg \u_uart.u_uart_core.rx_sync_q1 ;
  reg \u_uart.u_uart_core.rx_sync_q2 ;
  wire \u_uart.u_uart_core.rx_tick_baud ;
  wire \u_uart.u_uart_core.rx_uart_idle ;
  wire \u_uart.u_uart_core.rx_valid ;
  wire \u_uart.u_uart_core.rx_valid_o ;
  wire \u_uart.u_uart_core.rxnf_enable ;
  wire \u_uart.u_uart_core.sync_rx.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.d_i ;
  wire \u_uart.u_uart_core.sync_rx.d_o ;
  wire \u_uart.u_uart_core.sync_rx.intq ;
  wire \u_uart.u_uart_core.sync_rx.q_o ;
  wire \u_uart.u_uart_core.sync_rx.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.d_i ;
  reg \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.d_i ;
  reg \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.unused_sig ;
  wire \u_uart.u_uart_core.sys_loopback ;
  wire \u_uart.u_uart_core.tick_baud_x16 ;
  wire \u_uart.u_uart_core.tx ;
  wire \u_uart.u_uart_core.tx_enable ;
  wire [7:0] \u_uart.u_uart_core.tx_fifo_data ;
  wire [3:0] \u_uart.u_uart_core.tx_fifo_depth ;
  wire \u_uart.u_uart_core.tx_fifo_rready ;
  wire \u_uart.u_uart_core.tx_fifo_rvalid ;
  wire \u_uart.u_uart_core.tx_fifo_wready ;
  wire \u_uart.u_uart_core.tx_out ;
  reg \u_uart.u_uart_core.tx_out_q ;
  wire \u_uart.u_uart_core.tx_uart_idle ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.clk_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.depth_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.err_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_empty ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_wptr ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_wptr ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  reg [127:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage_rdata ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clk_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clr_i ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.depth_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.empty_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.err_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.full_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_o ;
  reg [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rst_ni ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_o ;
  reg [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt ;
  reg \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.rdata_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rst_ni ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rvalid_o ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.wready_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.clk_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.depth_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.err_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_empty ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_rptr ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_rptr ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  reg [63:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage_rdata ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clk_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clr_i ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.depth_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.empty_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.err_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.full_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_o ;
  reg [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rst_ni ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_o ;
  reg [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt ;
  reg \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.rdata_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rst_ni ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rvalid_o ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.wdata_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.wready_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.wvalid_i ;
  wire \u_uart.u_uart_core.uart_fifo_rxrst ;
  wire \u_uart.u_uart_core.uart_fifo_txrst ;
  wire [7:0] \u_uart.u_uart_core.uart_rdata ;
  wire [3:0] \u_uart.u_uart_core.uart_rx.baud_div_d ;
  reg [3:0] \u_uart.u_uart_core.uart_rx.baud_div_q ;
  wire [3:0] \u_uart.u_uart_core.uart_rx.bit_cnt_d ;
  reg [3:0] \u_uart.u_uart_core.uart_rx.bit_cnt_q ;
  wire \u_uart.u_uart_core.uart_rx.clk_i ;
  wire \u_uart.u_uart_core.uart_rx.frame_err ;
  wire \u_uart.u_uart_core.uart_rx.idle ;
  wire \u_uart.u_uart_core.uart_rx.idle_d ;
  reg \u_uart.u_uart_core.uart_rx.idle_q ;
  wire \u_uart.u_uart_core.uart_rx.parity_enable ;
  wire \u_uart.u_uart_core.uart_rx.parity_odd ;
  wire \u_uart.u_uart_core.uart_rx.rst_ni ;
  wire \u_uart.u_uart_core.uart_rx.rx ;
  wire [7:0] \u_uart.u_uart_core.uart_rx.rx_data ;
  wire \u_uart.u_uart_core.uart_rx.rx_enable ;
  wire \u_uart.u_uart_core.uart_rx.rx_parity_err ;
  wire \u_uart.u_uart_core.uart_rx.rx_valid ;
  reg \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  wire [10:0] \u_uart.u_uart_core.uart_rx.sreg_d ;
  reg [10:0] \u_uart.u_uart_core.uart_rx.sreg_q ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud_d ;
  reg \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud_x16 ;
  reg [3:0] \u_uart.u_uart_core.uart_tx.baud_div_q ;
  wire [3:0] \u_uart.u_uart_core.uart_tx.bit_cnt_d ;
  reg [3:0] \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  wire \u_uart.u_uart_core.uart_tx.clk_i ;
  wire \u_uart.u_uart_core.uart_tx.idle ;
  wire \u_uart.u_uart_core.uart_tx.parity_enable ;
  wire \u_uart.u_uart_core.uart_tx.rst_ni ;
  wire [10:0] \u_uart.u_uart_core.uart_tx.sreg_d ;
  reg [10:0] \u_uart.u_uart_core.uart_tx.sreg_q ;
  reg \u_uart.u_uart_core.uart_tx.tick_baud_q ;
  wire \u_uart.u_uart_core.uart_tx.tick_baud_x16 ;
  wire \u_uart.u_uart_core.uart_tx.tx ;
  wire \u_uart.u_uart_core.uart_tx.tx_d ;
  wire \u_uart.u_uart_core.uart_tx.tx_enable ;
  reg \u_uart.u_uart_core.uart_tx.tx_q ;
  wire \u_uart.u_uart_core.uart_tx.wr ;
  wire [7:0] \u_uart.u_uart_core.uart_tx.wr_data ;
  wire \u_uart.u_uart_core.uart_tx.wr_parity ;
  wire \u_uart.valid_i ;
  wire [31:0] \u_uart.wdata_o ;
  wire \u_uart.we_o ;
  wire [31:0] uart_addr;
  wire [3:0] uart_be;
  wire uart_err;
  wire uart_gnt;
  wire [31:0] \uart_host_adapter.addr_i ;
  wire [3:0] \uart_host_adapter.be_i ;
  wire \uart_host_adapter.clk_i ;
  wire \uart_host_adapter.err_o ;
  reg \uart_host_adapter.g_multiple_reqs.source_q ;
  wire \uart_host_adapter.gnt_o ;
  wire [3:0] \uart_host_adapter.instr_type_i ;
  wire \uart_host_adapter.intg_err ;
  wire \uart_host_adapter.intg_err_o ;
  wire \uart_host_adapter.intg_err_q ;
  wire [6:0] \uart_host_adapter.rdata_intg_o ;
  wire [31:0] \uart_host_adapter.rdata_o ;
  wire \uart_host_adapter.req_i ;
  wire \uart_host_adapter.rst_ni ;
  wire [3:0] \uart_host_adapter.tl_be ;
  wire [65:0] \uart_host_adapter.tl_i ;
  wire [108:0] \uart_host_adapter.tl_o ;
  wire [108:0] \uart_host_adapter.tl_out ;
  wire [7:0] \uart_host_adapter.tl_source ;
  wire [6:0] \uart_host_adapter.u_cmd_intg_gen.cmd_intg ;
  wire [31:0] \uart_host_adapter.u_cmd_intg_gen.data_final ;
  wire [6:0] \uart_host_adapter.u_cmd_intg_gen.data_intg ;
  wire [108:0] \uart_host_adapter.u_cmd_intg_gen.tl_i ;
  wire [108:0] \uart_host_adapter.u_cmd_intg_gen.tl_o ;
  wire \uart_host_adapter.unused_addr_bottom_bits ;
  wire \uart_host_adapter.valid_o ;
  wire [31:0] \uart_host_adapter.wdata_i ;
  wire [6:0] \uart_host_adapter.wdata_intg_i ;
  wire \uart_host_adapter.we_i ;
  wire [31:0] uart_rdata;
  wire uart_req;
  wire uart_rvalid;
  wire [31:0] uart_wdata;
  wire uart_we;
  wire \xbar.clk_i ;
  wire [2:0] \xbar.dev_sel_s1n_6 ;
  wire \xbar.rst_ni ;
  wire [3:0] \xbar.scanmode_i ;
  wire [65:0] \xbar.tl_gpio_i ;
  wire [108:0] \xbar.tl_gpio_o ;
  wire [65:0] \xbar.tl_pwm_i ;
  wire [108:0] \xbar.tl_pwm_o ;
  wire [65:0] \xbar.tl_rv_timer_i ;
  wire [108:0] \xbar.tl_rv_timer_o ;
  wire [263:0] \xbar.tl_s1n_6_ds_d2h ;
  wire [435:0] \xbar.tl_s1n_6_ds_h2d ;
  wire [65:0] \xbar.tl_s1n_6_us_d2h ;
  wire [108:0] \xbar.tl_s1n_6_us_h2d ;
  wire [108:0] \xbar.tl_uart_host_i ;
  wire [65:0] \xbar.tl_uart_host_o ;
  wire [65:0] \xbar.tl_uart_i ;
  wire [108:0] \xbar.tl_uart_o ;
  wire \xbar.u_s1n_6.accept_t_req ;
  wire \xbar.u_s1n_6.accept_t_rsp ;
  wire [22:0] \xbar.u_s1n_6.blanked_auser ;
  wire \xbar.u_s1n_6.clk_i ;
  wire [2:0] \xbar.u_s1n_6.dev_select_i ;
  reg [2:0] \xbar.u_s1n_6.dev_select_outstanding ;
  wire [2:0] \xbar.u_s1n_6.dev_select_t ;
  wire \xbar.u_s1n_6.fifo_h.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.err_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.full_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [109:0] \xbar.u_s1n_6.fifo_h.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rvalid_o ;
  wire [109:0] \xbar.u_s1n_6.fifo_h.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.err_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.full_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.fifo_h.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.fifo_h.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.fifo_h.rst_ni ;
  wire [2:0] \xbar.u_s1n_6.fifo_h.spare_req_i ;
  wire [2:0] \xbar.u_s1n_6.fifo_h.spare_req_o ;
  wire \xbar.u_s1n_6.fifo_h.spare_rsp_i ;
  wire \xbar.u_s1n_6.fifo_h.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.fifo_h.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.fifo_h.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.fifo_h.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.fifo_h.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_err_resp.err_resp.clk_i ;
  reg [3:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type ;
  reg [2:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode ;
  reg \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending ;
  reg [1:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_size ;
  reg [7:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_source ;
  wire \xbar.u_s1n_6.gen_err_resp.err_resp.rst_ni ;
  wire [108:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_i ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_o ;
  wire \xbar.u_s1n_6.gen_u_o[0].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[1].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[2].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[3].dev_select ;
  wire \xbar.u_s1n_6.hfifo_reqready ;
  wire \xbar.u_s1n_6.hold_all_requests ;
  reg [8:0] \xbar.u_s1n_6.num_req_outstanding ;
  wire \xbar.u_s1n_6.rst_ni ;
  wire [263:0] \xbar.u_s1n_6.tl_d_i ;
  wire [435:0] \xbar.u_s1n_6.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.tl_h_o ;
  wire [65:0] \xbar.u_s1n_6.tl_t_i ;
  wire [108:0] \xbar.u_s1n_6.tl_t_o ;
  wire [65:0] \xbar.u_s1n_6.tl_t_p ;
  wire [329:0] \xbar.u_s1n_6.tl_u_i ;
  wire [544:0] \xbar.u_s1n_6.tl_u_o ;
  wire \xbar.unused_scanmode ;
  assign \u_uart.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \u_pwm.u_reg.u_invert_cdc.src_ack  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._invert_we , \u_pwm.u_reg.u_invert_cdc.dst_re_o , \u_pwm.u_reg._invert_regwen  } = \u_pwm.u_reg.u_invert_cdc.txn_bits_q  & { \u_pwm.u_reg.u_invert_cdc.dst_req , \u_pwm.u_reg.u_invert_cdc.dst_req , \u_pwm.u_reg.u_invert_cdc.dst_req  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  = \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  && \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  assign \$1027y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_req  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1044y  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_ack  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._pwm_param_we , \u_pwm.u_reg.u_pwm_param_cdc.dst_re_o , \u_pwm.u_reg._pwm_param_regwen  } = \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q  & { \u_pwm.u_reg.u_pwm_param_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_cdc.dst_req  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src  = \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q  && \u_pwm.u_reg.u_duty_cycle_cdc.src_ack ;
  assign \$1082y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_req  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1099y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_ack  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._duty_cycle_we , \u_pwm.u_reg.u_duty_cycle_cdc.dst_re_o , \u_pwm.u_reg._duty_cycle_regwen  } = \u_pwm.u_reg.u_duty_cycle_cdc.txn_bits_q  & { \u_pwm.u_reg.u_duty_cycle_cdc.dst_req , \u_pwm.u_reg.u_duty_cycle_cdc.dst_req , \u_pwm.u_reg.u_duty_cycle_cdc.dst_req  };
  assign \u_uart.u_reg.reg_error  = \u_uart.u_reg.addrmiss  | \u_uart.u_reg.wr_err ;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_to_src  = \u_pwm.u_reg.u_blink_param_cdc.src_busy_q  && \u_pwm.u_reg.u_blink_param_cdc.src_ack ;
  assign \$1137y  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_req  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1154y  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_ack  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._blink_param_we , \u_pwm.u_reg.u_blink_param_cdc.dst_re_o , \u_pwm.u_reg._blink_param_regwen  } = \u_pwm.u_reg.u_blink_param_cdc.txn_bits_q  & { \u_pwm.u_reg.u_blink_param_cdc.dst_req , \u_pwm.u_reg.u_blink_param_cdc.dst_req , \u_pwm.u_reg.u_blink_param_cdc.dst_req  };
  assign \$1171y  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we  ? \u_pwm.u_reg.reg_wdata [0] : 1'h1;
  assign \u_pwm.u_reg.u_regwen.wr_data  = \u_pwm.u_reg.u_regwen.q  & \$1171y ;
  assign \u_pwm.u_reg.u_cfg0_qe.d_i  = \u_pwm.u_reg._cfg_we  & \u_pwm.u_reg._cfg_regwen ;
  assign \u_pwm.u_reg.u_pwm_en0_qe.d_i  = \u_pwm.u_reg._pwm_en_we  & \u_pwm.u_reg._pwm_en_regwen ;
  assign \u_pwm.u_reg.u_invert0_qe.d_i  = \u_pwm.u_reg._invert_we  & \u_pwm.u_reg._invert_regwen ;
  assign \u_pwm.u_reg.u_pwm_param0_qe.d_i  = \u_pwm.u_reg._pwm_param_we  & \u_pwm.u_reg._pwm_param_regwen ;
  assign \u_pwm.u_reg.u_duty_cycle0_qe.d_i  = \u_pwm.u_reg._duty_cycle_we  & \u_pwm.u_reg._duty_cycle_regwen ;
  assign \u_pwm.u_reg.u_blink_param0_qe.d_i  = \u_pwm.u_reg._blink_param_we  & \u_pwm.u_reg._blink_param_regwen ;
  assign \u_pwm.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_pwm.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [4:2] == 3'h1;
  assign \u_pwm.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [4:2] == 3'h2;
  assign \u_pwm.u_reg.addr_hit [3] = \u_uart.u_bridge.addr_q [4:2] == 3'h3;
  assign \u_pwm.u_reg.addr_hit [4] = \u_uart.u_bridge.addr_q [4:2] == 3'h4;
  assign \u_pwm.u_reg.addr_hit [5] = \u_uart.u_bridge.addr_q [4:2] == 3'h5;
  assign \u_pwm.u_reg.addr_hit [6] = \u_uart.u_bridge.addr_q [4:2] == 3'h6;
  assign \$1312y  = \u_pwm.u_reg.reg_re  || \u_pwm.u_reg.reg_we ;
  assign \$1313y  = | \u_pwm.u_reg.addr_hit ;
  assign \$1314y  = ! \$1313y ;
  assign \u_pwm.u_reg.addrmiss  = \$1312y  ? \$1314y  : 1'h0;
  assign \$1320y  = \u_pwm.u_reg.addr_hit [0] & \$1317y [0];
  assign \$1324y  = \u_pwm.u_reg.addr_hit [1] & \$1323y ;
  assign \$1325y  = \$1320y  | \$1324y ;
  assign \$1329y  = \u_pwm.u_reg.addr_hit [2] & \$1317y [0];
  assign \$1330y  = \$1325y  | \$1329y ;
  assign \$1334y  = \u_pwm.u_reg.addr_hit [3] & \$1317y [0];
  assign \$1335y  = \$1330y  | \$1334y ;
  assign \$1339y  = \u_pwm.u_reg.addr_hit [4] & \$1323y ;
  assign \$1340y  = \$1335y  | \$1339y ;
  assign \$1344y  = \u_pwm.u_reg.addr_hit [5] & \$1323y ;
  assign \$1345y  = \$1340y  | \$1344y ;
  assign \$1323y  = | \$1317y ;
  assign \$1349y  = \u_pwm.u_reg.addr_hit [6] & \$1323y ;
  assign \$1350y  = \$1345y  | \$1349y ;
  assign \u_pwm.u_reg.wr_err  = \u_pwm.u_reg.reg_we  & \$1350y ;
  assign \$1352y  = \u_pwm.u_reg.addr_hit [0] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.we  = \$1352y  & \$1353y ;
  assign \$1355y  = \u_pwm.u_reg.addr_hit [1] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  = \$1355y  & \$1353y ;
  assign \$1358y  = \u_pwm.u_reg.addr_hit [2] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  = \$1358y  & \$1353y ;
  assign \$1361y  = \u_pwm.u_reg.addr_hit [3] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i  = \$1361y  & \$1353y ;
  assign \$1364y  = \u_pwm.u_reg.addr_hit [4] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  = \$1364y  & \$1353y ;
  assign \$1367y  = \u_pwm.u_reg.addr_hit [5] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i  = \$1367y  & \$1353y ;
  assign \$1370y  = \u_pwm.u_reg.addr_hit [6] & \u_pwm.u_reg.reg_we ;
  assign \$1353y  = ! \u_pwm.u_reg.reg_error ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i  = \$1370y  & \$1353y ;
  assign \$1382y  = \u_pwm.u_reg.u_pwm_en0_qe.q_o  | \u_pwm.u_reg.u_invert0_qe.q_o ;
  assign \$1383y  = \$1382y  | \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \$1384y  = \$1383y  | \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \$1385y  = \$1384y  | \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \$1386y  = \$1385y  | \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  assign \$1387y  = \$1386y  | \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  assign \$1388y  = \$1387y  | \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  = \$1388y  | \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  assign \$1391y  = \u_pwm.u_pwm_core.beat_ctr_q  + 27'h0000001;
  assign \$1392y  = \u_pwm.u_pwm_core.beat_end  ? 27'h0000000 : \$1391y ;
  assign \u_pwm.u_pwm_core.beat_ctr_d  = \u_pwm.u_reg.u_cfg0_qe.q_o  ? 27'h0000000 : \$1392y ;
  assign \u_pwm.u_pwm_core.beat_end  = \u_pwm.u_pwm_core.beat_ctr_q  == \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_pwm_core.lshift  = 4'hf - \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.beat_ctr_en  = \u_pwm.u_reg.u_cfg0_qe.q_o  | \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_pwm_core.phase_ctr_en  = \u_pwm.u_pwm_core.beat_end  & \u_pwm.u_pwm_core.beat_ctr_en ;
  assign \u_pwm.u_pwm_core.phase_ctr_incr  = 16'h0001 << \u_pwm.u_pwm_core.lshift ;
  assign { \u_pwm.u_pwm_core.phase_ctr_overflow , \u_pwm.u_pwm_core.phase_ctr_next  } = { 1'h0, \u_pwm.u_pwm_core.phase_ctr_q  } + { 1'h0, \u_pwm.u_pwm_core.phase_ctr_incr  };
  assign \u_pwm.u_pwm_core.phase_ctr_d  = \u_pwm.u_reg.u_cfg0_qe.q_o  ? 16'h0000 : \u_pwm.u_pwm_core.phase_ctr_next ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  = \u_pwm.u_pwm_core.beat_end  & \u_pwm.u_pwm_core.phase_ctr_overflow ;
  assign \$1411y  = { 1'h0, \u_pwm.u_reg.u_blink_param_x_0.q  } + { 1'h0, \u_pwm.u_reg.u_blink_param_y_0.q  };
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.unused_sum , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_sum  } = \$1411y  + 17'h00001;
  assign \$1415y  = ! \$1414y ;
  assign \$1416y  = \$1415y  || \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  assign \$1417y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  == \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_sum ;
  assign \$1418y  = \$1417y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \$1419y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  + 16'h0001;
  assign \$1420y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  ? \$1419y  : 16'hxxxx;
  assign \$1421y  = \$1418y  ? 16'h0000 : \$1420y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_d  = \$1416y  ? 16'h0000 : \$1421y ;
  assign \$1428y  = \$1414y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_d  : 16'hxxxx;
  assign \$1432y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  > \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \$1433y  = \$1414y  && \$1432y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_blink  = \$1433y  ? \u_pwm.u_reg.u_duty_cycle_b_0.q  : \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \$1436y  = ! \$1435y ;
  assign \$1437y  = \$1436y  || \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  assign \$1440y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  + 16'h0001;
  assign \$1441y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  ? \$1440y  : 16'hxxxx;
  assign \$1442y  = \$1439y  ? 16'h0000 : \$1441y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_d  = \$1437y  ? 16'h0000 : \$1442y ;
  assign \$1448y  = \$1435y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_d  : 16'hxxxx;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  & \$1438y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  = \u_pwm.u_reg.u_duty_cycle_a_0.q  < \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt  = \u_pwm.u_reg.u_duty_cycle_a_0.q  > \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \$1460y  = ! \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt ;
  assign \$1461y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  >= \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \$1463y  = \$1461y  || \$1462y ;
  assign \$1464y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  && \$1463y ;
  assign \$1466y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  && \$1465y ;
  assign \$1467y  = \$1466y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q ;
  assign \$1468y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  <= \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \$1462y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end ;
  assign \$1470y  = \$1468y  || \$1462y ;
  assign \$1471y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt  && \$1470y ;
  assign \$1473y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt  && \$1465y ;
  assign \$1474y  = \$1473y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q ;
  assign \$1480y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt ;
  assign \$1481y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pattern_repeat  = \$1480y  & \$1481y ;
  assign \$1465y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  == \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \$1486y  = \$1465y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pattern_repeat ;
  assign \$1487y  = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  } - { 1'h0, \u_pwm.u_reg.u_blink_param_y_0.q  };
  assign \$1488y  = \$1487y  - 17'h00001;
  assign \$1489y  = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  } + { 1'h0, \u_pwm.u_reg.u_blink_param_y_0.q  };
  assign \$1490y  = \$1489y  + 17'h00001;
  assign \$1491y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction  ? \$1488y  : \$1490y ;
  assign \$1492y  = \$1486y  ? { 1'h0, \u_pwm.u_reg.u_duty_cycle_a_0.q  } : \$1491y ;
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_d  } = \$1438y  ? \$1492y  : 17'h0xxxx;
  assign \$1499y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction ;
  assign \$1500y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap  & \$1499y ;
  assign \$1501y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap  & \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction ;
  assign \$1502y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  ? \$1500y  : \$1501y ;
  assign \$1508y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  != \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \$1509y  = \$1413y  && \$1508y ;
  assign \$1438y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  == \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \$1439y  = \$1438y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \$1512y  = \$1439y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_d  : 16'hxxxx;
  assign \$1515y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  ? 16'hffff : 16'h0000;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_htbt  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q  ? \$1515y  : \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q ;
  assign \$1413y  = ! \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \$1414y  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q  && \$1413y ;
  assign \$1435y  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q  && \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \$1520y  = \$1435y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_htbt  : \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_actual  = \$1414y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_blink  : \$1520y ;
  assign \$1522y  = { 28'h0000000, \u_pwm.u_reg.u_cfg_dc_resn.q  } + 32'd1;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask  = 16'hffff >> \$1522y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  & \$1524y ;
  assign \$1524y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_actual  & \$1524y ;
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase  } = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase  } + { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked  };
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase ;
  assign \$1538y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  | \$1537y ;
  assign \$1537y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded ;
  assign \$1540y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  & \$1537y ;
  assign \$1541y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap  ? \$1538y  : \$1540y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  ? \$1541y  : 1'h0;
  assign \$1543y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d  = \u_pwm.u_reg.u_invert.q  ? \$1543y  : \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int ;
  assign \u_gpio.gen_filter[0].u_filter.update_stored_value  = \u_gpio.gen_filter[0].u_filter.diff_ctr_d  == 2'h3;
  assign \$1566y  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[0].u_filter.filter_q ;
  assign \$1567y  = \u_gpio.gen_filter[0].u_filter.diff_ctr_q  >= 2'h3;
  assign \$1568y  = \u_gpio.gen_filter[0].u_filter.diff_ctr_q  + 2'h1;
  assign \$1569y  = \$1567y  ? 2'h3 : \$1568y ;
  assign \u_gpio.gen_filter[0].u_filter.diff_ctr_d  = \$1566y  ? 2'h0 : \$1569y ;
  assign \u_gpio.gen_filter[0].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [0] ? \u_gpio.gen_filter[0].u_filter.stored_value_q  : \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.update_stored_value  = \u_gpio.gen_filter[1].u_filter.diff_ctr_d  == 2'h3;
  assign \$1590y  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[1].u_filter.filter_q ;
  assign \$1591y  = \u_gpio.gen_filter[1].u_filter.diff_ctr_q  >= 2'h3;
  assign \$1592y  = \u_gpio.gen_filter[1].u_filter.diff_ctr_q  + 2'h1;
  assign \$1593y  = \$1591y  ? 2'h3 : \$1592y ;
  assign \u_gpio.gen_filter[1].u_filter.diff_ctr_d  = \$1590y  ? 2'h0 : \$1593y ;
  assign \u_gpio.gen_filter[1].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [1] ? \u_gpio.gen_filter[1].u_filter.stored_value_q  : \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1601y  = \$1600y  & \u_gpio.cio_gpio_q [1];
  assign \$1602y  = \$1599y  | \$1601y ;
  assign \$1605y  = \$1600y  & \u_gpio.cio_gpio_q [0];
  assign \$1606y  = \$1599y  | \$1605y ;
  assign \$1615y  = \$1600y  & \u_gpio.cio_gpio_en_q [1];
  assign \$1616y  = \$1599y  | \$1615y ;
  assign \$1599y  = \u_gpio.u_reg.reg_wdata [1] & \u_gpio.u_reg.reg_wdata [0];
  assign \$1600y  = ~ \u_gpio.u_reg.reg_wdata [1];
  assign \$1619y  = \$1600y  & \u_gpio.cio_gpio_en_q [0];
  assign \$1620y  = \$1599y  | \$1619y ;
  assign \$1625y  = { \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.intr_hw.reg2hw_intr_test_qe_i  } & \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.intr_hw.g_intr_event.new_event  = \$1625y  | \u_gpio.intr_hw.event_intr_i ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de  = | \u_gpio.intr_hw.g_intr_event.new_event ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d  = \u_gpio.intr_hw.g_intr_event.new_event  | \u_gpio.u_reg.u_intr_state.q ;
  assign \$1633y  = ~ \u_gpio.data_in_q ;
  assign \$1634y  = \$1633y  & { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_rise  = \$1634y  & \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \$1637y  = \u_gpio.data_in_q  & \$1636y ;
  assign \u_gpio.event_intr_fall  = \$1637y  & \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.event_intr_acthigh  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  } & \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \$1636y  = ~ { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_actlow  = \$1636y  & \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \$1642y  = \u_gpio.event_intr_rise  | \u_gpio.event_intr_fall ;
  assign \$1643y  = \$1642y  | \u_gpio.event_intr_actlow ;
  assign \u_gpio.intr_hw.event_intr_i  = \$1643y  | \u_gpio.event_intr_acthigh ;
  assign \u_gpio.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \u_gpio.u_reg.reg_we  = \u_gpio.u_reg.u_reg_if.a_ack  & \$1650y ;
  assign \u_gpio.u_reg.reg_re  = \u_gpio.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$1666y  = \u_gpio.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$1674y  = \u_gpio.u_reg.reg_error  || \u_gpio.u_reg.reg_we ;
  assign \$1675y  = \$1674y  ? 32'd4294967295 : \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  = ~ \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \$1650y  = \u_gpio.u_reg.u_reg_if.u_err.op_full  | \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_gpio.u_reg.reg_error  = \u_gpio.u_reg.addrmiss  | \u_gpio.u_reg.wr_err ;
  assign \u_gpio.u_reg.u_intr_state.qe  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  | \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \$1759y  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de  ? \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d  : \u_gpio.u_reg.u_intr_state.q ;
  assign \$1760y  = ~ \u_gpio.u_reg.reg_wdata [1:0];
  assign \$1761y  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  ? \$1760y  : 2'h3;
  assign \u_gpio.u_reg.u_intr_state.wr_data  = \$1759y  & \$1761y ;
  assign \u_gpio.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_gpio.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [5:2] == 4'h1;
  assign \u_gpio.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [5:2] == 4'h2;
  assign \u_gpio.u_reg.addr_hit [3] = \u_uart.u_bridge.addr_q [5:2] == 4'h3;
  assign \u_gpio.u_reg.addr_hit [4] = \u_uart.u_bridge.addr_q [5:2] == 4'h4;
  assign \u_gpio.u_reg.addr_hit [5] = \u_uart.u_bridge.addr_q [5:2] == 4'h5;
  assign \u_gpio.u_reg.addr_hit [6] = \u_uart.u_bridge.addr_q [5:2] == 4'h6;
  assign \u_gpio.u_reg.addr_hit [7] = \u_uart.u_bridge.addr_q [5:2] == 4'h7;
  assign \u_gpio.u_reg.addr_hit [8] = \u_uart.u_bridge.addr_q [5:2] == 4'h8;
  assign \u_gpio.u_reg.addr_hit [9] = \u_uart.u_bridge.addr_q [5:2] == 4'h9;
  assign \u_gpio.u_reg.addr_hit [10] = \u_uart.u_bridge.addr_q [5:2] == 4'ha;
  assign \u_gpio.u_reg.addr_hit [11] = \u_uart.u_bridge.addr_q [5:2] == 4'hb;
  assign \u_gpio.u_reg.addr_hit [12] = \u_uart.u_bridge.addr_q [5:2] == 4'hc;
  assign \u_gpio.u_reg.addr_hit [13] = \u_uart.u_bridge.addr_q [5:2] == 4'hd;
  assign \u_gpio.u_reg.addr_hit [14] = \u_uart.u_bridge.addr_q [5:2] == 4'he;
  assign \$1844y  = \u_gpio.u_reg.reg_re  || \u_gpio.u_reg.reg_we ;
  assign \$1845y  = | \u_gpio.u_reg.addr_hit ;
  assign \$1846y  = ! \$1845y ;
  assign \u_gpio.u_reg.addrmiss  = \$1844y  ? \$1846y  : 1'h0;
  assign \$1852y  = \u_gpio.u_reg.addr_hit [0] & \$1317y [0];
  assign \$1856y  = \u_gpio.u_reg.addr_hit [1] & \$1317y [0];
  assign \$1857y  = \$1852y  | \$1856y ;
  assign \$1861y  = \u_gpio.u_reg.addr_hit [2] & \$1317y [0];
  assign \$1862y  = \$1857y  | \$1861y ;
  assign \$1866y  = \u_gpio.u_reg.addr_hit [3] & \$1317y [0];
  assign \$1867y  = \$1862y  | \$1866y ;
  assign \$1871y  = \u_gpio.u_reg.addr_hit [4] & \$1317y [0];
  assign \$1872y  = \$1867y  | \$1871y ;
  assign \$1876y  = \u_gpio.u_reg.addr_hit [5] & \$1317y [0];
  assign \$1877y  = \$1872y  | \$1876y ;
  assign \$1881y  = \u_gpio.u_reg.addr_hit [6] & \$1317y [0];
  assign \$1882y  = \$1877y  | \$1881y ;
  assign \$1886y  = \u_gpio.u_reg.addr_hit [7] & \$1317y [0];
  assign \$1887y  = \$1882y  | \$1886y ;
  assign \$1891y  = \u_gpio.u_reg.addr_hit [8] & \$1317y [0];
  assign \$1892y  = \$1887y  | \$1891y ;
  assign \$1896y  = \u_gpio.u_reg.addr_hit [9] & \$1317y [0];
  assign \$1897y  = \$1892y  | \$1896y ;
  assign \$1901y  = \u_gpio.u_reg.addr_hit [10] & \$1317y [0];
  assign \$1902y  = \$1897y  | \$1901y ;
  assign \$1906y  = \u_gpio.u_reg.addr_hit [11] & \$1317y [0];
  assign \$1907y  = \$1902y  | \$1906y ;
  assign \$1911y  = \u_gpio.u_reg.addr_hit [12] & \$1317y [0];
  assign \$1912y  = \$1907y  | \$1911y ;
  assign \$1916y  = \u_gpio.u_reg.addr_hit [13] & \$1317y [0];
  assign \$1917y  = \$1912y  | \$1916y ;
  assign \$1921y  = \u_gpio.u_reg.addr_hit [14] & \$1317y [0];
  assign \$1922y  = \$1917y  | \$1921y ;
  assign \u_gpio.u_reg.wr_err  = \u_gpio.u_reg.reg_we  & \$1922y ;
  assign \$1924y  = \u_gpio.u_reg.addr_hit [0] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  = \$1924y  & \$1925y ;
  assign \$1927y  = \u_gpio.u_reg.addr_hit [1] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_enable_we  = \$1927y  & \$1925y ;
  assign \$1930y  = \u_gpio.u_reg.addr_hit [2] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.intr_hw.reg2hw_intr_test_qe_i  = \$1930y  & \$1925y ;
  assign \$1936y  = \u_gpio.u_reg.addr_hit [4] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.direct_out_flds_we  = \$1936y  & \$1925y ;
  assign \$1942y  = \u_gpio.u_reg.addr_hit [5] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.masked_out_lower_qe  = \$1942y  & \$1925y ;
  assign \$1948y  = \u_gpio.u_reg.addr_hit [6] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.masked_out_upper_qe  = \$1948y  & \$1925y ;
  assign \$1954y  = \u_gpio.u_reg.addr_hit [7] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.direct_oe_flds_we  = \$1954y  & \$1925y ;
  assign \$1960y  = \u_gpio.u_reg.addr_hit [8] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.masked_oe_lower_qe  = \$1960y  & \$1925y ;
  assign \$1966y  = \u_gpio.u_reg.addr_hit [9] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.masked_oe_upper_qe  = \$1966y  & \$1925y ;
  assign \$1969y  = \u_gpio.u_reg.addr_hit [10] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_en_rising_we  = \$1969y  & \$1925y ;
  assign \$1972y  = \u_gpio.u_reg.addr_hit [11] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_en_falling_we  = \$1972y  & \$1925y ;
  assign \$1975y  = \u_gpio.u_reg.addr_hit [12] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we  = \$1975y  & \$1925y ;
  assign \$1978y  = \u_gpio.u_reg.addr_hit [13] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_we  = \$1978y  & \$1925y ;
  assign \$1981y  = \u_gpio.u_reg.addr_hit [14] & \u_gpio.u_reg.reg_we ;
  assign \$1925y  = ! \u_gpio.u_reg.reg_error ;
  assign \u_gpio.u_reg.ctrl_en_input_filter_we  = \$1981y  & \$1925y ;
  assign \u_rv_timer.mtimecmp_update  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  | \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  | \u_rv_timer.mtimecmp_update ;
  assign \$1990y  = ~ \u_rv_timer.mtimecmp_update ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d  = \u_rv_timer.intr_timer_state_d  & \$1990y ;
  assign \$1992y  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i  & \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  = \$1992y  | \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.intr_timer_state_d  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  | \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \$2004y  = \u_rv_timer.gen_harts[0].u_core.tick_count  == \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \$2005y  = \u_rv_timer.gen_harts[0].u_core.tick_count  + 12'h001;
  assign \$2008y  = \u_rv_timer.gen_harts[0].u_core.tick_count  >= \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  = \u_rv_timer.u_reg.u_ctrl.q  & \$2008y ;
  assign \u_rv_timer.gen_harts[0].u_core.mtime_d  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  } + { 56'h00000000000000, \u_rv_timer.u_reg.u_cfg0_step.q  };
  assign \$2011y  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  } >= { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i  = \u_rv_timer.u_reg.u_ctrl.q  & \$2011y ;
  assign \u_rv_timer.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \u_rv_timer.u_reg.reg_we  = \u_rv_timer.u_reg.u_reg_if.a_ack  & \$1650y ;
  assign \u_rv_timer.u_reg.reg_re  = \u_rv_timer.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$2034y  = \u_rv_timer.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$2042y  = \u_rv_timer.u_reg.reg_error  || \u_rv_timer.u_reg.reg_we ;
  assign \$2043y  = \$2042y  ? 32'd4294967295 : \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  = ~ \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.u_reg_if.u_err.op_full  = ! \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105];
  assign \u_gpio.u_reg.u_reg_if.u_err.op_partial  = \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] == 3'h1;
  assign \u_gpio.u_reg.u_reg_if.u_err.op_get  = \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] == 3'h4;
  assign \$21y  = \u_uart.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \u_rv_timer.u_reg.reg_error  = \u_rv_timer.u_reg.addrmiss  | \u_rv_timer.u_reg.wr_err ;
  assign \u_rv_timer.u_reg.u_intr_state0.qe  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  assign \$2143y  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de  ? \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d  : \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \$2144y  = ~ \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \$2145y  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  ? \$2144y  : 1'h1;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_data  = \$2143y  & \$2145y ;
  assign \$216y  = \u_uart.u_reg.reg_re  || \u_uart.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.qe  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  ? \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  : \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.qe  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_data  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  ? \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  : \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \$218y  = ! \$217y ;
  assign \u_uart.u_reg.addrmiss  = \$216y  ? \$218y  : 1'h0;
  assign \u_rv_timer.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [8:2] == 7'h40;
  assign \u_rv_timer.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [8:2] == 7'h41;
  assign \u_rv_timer.u_reg.addr_hit [3] = \u_uart.u_bridge.addr_q [8:2] == 7'h42;
  assign \u_rv_timer.u_reg.addr_hit [4] = \u_uart.u_bridge.addr_q [8:2] == 7'h43;
  assign \u_rv_timer.u_reg.addr_hit [5] = \u_uart.u_bridge.addr_q [8:2] == 7'h44;
  assign \u_rv_timer.u_reg.addr_hit [6] = \u_uart.u_bridge.addr_q [8:2] == 7'h45;
  assign \u_rv_timer.u_reg.addr_hit [7] = \u_uart.u_bridge.addr_q [8:2] == 7'h46;
  assign \u_rv_timer.u_reg.addr_hit [8] = \u_uart.u_bridge.addr_q [8:2] == 7'h47;
  assign \$2219y  = \u_rv_timer.u_reg.reg_re  || \u_rv_timer.u_reg.reg_we ;
  assign \$2220y  = | \u_rv_timer.u_reg.addr_hit ;
  assign \$2221y  = ! \$2220y ;
  assign \u_rv_timer.u_reg.addrmiss  = \$2219y  ? \$2221y  : 1'h0;
  assign \$2227y  = \u_rv_timer.u_reg.addr_hit [0] & \$1317y [0];
  assign \$2231y  = \u_rv_timer.u_reg.addr_hit [1] & \$1317y [0];
  assign \$2232y  = \$2227y  | \$2231y ;
  assign \$2236y  = \u_rv_timer.u_reg.addr_hit [2] & \$1317y [0];
  assign \$2237y  = \$2232y  | \$2236y ;
  assign \$224y  = \u_pwm.u_reg.addr_hit [0] & \$1323y ;
  assign \$2241y  = \u_rv_timer.u_reg.addr_hit [3] & \$1317y [0];
  assign \$2242y  = \$2237y  | \$2241y ;
  assign \$2246y  = \u_rv_timer.u_reg.addr_hit [4] & \$2245y ;
  assign \$2247y  = \$2242y  | \$2246y ;
  assign \$2251y  = \u_rv_timer.u_reg.addr_hit [5] & \$1323y ;
  assign \$2252y  = \$2247y  | \$2251y ;
  assign \$2256y  = \u_rv_timer.u_reg.addr_hit [6] & \$1323y ;
  assign \$2257y  = \$2252y  | \$2256y ;
  assign \$2261y  = \u_rv_timer.u_reg.addr_hit [7] & \$1323y ;
  assign \$2262y  = \$2257y  | \$2261y ;
  assign \$1317y  = ~ \u_rv_timer.u_reg.reg_be ;
  assign \$2266y  = \u_rv_timer.u_reg.addr_hit [8] & \$1323y ;
  assign \$2267y  = \$2262y  | \$2266y ;
  assign \u_rv_timer.u_reg.wr_err  = \u_rv_timer.u_reg.reg_we  & \$2267y ;
  assign \$2269y  = \u_rv_timer.u_reg.addr_hit [0] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.ctrl_we  = \$2269y  & \$2270y ;
  assign \$2272y  = \u_rv_timer.u_reg.addr_hit [1] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.intr_enable0_we  = \$2272y  & \$2270y ;
  assign \$2275y  = \u_rv_timer.u_reg.addr_hit [2] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  = \$2275y  & \$2270y ;
  assign \$2278y  = \u_rv_timer.u_reg.addr_hit [3] & \u_rv_timer.u_reg.reg_we ;
  assign \$228y  = \u_pwm.u_reg.addr_hit [1] & \$1317y [0];
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i  = \$2278y  & \$2270y ;
  assign \$2281y  = \u_rv_timer.u_reg.addr_hit [4] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.cfg0_we  = \$2281y  & \$2270y ;
  assign \$2284y  = \u_rv_timer.u_reg.addr_hit [5] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  = \$2284y  & \$2270y ;
  assign \$2287y  = \u_rv_timer.u_reg.addr_hit [6] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  = \$2287y  & \$2270y ;
  assign \$229y  = \$224y  | \$228y ;
  assign \$2290y  = \u_rv_timer.u_reg.addr_hit [7] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i  = \$2290y  & \$2270y ;
  assign \$2293y  = \u_rv_timer.u_reg.addr_hit [8] & \u_rv_timer.u_reg.reg_we ;
  assign \$2270y  = ! \u_rv_timer.u_reg.reg_error ;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i  = \$2293y  & \$2270y ;
  assign \$234y  = \$229y  | \$1329y ;
  assign \$239y  = \$234y  | \$1334y ;
  assign \$243y  = \u_pwm.u_reg.addr_hit [4] & \$1317y [0];
  assign \$244y  = \$239y  | \$243y ;
  assign \$2245y  = | \$1317y [2:0];
  assign \$248y  = \u_pwm.u_reg.addr_hit [5] & \$2245y ;
  assign \$249y  = \$244y  | \$248y ;
  assign \u_uart.u_reg.wr_err  = \u_uart.u_reg.reg_we  & \$249y ;
  assign \$251y  = \u_pwm.u_reg.addr_hit [0] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.ctrl_we  = \$251y  & \$252y ;
  assign \$257y  = \u_pwm.u_reg.addr_hit [2] & \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.rdata_re  = \$257y  & \$252y ;
  assign \$260y  = \u_pwm.u_reg.addr_hit [3] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_wdata0_qe.d_i  = \$260y  & \$252y ;
  assign \$263y  = \u_pwm.u_reg.addr_hit [4] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.d_i  = \$263y  & \$252y ;
  assign \$252y  = ! \u_uart.u_reg.reg_error ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.clr_i  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q  & \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_uart_core.u_uart_txfifo.clr_i  = \u_uart.u_reg.u_fifo_ctrl_txrst.q  & \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_reg.status_rxempty_qs  = ~ \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_reg.status_txidle_qs  = \u_uart.u_uart_core.tx_uart_idle  & \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.status_txempty_qs  = ~ \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_reg.status_rxfull_qs  = ~ \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_reg.status_txfull_qs  = ~ \u_uart.u_uart_core.tx_fifo_wready ;
  assign \$285y  = { 1'h0, \u_uart.u_uart_core.nco_sum_q [15:0] } + { 1'h0, \u_uart.u_reg.u_ctrl_nco.q  };
  assign \$287y  = \u_uart.u_uart_core.tx_uart_idle  & \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_uart_core.u_uart_txfifo.rready_i  = \$287y  & \u_uart.u_reg.u_ctrl_tx.q ;
  assign \$29y  = \u_uart.u_reg.reg_error  || \u_uart.u_reg.reg_we ;
  assign \$294y  = ~ \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  assign \u_uart.u_uart_core.tx_fifo_wready  = \$294y  & \$292y ;
  assign \$297y  = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.tx_fifo_rvalid  = \$297y  & \$292y ;
  assign \$30y  = \$29y  ? 32'd4294967295 : \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \$300y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h7;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  & \$300y ;
  assign \$302y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] == 3'h7;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  & \$302y ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [3] = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3];
  assign \u_uart.u_uart_core.u_uart_txfifo.full_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3], \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] };
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  assign \$309y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3] == \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3];
  assign \$310y  = { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] } - { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] };
  assign \$311y  = 4'h8 - { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] };
  assign \$312y  = \$311y  + { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] };
  assign \$313y  = \$309y  ? \$310y  : \$312y ;
  assign \u_uart.u_uart_core.tx_fifo_depth  = \u_uart.u_uart_core.u_uart_txfifo.full_o  ? 4'h8 : \$313y ;
  assign \$318y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  + 4'h1;
  assign \$325y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  + 4'h1;
  assign \$329y  = \u_uart.u_reg.u_wdata0_qe.q_o  & \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  = \$329y  & \$292y ;
  assign \$332y  = \u_uart.u_uart_core.tx_fifo_rvalid  & \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \$292y  = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  = \$332y  & \$292y ;
  assign \$335y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] }) < $signed(5'h08);
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int  = \$335y  ? \$336y  : 8'hxx;
  assign \$339y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] }) < $signed(5'h08);
  assign \$340y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] }) >= $signed(1'h0);
  assign \$341y  = \$340y  && \$339y ;
  assign \$342y  = \$341y  ? 8'hff : 8'h00;
  assign \u_uart.u_uart_core.tx_fifo_data  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty  ? 8'h00 : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  assign \$351y  = { 1'h0, \u_uart.u_uart_core.uart_tx.baud_div_q  } + 5'h01;
  assign \$359y  = \u_uart.u_reg.u_ctrl_parity_en.q  ? \u_uart.u_uart_core.uart_tx.wr_parity  : 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  = ~ \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \$361y  = | \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  assign \$362y  = \u_uart.u_uart_core.uart_tx.tick_baud_q  && \$361y ;
  assign \$363y  = \u_uart.u_uart_core.uart_tx.bit_cnt_q  - 4'h1;
  assign \$373y  = ! \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  assign \u_uart.u_uart_core.tx_uart_idle  = \u_uart.u_reg.u_ctrl_tx.q  ? \$373y  : 1'h1;
  assign \$375y  = ^ \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.u_uart_core.uart_tx.wr_parity  = \$375y  ^ \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign cio_tx_o = \u_uart.u_reg.u_ctrl_llpbk.q  ? cio_rx_i : \u_uart.u_uart_core.tx_out_q ;
  assign \$392y  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  & \u_uart.u_uart_core.rx_sync_q1 ;
  assign \$393y  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  & \u_uart.u_uart_core.rx_sync_q2 ;
  assign \$394y  = \$392y  | \$393y ;
  assign \$395y  = \u_uart.u_uart_core.rx_sync_q1  & \u_uart.u_uart_core.rx_sync_q2 ;
  assign \u_uart.u_uart_core.rx_in_maj  = \$394y  | \$395y ;
  assign \u_uart.u_uart_core.rx_in_mx  = \u_uart.u_reg.u_ctrl_nf.q  ? \u_uart.u_uart_core.rx_in_maj  : \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \$398y  = \u_uart.u_reg.u_ctrl_llpbk.q  ? 1'h1 : \u_uart.u_uart_core.rx_in_mx ;
  assign \u_uart.u_uart_core.uart_rx.rx  = \u_uart.u_reg.u_ctrl_slpbk.q  ? \u_uart.u_uart_core.uart_tx.tx_q  : \$398y ;
  assign \$405y  = { 1'h0, \u_uart.u_uart_core.uart_rx.baud_div_q  } + 5'h01;
  assign \$408y  = ! \u_uart.u_uart_core.uart_rx.rx ;
  assign \$409y  = \u_uart.u_uart_core.uart_rx.idle_q  && \$408y ;
  assign \$411y  = ! \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \$412y  = \$411y  && \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \$360y  = \u_uart.u_reg.u_ctrl_parity_en.q  ? 4'hb : 4'ha;
  assign \$414y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  == \$360y ;
  assign \$415y  = \$414y  && \u_uart.u_uart_core.uart_rx.rx ;
  assign \$416y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  - 4'h1;
  assign \$417y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  == 4'h1;
  assign \$438y  = \u_uart.u_uart_core.uart_rx.tick_baud_q  & \$417y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wdata_i  = \u_uart.u_reg.u_ctrl_parity_en.q  ? \u_uart.u_uart_core.uart_rx.sreg_q [8:1] : \u_uart.u_uart_core.uart_rx.sreg_q [9:2];
  assign \$440y  = ~ \u_uart.u_uart_core.uart_rx.sreg_q [10];
  assign \u_uart.u_uart_core.event_rx_frame_err  = \u_uart.u_uart_core.uart_rx.rx_valid_q  & \$440y ;
  assign \$442y  = \u_uart.u_reg.u_ctrl_parity_en.q  & \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \$443y  = ^ { \u_uart.u_uart_core.uart_rx.sreg_q [9:1], \u_uart.u_reg.u_ctrl_parity_odd.q  };
  assign \u_uart.u_uart_core.event_rx_parity_err  = \$442y  & \$443y ;
  assign \$445y  = ~ \u_uart.u_uart_core.event_rx_frame_err ;
  assign \$446y  = \u_uart.u_uart_core.uart_rx.rx_valid_q  & \$445y ;
  assign \$447y  = ~ \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i  = \$446y  & \$447y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rready_i  = \u_uart.u_reg.rdata_re  | \u_uart.u_uart_core.rx_pop_i ;
  assign \$455y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  assign \u_uart.u_uart_core.rx_fifo_wready  = \$455y  & \$453y ;
  assign \$458y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_bridge.rx_valid_i  = \$458y  & \$453y ;
  assign \$461y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hf;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  & \$461y ;
  assign \$463y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] == 4'hf;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  & \$463y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [4] = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_rxfifo.full_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4], \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] };
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  assign \$470y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4] == \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4];
  assign \$471y  = { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] } - { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] };
  assign \$472y  = 5'h10 - { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] };
  assign \$473y  = \$472y  + { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] };
  assign \$474y  = \$470y  ? \$471y  : \$473y ;
  assign \u_uart.u_uart_core.rx_fifo_depth  = \u_uart.u_uart_core.u_uart_rxfifo.full_o  ? 5'h10 : \$474y ;
  assign \$479y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  + 5'h01;
  assign \$486y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  + 5'h01;
  assign \$490y  = \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i  & \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  = \$490y  & \$453y ;
  assign \$493y  = \u_uart.u_bridge.rx_valid_i  & \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  assign \$453y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  = \$493y  & \$453y ;
  assign \$496y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] }) < $signed(6'h10);
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int  = \$496y  ? \$497y  : 8'hxx;
  assign \$500y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] }) < $signed(6'h10);
  assign \$501y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] }) >= $signed(1'h0);
  assign \$502y  = \$501y  && \$500y ;
  assign \$503y  = \$502y  ? 8'hff : 8'h00;
  assign \u_uart.u_bridge.rx_data_i  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty  ? 8'h00 : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  assign \$509y  = | \u_uart.u_bridge.rxf_st_q ;
  assign \u_uart.u_uart_core.rx_pop_i  = \$509y  && \u_uart.u_bridge.rx_valid_i ;
  assign \$515y  = \u_uart.u_bridge.rx_data_i  == 8'ha5;
  assign \$516y  = \u_uart.u_bridge.rx_valid_i  && \$515y ;
  assign \$529y  = \u_uart.u_bridge.op_q  == 8'h01;
  assign \$521y  = \u_uart.u_bridge.idx_q  + 2'h1;
  assign \$562y  = \u_uart.u_bridge.req_q  && \uart_host_adapter.gnt_o ;
  assign \$583y  = \uart_host_adapter.g_multiple_reqs.source_q  + 1'h1;
  assign \u_rv_timer.u_reg.reg_be  = \u_uart.u_bridge.we_q  ? \u_uart.u_bridge.be_q  : 4'hf;
  assign \$589y  = & \u_uart.u_bridge.be_q ;
  assign \$590y  = \$589y  ? 3'h0 : 3'h1;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] = \u_uart.u_bridge.we_q  ? \$590y  : 3'h4;
  assign \u_uart.u_reg.reg_we  = \u_uart.u_reg.u_reg_if.a_ack  & \$1650y ;
  assign \$601y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80000;
  assign \$603y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80020;
  assign \$605y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80040;
  assign \$607y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80060;
  assign \xbar.u_s1n_6.accept_t_req  = \u_uart.u_bridge.req_q  & \uart_host_adapter.gnt_o ;
  assign \$620y  = \xbar.u_s1n_6.num_req_outstanding  + 9'h001;
  assign \$622y  = \xbar.u_s1n_6.num_req_outstanding  - 9'h001;
  assign \$626y  = | \xbar.u_s1n_6.num_req_outstanding ;
  assign \$627y  = \xbar.u_s1n_6.dev_select_t  != \xbar.u_s1n_6.dev_select_outstanding ;
  assign \xbar.u_s1n_6.hold_all_requests  = \$626y  & \$627y ;
  assign \xbar.u_s1n_6.gen_u_o[0].dev_select  = \$647y  & \$648y ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[0].dev_select ;
  assign \u_uart.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[0].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[1].dev_select  = \$653y  & \$648y ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[1].dev_select ;
  assign \u_pwm.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[1].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[2].dev_select  = \$659y  & \$648y ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[2].dev_select ;
  assign \u_gpio.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[2].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[3].dev_select  = \$665y  & \$648y ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[3].dev_select ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  = \xbar.u_s1n_6.gen_u_o[3].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \$647y  = ! \xbar.u_s1n_6.dev_select_t ;
  assign \$653y  = \xbar.u_s1n_6.dev_select_t  == 3'h1;
  assign \$659y  = \xbar.u_s1n_6.dev_select_t  == 3'h2;
  assign \$665y  = \xbar.u_s1n_6.dev_select_t  == 3'h3;
  assign \uart_host_adapter.gnt_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.hfifo_reqready ;
  assign \$683y  = ! \xbar.u_s1n_6.dev_select_outstanding ;
  assign \$685y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h1;
  assign \$687y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h2;
  assign \$689y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h3;
  assign \$691y  = \u_uart.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16] = \$691y  ? \u_uart.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$693y  = \u_pwm.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16] = \$693y  ? \u_pwm.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$695y  = \u_gpio.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16] = \$695y  ? \u_gpio.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$697y  = \u_rv_timer.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16] = \$697y  ? \u_rv_timer.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$699y  = \xbar.u_s1n_6.dev_select_t  >= 3'h4;
  assign \$700y  = \u_uart.u_bridge.req_q  & \$699y ;
  assign \$648y  = ~ \xbar.u_s1n_6.hold_all_requests ;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108] = \$700y  & \$648y ;
  assign \$708y  = \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108] && \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0];
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] = ~ \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending ;
  assign \$720y  = 4'h6 == \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type ;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16] = \$720y  ? 32'd0 : 32'd4294967295;
  assign \$723y  = \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  == 3'h4;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62] = \$723y  ? 3'h1 : 3'h0;
  assign \u_pwm.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \u_pwm.u_reg.reg_we  = \u_pwm.u_reg.u_reg_if.a_ack  & \$1650y ;
  assign \u_pwm.u_reg.reg_re  = \u_pwm.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$747y  = \u_pwm.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$755y  = \u_pwm.u_reg.reg_error  || \u_pwm.u_reg.reg_we ;
  assign \$756y  = \$755y  ? 32'd4294967295 : \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \$760y  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  & \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \$761y  = \u_pwm.u_reg.u_reg_if.outstanding_q  | \$760y ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  = ~ \$761y ;
  assign \u_uart.u_reg.reg_re  = \u_uart.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_pwm.u_reg.reg_error  = \u_pwm.u_reg.addrmiss  | \u_pwm.u_reg.wr_err ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_to_src  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q  && \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \$862y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_req  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$879y  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_ack  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._cfg_we , \u_pwm.u_reg.u_cfg_cdc.dst_re_o , \u_pwm.u_reg._cfg_regwen  } = \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  & { \u_pwm.u_reg.u_cfg_cdc.dst_req , \u_pwm.u_reg.u_cfg_cdc.dst_req , \u_pwm.u_reg.u_cfg_cdc.dst_req  };
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  && \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \$917y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_req  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$934y  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_ack  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._pwm_en_we , \u_pwm.u_reg.u_pwm_en_cdc.dst_re_o , \u_pwm.u_reg._pwm_en_regwen  } = \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  & { \u_pwm.u_reg.u_pwm_en_cdc.dst_req , \u_pwm.u_reg.u_pwm_en_cdc.dst_req , \u_pwm.u_reg.u_pwm_en_cdc.dst_req  };
  assign \u_pwm.u_reg.u_invert_cdc.dst_to_src  = \u_pwm.u_reg.u_invert_cdc.src_busy_q  && \u_pwm.u_reg.u_invert_cdc.src_ack ;
  assign \$972y  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_req  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$989y  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \$auto$bmuxmap.cc:84:execute$2055 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [15:8] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2055 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [31:24] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2055 [23:16] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [47:40] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2055 [31:24] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [63:56] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2060 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2055 [15:8] : \$auto$bmuxmap.cc:84:execute$2055 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2060 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2055 [31:24] : \$auto$bmuxmap.cc:84:execute$2055 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2063  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2060 [15:8] : \$auto$bmuxmap.cc:84:execute$2060 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2065 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [15:8] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2065 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [31:24] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2065 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [47:40] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2065 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [63:56] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2065 [39:32] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [79:72] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [71:64];
  assign \$auto$bmuxmap.cc:84:execute$2065 [47:40] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [95:88] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [87:80];
  assign \$auto$bmuxmap.cc:84:execute$2065 [55:48] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [111:104] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [103:96];
  assign \$auto$bmuxmap.cc:84:execute$2065 [63:56] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [127:120] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [119:112];
  assign \$auto$bmuxmap.cc:84:execute$2074 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2065 [15:8] : \$auto$bmuxmap.cc:84:execute$2065 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2074 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2065 [31:24] : \$auto$bmuxmap.cc:84:execute$2065 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2074 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2065 [47:40] : \$auto$bmuxmap.cc:84:execute$2065 [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2074 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2065 [63:56] : \$auto$bmuxmap.cc:84:execute$2065 [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2079 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2074 [15:8] : \$auto$bmuxmap.cc:84:execute$2074 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2079 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2074 [31:24] : \$auto$bmuxmap.cc:84:execute$2074 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2082  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3] ? \$auto$bmuxmap.cc:84:execute$2079 [15:8] : \$auto$bmuxmap.cc:84:execute$2079 [7:0];
  assign \$auto$rtlil.cc:2918:Not$2042  = ~ \$343y ;
  assign \$auto$rtlil.cc:2918:Not$2049  = ~ \$504y ;
  assign \$auto$rtlil.cc:2965:And$2044  = \$343y  & { \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata.q  };
  assign \$auto$rtlil.cc:2965:And$2051  = \$504y  & { \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i  };
  assign \$auto$rtlil.cc:2965:And$2046  = \$auto$rtlil.cc:2918:Not$2042  & \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage ;
  assign \$auto$rtlil.cc:2965:And$2053  = \$auto$rtlil.cc:2918:Not$2049  & \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage ;
  assign \$345y  = \$auto$rtlil.cc:2965:And$2046  | \$auto$rtlil.cc:2965:And$2044 ;
  assign \$506y  = \$auto$rtlil.cc:2965:And$2053  | \$auto$rtlil.cc:2965:And$2051 ;
  assign \$auto$demuxmap.cc:63:execute$2084  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h0;
  assign \$auto$demuxmap.cc:63:execute$2087  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h1;
  assign \$auto$demuxmap.cc:63:execute$2090  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h2;
  assign \$auto$demuxmap.cc:63:execute$2093  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h3;
  assign \$auto$demuxmap.cc:63:execute$2096  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h4;
  assign \$auto$demuxmap.cc:63:execute$2099  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h5;
  assign \$auto$demuxmap.cc:63:execute$2102  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h6;
  assign \$auto$demuxmap.cc:63:execute$2105  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h7;
  assign \$auto$demuxmap.cc:63:execute$2108  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h0;
  assign \$auto$demuxmap.cc:63:execute$2111  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h1;
  assign \$auto$demuxmap.cc:63:execute$2114  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h2;
  assign \$auto$demuxmap.cc:63:execute$2117  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h3;
  assign \$auto$demuxmap.cc:63:execute$2120  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h4;
  assign \$auto$demuxmap.cc:63:execute$2123  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h5;
  assign \$auto$demuxmap.cc:63:execute$2126  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h6;
  assign \$auto$demuxmap.cc:63:execute$2129  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h7;
  assign \$auto$demuxmap.cc:63:execute$2132  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h8;
  assign \$auto$demuxmap.cc:63:execute$2135  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h9;
  assign \$auto$demuxmap.cc:63:execute$2138  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'ha;
  assign \$auto$demuxmap.cc:63:execute$2141  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hb;
  assign \$auto$demuxmap.cc:63:execute$2144  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hc;
  assign \$auto$demuxmap.cc:63:execute$2147  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hd;
  assign \$auto$demuxmap.cc:63:execute$2150  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'he;
  assign \$auto$demuxmap.cc:63:execute$2153  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hf;
  assign \$343y [7:0] = \$auto$demuxmap.cc:63:execute$2084  ? \$342y  : 8'h00;
  assign \$343y [15:8] = \$auto$demuxmap.cc:63:execute$2087  ? \$342y  : 8'h00;
  assign \$343y [23:16] = \$auto$demuxmap.cc:63:execute$2090  ? \$342y  : 8'h00;
  assign \$343y [31:24] = \$auto$demuxmap.cc:63:execute$2093  ? \$342y  : 8'h00;
  assign \$343y [39:32] = \$auto$demuxmap.cc:63:execute$2096  ? \$342y  : 8'h00;
  assign \$343y [47:40] = \$auto$demuxmap.cc:63:execute$2099  ? \$342y  : 8'h00;
  assign \$343y [55:48] = \$auto$demuxmap.cc:63:execute$2102  ? \$342y  : 8'h00;
  assign \$343y [63:56] = \$auto$demuxmap.cc:63:execute$2105  ? \$342y  : 8'h00;
  assign \$504y [7:0] = \$auto$demuxmap.cc:63:execute$2108  ? \$503y  : 8'h00;
  assign \$504y [15:8] = \$auto$demuxmap.cc:63:execute$2111  ? \$503y  : 8'h00;
  assign \$504y [23:16] = \$auto$demuxmap.cc:63:execute$2114  ? \$503y  : 8'h00;
  assign \$504y [31:24] = \$auto$demuxmap.cc:63:execute$2117  ? \$503y  : 8'h00;
  assign \$504y [39:32] = \$auto$demuxmap.cc:63:execute$2120  ? \$503y  : 8'h00;
  assign \$504y [47:40] = \$auto$demuxmap.cc:63:execute$2123  ? \$503y  : 8'h00;
  assign \$504y [55:48] = \$auto$demuxmap.cc:63:execute$2126  ? \$503y  : 8'h00;
  assign \$504y [63:56] = \$auto$demuxmap.cc:63:execute$2129  ? \$503y  : 8'h00;
  assign \$504y [71:64] = \$auto$demuxmap.cc:63:execute$2132  ? \$503y  : 8'h00;
  assign \$504y [79:72] = \$auto$demuxmap.cc:63:execute$2135  ? \$503y  : 8'h00;
  assign \$504y [87:80] = \$auto$demuxmap.cc:63:execute$2138  ? \$503y  : 8'h00;
  assign \$504y [95:88] = \$auto$demuxmap.cc:63:execute$2141  ? \$503y  : 8'h00;
  assign \$504y [103:96] = \$auto$demuxmap.cc:63:execute$2144  ? \$503y  : 8'h00;
  assign \$504y [111:104] = \$auto$demuxmap.cc:63:execute$2147  ? \$503y  : 8'h00;
  assign \$504y [119:112] = \$auto$demuxmap.cc:63:execute$2150  ? \$503y  : 8'h00;
  assign \$504y [127:120] = \$auto$demuxmap.cc:63:execute$2153  ? \$503y  : 8'h00;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.beat_ctr_q  <= 27'h0000000;
    else if (\u_pwm.u_pwm_core.beat_ctr_en ) \u_pwm.u_pwm_core.beat_ctr_q  <= \u_pwm.u_pwm_core.beat_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.phase_ctr_q  <= 16'h0000;
    else if (\u_pwm.u_pwm_core.phase_ctr_en ) \u_pwm.u_pwm_core.phase_ctr_q  <= \u_pwm.u_pwm_core.phase_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.num_req_outstanding  <= 9'h000;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1685 ) \xbar.u_s1n_6.num_req_outstanding  <= \$procmux$542_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_source  <= 8'h00;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1690 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_source  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_size  <= 2'h0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1690 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_size  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  <= 3'h4;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1690 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  <= \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type  <= 4'h9;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1690 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type  <= 4'h9;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.dev_select_outstanding  <= 3'h0;
    else if (\xbar.u_s1n_6.accept_t_req ) \xbar.u_s1n_6.dev_select_outstanding  <= \xbar.u_s1n_6.dev_select_t ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \uart_host_adapter.g_multiple_reqs.source_q  <= 1'h0;
    else if (\$562y ) \uart_host_adapter.g_multiple_reqs.source_q  <= \$procmux$588_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.tx_q  <= 1'h1;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1714 ) \u_uart.u_uart_core.uart_tx.tx_q  <= \u_uart.u_uart_core.uart_tx.tx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.sreg_q  <= 11'h7ff;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1710 ) \u_uart.u_uart_core.uart_tx.sreg_q  <= \u_uart.u_uart_core.uart_tx.sreg_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.bit_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1710 ) \u_uart.u_uart_core.uart_tx.bit_cnt_q  <= \u_uart.u_uart_core.uart_tx.bit_cnt_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.baud_div_q  <= 4'h0;
    else if (\u_uart.u_uart_core.nco_sum_q [16]) \u_uart.u_uart_core.uart_tx.baud_div_q  <= \$351y [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.sreg_q  <= 11'h000;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1728 ) \u_uart.u_uart_core.uart_rx.sreg_q  <= \u_uart.u_uart_core.uart_rx.sreg_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.idle_q  <= 1'h1;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1724 ) \u_uart.u_uart_core.uart_rx.idle_q  <= \u_uart.u_uart_core.uart_rx.idle_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.bit_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1724 ) \u_uart.u_uart_core.uart_rx.bit_cnt_q  <= \u_uart.u_uart_core.uart_rx.bit_cnt_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.baud_div_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1737 ) \u_uart.u_uart_core.uart_rx.baud_div_q  <= \u_uart.u_uart_core.uart_rx.baud_div_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1740 ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= \$procmux$1393_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1743 ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= \$procmux$1374_Y ;
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [63:56] <= \$345y [63:56];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [55:48] <= \$345y [55:48];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [47:40] <= \$345y [47:40];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [39:32] <= \$345y [39:32];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [31:24] <= \$345y [31:24];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [23:16] <= \$345y [23:16];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [15:8] <= \$345y [15:8];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [7:0] <= \$345y [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= 5'h00;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1754 ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= \$procmux$1122_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= 5'h00;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1757 ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= \$procmux$1103_Y ;
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [79:72] <= \$506y [79:72];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [71:64] <= \$506y [71:64];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [63:56] <= \$506y [63:56];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [55:48] <= \$506y [55:48];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [47:40] <= \$506y [47:40];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [39:32] <= \$506y [39:32];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [31:24] <= \$506y [31:24];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [23:16] <= \$506y [23:16];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [15:8] <= \$506y [15:8];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [127:120] <= \$506y [127:120];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [119:112] <= \$506y [119:112];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [111:104] <= \$506y [111:104];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [103:96] <= \$506y [103:96];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [95:88] <= \$506y [95:88];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [87:80] <= \$506y [87:80];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [7:0] <= \$506y [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_wdata.q  <= 8'h00;
    else if (\u_uart.u_reg.u_wdata0_qe.d_i ) \u_uart.u_reg.u_wdata.q  <= \u_uart.u_reg.reg_wdata [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.rspop_q  <= \$21y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.rdata_q  <= \$30y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.error_q  <= \u_uart.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_txrst.q  <= 1'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_txrst.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_rxrst.q  <= 1'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_rxrst.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_tx.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_tx.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_slpbk.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_slpbk.q  <= \u_uart.u_reg.reg_wdata [4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_rx.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_rx.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_parity_odd.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_parity_odd.q  <= \u_uart.u_reg.reg_wdata [7];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_parity_en.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_parity_en.q  <= \u_uart.u_reg.reg_wdata [6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_nf.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_nf.q  <= \u_uart.u_reg.reg_wdata [2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_nco.q  <= 16'h0970;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_nco.q  <= \u_uart.u_reg.reg_wdata [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_llpbk.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_llpbk.q  <= \u_uart.u_reg.reg_wdata [5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.we_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1806 ) \u_uart.u_bridge.we_q  <= \u_uart.u_bridge.we_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.wdata_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1821 ) \u_uart.u_bridge.wdata_q  <= \u_uart.u_bridge.wdata_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.sh_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1828 ) \u_uart.u_bridge.sh_q  <= \u_uart.u_bridge.sh_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.rxf_st_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1847 ) \u_uart.u_bridge.rxf_st_q  <= \u_uart.u_bridge.rxf_st_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.req_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1854 ) \u_uart.u_bridge.req_q  <= \u_uart.u_bridge.req_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.op_q  <= 8'h00;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1857 ) \u_uart.u_bridge.op_q  <= \u_uart.u_bridge.rx_data_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.idx_q  <= 2'h0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1872 ) \u_uart.u_bridge.idx_q  <= \u_uart.u_bridge.idx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.bebyte_q  <= 8'h0f;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1875 ) \u_uart.u_bridge.bebyte_q  <= \u_uart.u_bridge.rx_data_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.be_q  <= 4'hf;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1821 ) \u_uart.u_bridge.be_q  <= \u_uart.u_bridge.be_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.addr_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1893 ) \u_uart.u_bridge.addr_q  <= { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_timer_v_upper0.q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_timer_v_upper0.qe ) \u_rv_timer.u_reg.u_timer_v_upper0.q  <= \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_timer_v_lower0.q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_timer_v_lower0.qe ) \u_rv_timer.u_reg.u_timer_v_lower0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.rspop_q  <= \$2034y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.rdata_q  <= \$2043y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.error_q  <= \u_rv_timer.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_intr_state0.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.u_intr_state0.qe ) \u_rv_timer.u_reg.u_intr_state0.q  <= \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_intr_enable0.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.intr_enable0_we ) \u_rv_timer.u_reg.u_intr_enable0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_ctrl.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.ctrl_we ) \u_rv_timer.u_reg.u_ctrl.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_upper0_0.q  <= 32'd4294967295;
    else if (\u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ) \u_rv_timer.u_reg.u_compare_upper0_0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_lower0_0.q  <= 32'd4294967295;
    else if (\u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ) \u_rv_timer.u_reg.u_compare_lower0_0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_cfg0_step.q  <= 8'h01;
    else if (\u_rv_timer.u_reg.cfg0_we ) \u_rv_timer.u_reg.u_cfg0_step.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_cfg0_prescale.q  <= 12'h000;
    else if (\u_rv_timer.u_reg.cfg0_we ) \u_rv_timer.u_reg.u_cfg0_prescale.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_regwen.q  <= 1'h1;
    else if (\u_pwm.u_reg.u_regwen.wr_en_data_arb.we ) \u_pwm.u_reg.u_regwen.q  <= \u_pwm.u_reg.u_regwen.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.rspop_q  <= \$747y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.rdata_q  <= \$756y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.error_q  <= \u_pwm.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_pwm_param0_qe.d_i ) \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  <= \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_htbt_en_0.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_param0_qe.d_i ) \u_pwm.u_reg.u_pwm_param_htbt_en_0.q  <= \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1918 ) \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q  <= \$procmux$1600_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.src_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1918 ) \u_pwm.u_reg.u_pwm_param_cdc.src_q  <= \$procmux$1604_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1924 ) \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  <= \$procmux$1613_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_blink_en_0.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_param0_qe.d_i ) \u_pwm.u_reg.u_pwm_param_blink_en_0.q  <= \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1928 ) \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  <= \$procmux$220_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.src_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1928 ) \u_pwm.u_reg.u_pwm_en_cdc.src_q  <= \$procmux$224_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1934 ) \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  <= \$procmux$233_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_en0_qe.d_i ) \u_pwm.u_reg.u_pwm_en.q  <= \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1938 ) \u_pwm.u_reg.u_invert_cdc.txn_bits_q  <= \$procmux$83_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.src_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1938 ) \u_pwm.u_reg.u_invert_cdc.src_q  <= \$procmux$87_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1944 ) \u_pwm.u_reg.u_invert_cdc.src_busy_q  <= \$procmux$96_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_invert0_qe.d_i ) \u_pwm.u_reg.u_invert.q  <= \u_pwm.u_reg.u_invert_cdc.src_q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1948 ) \u_pwm.u_reg.u_duty_cycle_cdc.txn_bits_q  <= \$procmux$1265_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.src_q  <= 32'd2147450879;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1948 ) \u_pwm.u_reg.u_duty_cycle_cdc.src_q  <= \$procmux$1269_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1954 ) \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q  <= \$procmux$1278_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_b_0.q  <= 16'h7fff;
    else if (\u_pwm.u_reg.u_duty_cycle0_qe.d_i ) \u_pwm.u_reg.u_duty_cycle_b_0.q  <= \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_a_0.q  <= 16'h7fff;
    else if (\u_pwm.u_reg.u_duty_cycle0_qe.d_i ) \u_pwm.u_reg.u_duty_cycle_a_0.q  <= \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_dc_resn.q  <= 4'h7;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_dc_resn.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cntr_en.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_cntr_en.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_clk_div.q  <= 27'h0008000;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_clk_div.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1962 ) \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  <= \$procmux$329_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.src_q  <= 32'd939556864;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1962 ) \u_pwm.u_reg.u_cfg_cdc.src_q  <= \$procmux$333_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1968 ) \u_pwm.u_reg.u_cfg_cdc.src_busy_q  <= \$procmux$342_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_y_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_blink_param0_qe.d_i ) \u_pwm.u_reg.u_blink_param_y_0.q  <= \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_x_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_blink_param0_qe.d_i ) \u_pwm.u_reg.u_blink_param_x_0.q  <= \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1973 ) \u_pwm.u_reg.u_blink_param_cdc.txn_bits_q  <= \$procmux$356_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.src_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1973 ) \u_pwm.u_reg.u_blink_param_cdc.src_q  <= \$procmux$360_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1979 ) \u_pwm.u_reg.u_blink_param_cdc.src_busy_q  <= \$procmux$405_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  <= 1'h0;
    else if (!\u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_int ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  <= \u_pwm.u_reg.u_pwm_en.q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction  <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$1983 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction  <= \$procmux$1513_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1990 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  <= \$procmux$1524_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q  <= 1'h0;
    else if (\$1439y ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q  <= \$1502y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$1998 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  <= \$procmux$1347_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$2005 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  <= \$procmux$1579_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.rspop_q  <= \$1666y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.rdata_q  <= \$1675y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.error_q  <= \u_gpio.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_state.q  <= 2'h0;
    else if (\u_gpio.u_reg.u_intr_state.qe ) \u_gpio.u_reg.u_intr_state.q  <= \u_gpio.u_reg.u_intr_state.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_enable.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_enable_we ) \u_gpio.u_reg.u_intr_enable.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_rising.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_en_rising_we ) \u_gpio.u_reg.u_intr_ctrl_en_rising.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_en_lvllow_we ) \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ) \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_falling.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_en_falling_we ) \u_gpio.u_reg.u_intr_ctrl_en_falling.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_ctrl_en_input_filter.q  <= 2'h0;
    else if (\u_gpio.u_reg.ctrl_en_input_filter_we ) \u_gpio.u_reg.u_ctrl_en_input_filter.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[1].u_filter.update_stored_value ) \u_gpio.gen_filter[1].u_filter.stored_value_q  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[0].u_filter.update_stored_value ) \u_gpio.gen_filter[0].u_filter.stored_value_q  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_q [0] <= 1'h0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$2026 ) \u_gpio.cio_gpio_q [0] <= \$procmux$315_Y [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_q [1] <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$2029 ) \u_gpio.cio_gpio_q [1] <= \$procmux$315_Y [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_en_q [0] <= 1'h0;
    else if (\$auto$opt_dff.cc:219:make_patterns_logic$2036 ) \u_gpio.cio_gpio_en_q [0] <= \$procmux$290_Y [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_en_q [1] <= 1'h0;
    else if (\$auto$opt_dff.cc:194:make_patterns_logic$2039 ) \u_gpio.cio_gpio_en_q [1] <= \$procmux$290_Y [1];
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1681  = | { \xbar.u_s1n_6.tl_t_p [65], \xbar.u_s1n_6.accept_t_req  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1683  = { \xbar.u_s1n_6.tl_t_p [65], \xbar.u_s1n_6.accept_t_req  } != 2'h3;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1710  = { \$362y , \u_uart.u_uart_core.u_uart_txfifo.rready_i , \u_uart.u_reg.u_ctrl_tx.q  } != 3'h1;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1712  = { \u_uart.u_uart_core.u_uart_txfifo.rready_i , \u_uart.u_reg.u_ctrl_tx.q  } != 2'h3;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1724  = | { \$412y , \$409y  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1726  = { \$415y , \$412y , \$409y  } != 3'h6;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1737  = | { \$409y , \u_uart.u_uart_core.nco_sum_q [16] };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1740  = | { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set , \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i , \u_uart.u_uart_core.u_uart_txfifo.clr_i  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1743  = | { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set , \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i , \u_uart.u_uart_core.u_uart_txfifo.clr_i  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1754  = | { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set , \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i , \u_uart.u_uart_core.u_uart_rxfifo.clr_i  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1757  = | { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set , \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i , \u_uart.u_uart_core.u_uart_rxfifo.clr_i  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1792  = { \$procmux$1001_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1794  = { \$procmux$1003_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1796  = { \$procmux$1001_CMP , \$520y , \u_uart.u_bridge.rx_valid_i  } != 3'h5;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1798  = { \$procmux$1003_CMP , \$520y , \u_uart.u_bridge.rx_valid_i  } != 3'h5;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1800  = { \$procmux$1003_CMP , \$529y , \$520y , \u_uart.u_bridge.rx_valid_i  } != 4'hf;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1802  = { \$procmux$1019_CMP , \$562y  } != 2'h2;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1804  = | { \$procmux$1019_CMP , \$procmux$1003_CMP , \$procmux$1001_CMP  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1819  = | { \$procmux$1003_CMP , \$procmux$1001_CMP  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1824  = { \$auto$opt_reduce.cc:137:opt_pmux$1679 , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1826  = | { \$procmux$1007_CMP , \$auto$opt_reduce.cc:137:opt_pmux$1679  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1835  = { \$procmux$1005_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1841  = { \$procmux$1005_CMP , \$520y , \u_uart.u_bridge.rx_valid_i  } != 3'h5;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1843  = { \$procmux$1007_CMP , \$516y  } != 2'h2;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1852  = | { \$procmux$1020_CMP , \$procmux$1019_CMP  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1866  = { \$procmux$1003_CMP , \$529y , \$520y , \u_uart.u_bridge.rx_valid_i  } != 4'hb;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1868  = { \$procmux$1001_CMP , \$520y , \u_uart.u_bridge.rx_valid_i  } != 3'h7;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1870  = | { \$procmux$1007_CMP , \$procmux$1005_CMP , \$procmux$1003_CMP , \$procmux$1001_CMP  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1918  = | { \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1924  = | { \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_cdc.src_ack  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1928  = | { \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1934  = | { \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_en_cdc.src_ack  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1938  = | { \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_invert_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1944  = | { \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_invert_cdc.src_ack  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1948  = | { \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1954  = | { \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_duty_cycle_cdc.src_ack  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1962  = | { \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_cfg_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1968  = | { \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_cfg_cdc.src_ack  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1973  = | { \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_blink_param_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1979  = | { \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_blink_param_cdc.src_ack  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1983  = | { \$1474y , \$1471y , \$1467y , \$1464y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1986  = { \$1439y , \$1437y , \$1435y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  } != 5'h04;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1988  = | { \$1435y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1994  = { \$1509y , \$1439y , \$1438y  } != 3'h2;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$1996  = | { \$1509y , \$1439y  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$2001  = { \$1418y , \$1416y , \$1414y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  } != 5'h04;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$2003  = | { \$1414y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$2022  = | { \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.direct_out_flds_we  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$2024  = { \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.direct_out_flds_we  } != 2'h2;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$2029  = | { \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.direct_out_flds_we  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$2032  = | { \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.direct_oe_flds_we  };
  assign \$auto$opt_dff.cc:194:make_patterns_logic$2034  = { \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.direct_oe_flds_we  } != 2'h2;
  assign \$auto$opt_dff.cc:194:make_patterns_logic$2039  = | { \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.direct_oe_flds_we  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1685  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1681 , \$auto$opt_dff.cc:194:make_patterns_logic$1683  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1690  = & { \$708y , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1714  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1710 , \$auto$opt_dff.cc:194:make_patterns_logic$1712  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1728  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1724 , \$auto$opt_dff.cc:194:make_patterns_logic$1726  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1806  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1792 , \$auto$opt_dff.cc:194:make_patterns_logic$1794 , \$auto$opt_dff.cc:194:make_patterns_logic$1796 , \$auto$opt_dff.cc:194:make_patterns_logic$1798 , \$auto$opt_dff.cc:194:make_patterns_logic$1800 , \$auto$opt_dff.cc:194:make_patterns_logic$1802 , \$auto$opt_dff.cc:194:make_patterns_logic$1804  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1821  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1792 , \$auto$opt_dff.cc:194:make_patterns_logic$1794 , \$auto$opt_dff.cc:194:make_patterns_logic$1796 , \$auto$opt_dff.cc:194:make_patterns_logic$1798 , \$auto$opt_dff.cc:194:make_patterns_logic$1800 , \$auto$opt_dff.cc:194:make_patterns_logic$1819  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1828  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1824 , \$auto$opt_dff.cc:194:make_patterns_logic$1826  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1847  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1792 , \$auto$opt_dff.cc:194:make_patterns_logic$1794 , \$auto$opt_dff.cc:194:make_patterns_logic$1796 , \$auto$opt_dff.cc:194:make_patterns_logic$1798 , \$auto$opt_dff.cc:194:make_patterns_logic$1802 , \$auto$opt_dff.cc:194:make_patterns_logic$1835 , \$auto$opt_dff.cc:194:make_patterns_logic$1841 , \$auto$opt_dff.cc:194:make_patterns_logic$1843  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1854  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1802 , \$auto$opt_dff.cc:194:make_patterns_logic$1852  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1857  = & { \$procmux$1005_CMP , \$procmux$955_CMP , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1872  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1792 , \$auto$opt_dff.cc:194:make_patterns_logic$1794 , \$auto$opt_dff.cc:194:make_patterns_logic$1835 , \$auto$opt_dff.cc:194:make_patterns_logic$1866 , \$auto$opt_dff.cc:194:make_patterns_logic$1868 , \$auto$opt_dff.cc:194:make_patterns_logic$1870  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1875  = & { \$procmux$1005_CMP , \$520y , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1893  = & { \$procmux$1003_CMP , \$520y , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1990  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1986 , \$auto$opt_dff.cc:194:make_patterns_logic$1988  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$1998  = & { \$auto$opt_dff.cc:194:make_patterns_logic$1994 , \$auto$opt_dff.cc:194:make_patterns_logic$1996  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$2005  = & { \$auto$opt_dff.cc:194:make_patterns_logic$2001 , \$auto$opt_dff.cc:194:make_patterns_logic$2003  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$2026  = & { \$auto$opt_dff.cc:194:make_patterns_logic$2022 , \$auto$opt_dff.cc:194:make_patterns_logic$2024  };
  assign \$auto$opt_dff.cc:219:make_patterns_logic$2036  = & { \$auto$opt_dff.cc:194:make_patterns_logic$2032 , \$auto$opt_dff.cc:194:make_patterns_logic$2034  };
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4] = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3] = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1649  = | \u_rv_timer.u_reg.addr_hit [3:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1653  = | { \u_pwm.u_reg.addr_hit [3:2], \u_pwm.u_reg.addr_hit [0] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$1655  = | \u_rv_timer.u_reg.addr_hit [4:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1659  = | \u_pwm.u_reg.addr_hit [5:3];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1663  = | \u_pwm.u_reg.addr_hit [5:1];
  assign \$217y  = | \u_pwm.u_reg.addr_hit [5:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1667  = | \u_pwm.u_reg.addr_hit [4:1];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1669  = | { \u_pwm.u_reg.addr_hit [5:3], \u_pwm.u_reg.addr_hit [1] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$1671  = | { \u_pwm.u_reg.addr_hit [4:3], \u_pwm.u_reg.addr_hit [0] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$1673  = | \u_pwm.u_reg.addr_hit [4:3];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1679  = | { \$procmux$1003_CMP , \$procmux$1001_CMP  };
  always @(posedge clk_i)
    \u_gpio.data_in_q  <= { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.diff_ctr_q  <= 2'h0;
    else \u_gpio.gen_filter[0].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[0].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.filter_q  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.diff_ctr_q  <= 2'h0;
    else \u_gpio.gen_filter[1].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[1].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.filter_q  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_data_in.q  <= 2'h0;
    else \u_gpio.u_reg.u_data_in.q  <= { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_gpio.u_reg.u_reg_if.outstanding_q  <= \$procmux$261_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q  <= 1'h0;
    else \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q  <= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q  <= 1'h0;
    else \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q  <= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param0_qe.q_o  <= \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1154y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level  <= \$1137y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg0_qe.q_o  <= \u_pwm.u_reg.u_cfg0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$879y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  <= \$862y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle0_qe.q_o  <= \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1099y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level  <= \$1082y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert0_qe.q_o  <= \u_pwm.u_reg.u_invert0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$989y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level  <= \$972y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en0_qe.q_o  <= \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$934y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  <= \$917y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param0_qe.q_o  <= \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1044y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level  <= \$1027y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_pwm.u_reg.u_reg_if.outstanding_q  <= \$procmux$450_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.gen_harts[0].u_core.tick_count  <= 12'h000;
    else \u_rv_timer.gen_harts[0].u_core.tick_count  <= \$procmux$460_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o  <= 1'h0;
    else \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o  <= \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  <= 1'h0;
    else \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  <= \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_rv_timer.u_reg.u_reg_if.outstanding_q  <= \$procmux$431_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  <= 1'h0;
    else \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  <= \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_uart.u_reg.u_reg_if.outstanding_q  <= \$procmux$1640_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_wdata0_qe.q_o  <= 1'h0;
    else \u_uart.u_reg.u_wdata0_qe.q_o  <= \u_uart.u_reg.u_wdata0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.nco_sum_q  <= 17'h00000;
    else \u_uart.u_uart_core.nco_sum_q  <= \$285y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_sync_q1  <= 1'h1;
    else \u_uart.u_uart_core.rx_sync_q1  <= \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_sync_q2  <= 1'h1;
    else \u_uart.u_uart_core.rx_sync_q2  <= \u_uart.u_uart_core.rx_sync_q1 ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.sync_rx.u_sync_1.q_o  <= 1'h1;
    else \u_uart.u_uart_core.sync_rx.u_sync_1.q_o  <= cio_rx_i;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  <= 1'h1;
    else \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  <= \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.tx_out_q  <= 1'h1;
    else \u_uart.u_uart_core.tx_out_q  <= \$procmux$1287_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  <= 1'h1;
    else \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  <= \$procmux$1124_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  <= 1'h1;
    else \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  <= \$procmux$1395_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.rx_valid_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_rx.rx_valid_q  <= \$438y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.tick_baud_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_rx.tick_baud_q  <= \u_uart.u_uart_core.uart_rx.tick_baud_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.tick_baud_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_tx.tick_baud_q  <= \$procmux$1350_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  <= 1'h0;
    else \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  <= \$procmux$489_Y ;
  assign \$procmux$1007_CMP  = ! \u_uart.u_bridge.rxf_st_q ;
  assign \$procmux$1013_Y  = \$516y  ? 3'h1 : 3'hx;
  function [0:0] \$procmux$1018 ;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1018  = b[0:0];
      2'b1?:
        \$procmux$1018  = b[1:1];
      default:
        \$procmux$1018  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.req_d  = \$procmux$1018 (1'hx, { 1'h1, \$procmux$629_Y  }, { \$procmux$1020_CMP , \$procmux$1019_CMP  });
  function [0:0] \$procmux$1022 ;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1022  = b[0:0];
      3'b?1?:
        \$procmux$1022  = b[1:1];
      3'b1??:
        \$procmux$1022  = b[2:2];
      default:
        \$procmux$1022  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.we_d  = \$procmux$1022 (1'hx, { \$procmux$863_Y , \$procmux$689_Y , \$procmux$629_Y  }, { \$procmux$1003_CMP , \$procmux$1001_CMP , \$procmux$1019_CMP  });
  function [3:0] \$procmux$1031 ;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1031  = b[3:0];
      2'b1?:
        \$procmux$1031  = b[7:4];
      default:
        \$procmux$1031  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.be_d  = \$procmux$1031 (4'hx, { \$procmux$871_Y , \$procmux$696_Y  }, { \$procmux$1003_CMP , \$procmux$1001_CMP  });
  function [31:0] \$procmux$1038 ;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1038  = b[31:0];
      2'b1?:
        \$procmux$1038  = b[63:32];
      default:
        \$procmux$1038  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.wdata_d  = \$procmux$1038 (32'hxxxxxxxx, { \$procmux$879_Y , \$procmux$703_Y  }, { \$procmux$1003_CMP , \$procmux$1001_CMP  });
  function [31:0] \$procmux$1065 ;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1065  = b[31:0];
      2'b1?:
        \$procmux$1065  = b[63:32];
      default:
        \$procmux$1065  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.sh_d  = \$procmux$1065 (32'hxxxxxxxx, { 32'h00000000, \$procmux$710_Y  }, { \$procmux$1007_CMP , \$auto$opt_reduce.cc:137:opt_pmux$1679  });
  function [1:0] \$procmux$1074 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1074  = b[1:0];
      4'b??1?:
        \$procmux$1074  = b[3:2];
      4'b?1??:
        \$procmux$1074  = b[5:4];
      4'b1???:
        \$procmux$1074  = b[7:6];
      default:
        \$procmux$1074  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.idx_d  = \$procmux$1074 (2'hx, { 2'h0, \$procmux$983_Y , \$procmux$903_Y , \$procmux$717_Y  }, { \$procmux$1007_CMP , \$procmux$1005_CMP , \$procmux$1003_CMP , \$procmux$1001_CMP  });
  assign \$procmux$1001_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h3;
  assign \$procmux$1086_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  ? \$486y  : 5'hxx;
  assign \$procmux$1096_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4], 4'h0 } : \$procmux$1086_Y ;
  function [0:0] \$procmux$11 ;
    input [0:0] a;
    input [6:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        \$procmux$11  = b[0:0];
      7'b?????1?:
        \$procmux$11  = b[1:1];
      7'b????1??:
        \$procmux$11  = b[2:2];
      7'b???1???:
        \$procmux$11  = b[3:3];
      7'b??1????:
        \$procmux$11  = b[4:4];
      7'b?1?????:
        \$procmux$11  = b[5:5];
      7'b1??????:
        \$procmux$11  = b[6:6];
      default:
        \$procmux$11  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.rdata_i [0] = \$procmux$11 (1'h1, { \u_pwm.u_reg.u_regwen.q , \u_pwm.u_reg.u_cfg_cdc.src_q [0], \u_pwm.u_reg.u_pwm_en_cdc.src_q , \u_pwm.u_reg.u_invert_cdc.src_q , \u_pwm.u_reg.u_pwm_param_cdc.src_q [0], \u_pwm.u_reg.u_duty_cycle_cdc.src_q [0], \u_pwm.u_reg.u_blink_param_cdc.src_q [0] }, { \u_pwm.u_reg.addr_hit [0], \u_pwm.u_reg.addr_hit [1], \u_pwm.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3], \u_pwm.u_reg.addr_hit [4], \u_pwm.u_reg.addr_hit [5], \u_pwm.u_reg.addr_hit [6] });
  assign \$procmux$1103_Y  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i  ? 5'h00 : \$procmux$1096_Y ;
  assign \$procmux$1105_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  ? \$479y  : 5'hxx;
  assign \$procmux$1115_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [4], 4'h0 } : \$procmux$1105_Y ;
  assign \$procmux$1122_Y  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i  ? 5'h00 : \$procmux$1115_Y ;
  assign \$procmux$1124_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  ? \$453y  : 1'h0;
  assign \$procmux$1129_Y  = \$415y  ? 1'h1 : \$417y ;
  assign \$procmux$1140_Y  = \$415y  ? 4'h0 : \$416y ;
  assign \$procmux$1151_Y  = \$415y  ? 11'hxxx : { \u_uart.u_uart_core.uart_rx.rx , \u_uart.u_uart_core.uart_rx.sreg_q [10:1] };
  assign \$procmux$1162_Y  = \$412y  ? \$procmux$1129_Y  : 1'hx;
  assign \$procmux$1171_Y  = \$412y  ? \$procmux$1140_Y  : 4'hx;
  assign \$procmux$1180_Y  = \$412y  ? \$procmux$1151_Y  : 11'hxxx;
  assign \u_uart.u_uart_core.uart_rx.idle_d  = \$409y  ? 1'h0 : \$procmux$1162_Y ;
  assign \u_uart.u_uart_core.uart_rx.bit_cnt_d  = \$409y  ? \$360y  : \$procmux$1171_Y ;
  assign \u_uart.u_uart_core.uart_rx.sreg_d  = \$409y  ? 11'h000 : \$procmux$1180_Y ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud_d  = \$409y  ? 1'h0 : \$procmux$1223_Y ;
  assign \u_uart.u_uart_core.uart_rx.baud_div_d  = \$409y  ? 4'h8 : \$procmux$1228_Y ;
  assign \$procmux$1223_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$405y [4] : 1'h0;
  assign \$procmux$1228_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$405y [3:0] : 4'hx;
  assign \$procmux$1253_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$1258_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src  ? { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$1265_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$1253_Y ;
  assign \$procmux$1269_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$1258_Y ;
  assign \$procmux$1271_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$1278_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$1271_Y ;
  assign \$procmux$1287_Y  = \u_uart.u_reg.u_ctrl_slpbk.q  ? 1'h1 : \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \$procmux$1289_Y  = \$362y  ? \u_uart.u_uart_core.uart_tx.sreg_q [0] : 1'hx;
  assign \$procmux$1297_Y  = \$362y  ? { 1'h1, \u_uart.u_uart_core.uart_tx.sreg_q [10:1] } : 11'hxxx;
  assign \$procmux$1305_Y  = \$362y  ? \$363y  : 4'hx;
  assign \$procmux$1315_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? { 1'h1, \$359y , \u_uart.u_uart_core.tx_fifo_data , 1'h0 } : \$procmux$1297_Y ;
  assign \$procmux$1322_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? \$360y  : \$procmux$1305_Y ;
  assign \$procmux$1329_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? 1'hx : \$procmux$1289_Y ;
  assign \u_uart.u_uart_core.uart_tx.tx_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1329_Y  : 1'h1;
  assign \u_uart.u_uart_core.uart_tx.sreg_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1315_Y  : 11'h7ff;
  assign \u_uart.u_uart_core.uart_tx.bit_cnt_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1322_Y  : 4'h0;
  assign \$procmux$1347_Y  = \$1509y  ? \u_pwm.u_reg.u_duty_cycle_a_0.q  : \$1512y ;
  assign \$procmux$1350_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$351y [4] : 1'h0;
  assign \$procmux$1357_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  ? \$325y  : 4'hx;
  assign \$procmux$1367_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3], 3'h0 } : \$procmux$1357_Y ;
  assign \$procmux$1374_Y  = \u_uart.u_uart_core.u_uart_txfifo.clr_i  ? 4'h0 : \$procmux$1367_Y ;
  assign \$procmux$1376_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  ? \$318y  : 4'hx;
  assign \$procmux$1386_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [3], 3'h0 } : \$procmux$1376_Y ;
  assign \$procmux$1393_Y  = \u_uart.u_uart_core.u_uart_txfifo.clr_i  ? 4'h0 : \$procmux$1386_Y ;
  assign \$procmux$1395_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  ? \$292y  : 1'h0;
  function [7:0] \$procmux$1400 ;
    input [7:0] a;
    input [15:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1400  = b[7:0];
      2'b1?:
        \$procmux$1400  = b[15:8];
      default:
        \$procmux$1400  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [31:24] = \$procmux$1400 (8'hff, { \u_uart.u_reg.u_ctrl_nco.q [15:8], 8'h00 }, { \u_pwm.u_reg.addr_hit [0], \$auto$opt_reduce.cc:137:opt_pmux$1663  });
  assign \u_uart.u_reg.u_reg_if.rdata_i [15:8] = \$217y  ? 8'h00 : 8'hff;
  function [7:0] \$procmux$1416 ;
    input [7:0] a;
    input [23:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1416  = b[7:0];
      3'b?1?:
        \$procmux$1416  = b[15:8];
      3'b1??:
        \$procmux$1416  = b[23:16];
      default:
        \$procmux$1416  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [23:16] = \$procmux$1416 (8'hff, { \u_uart.u_reg.u_ctrl_nco.q [7:0], 11'h000, \u_uart.u_uart_core.rx_fifo_depth  }, { \u_pwm.u_reg.addr_hit [0], \$auto$opt_reduce.cc:137:opt_pmux$1667 , \u_pwm.u_reg.addr_hit [5] });
  function [1:0] \$procmux$1424 ;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1424  = b[1:0];
      3'b?1?:
        \$procmux$1424  = b[3:2];
      3'b1??:
        \$procmux$1424  = b[5:4];
      default:
        \$procmux$1424  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [7:6] = \$procmux$1424 (2'h3, { \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_bridge.rx_data_i [7:6], 2'h0 }, { \u_pwm.u_reg.addr_hit [0], \u_pwm.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1669  });
  function [0:0] \$procmux$1432 ;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1432  = b[0:0];
      4'b??1?:
        \$procmux$1432  = b[1:1];
      4'b?1??:
        \$procmux$1432  = b[2:2];
      4'b1???:
        \$procmux$1432  = b[3:3];
      default:
        \$procmux$1432  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [3] = \$procmux$1432 (1'h1, { \u_uart.u_reg.status_txidle_qs , \u_uart.u_bridge.rx_data_i [3], 1'h0, \u_uart.u_uart_core.tx_fifo_depth [3] }, { \u_pwm.u_reg.addr_hit [1], \u_pwm.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1671 , \u_pwm.u_reg.addr_hit [5] });
  function [0:0] \$procmux$1440 ;
    input [0:0] a;
    input [4:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1440  = b[0:0];
      5'b???1?:
        \$procmux$1440  = b[1:1];
      5'b??1??:
        \$procmux$1440  = b[2:2];
      5'b?1???:
        \$procmux$1440  = b[3:3];
      5'b1????:
        \$procmux$1440  = b[4:4];
      default:
        \$procmux$1440  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [2] = \$procmux$1440 (1'h1, { \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.status_txempty_qs , \u_uart.u_bridge.rx_data_i [2], 1'h0, \u_uart.u_uart_core.tx_fifo_depth [2] }, { \u_pwm.u_reg.addr_hit [0], \u_pwm.u_reg.addr_hit [1], \u_pwm.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1673 , \u_pwm.u_reg.addr_hit [5] });
  function [1:0] \$procmux$1448 ;
    input [1:0] a;
    input [9:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1448  = b[1:0];
      5'b???1?:
        \$procmux$1448  = b[3:2];
      5'b??1??:
        \$procmux$1448  = b[5:4];
      5'b?1???:
        \$procmux$1448  = b[7:6];
      5'b1????:
        \$procmux$1448  = b[9:8];
      default:
        \$procmux$1448  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [1:0] = \$procmux$1448 (2'h3, { \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txfull_qs , \u_uart.u_bridge.rx_data_i [1:0], 2'h0, \u_uart.u_uart_core.tx_fifo_depth [1:0] }, { \u_pwm.u_reg.addr_hit [0], \u_pwm.u_reg.addr_hit [1], \u_pwm.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1673 , \u_pwm.u_reg.addr_hit [5] });
  function [1:0] \$procmux$1456 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1456  = b[1:0];
      4'b??1?:
        \$procmux$1456  = b[3:2];
      4'b?1??:
        \$procmux$1456  = b[5:4];
      4'b1???:
        \$procmux$1456  = b[7:6];
      default:
        \$procmux$1456  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [5:4] = \$procmux$1456 (2'h3, { \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_bridge.rx_data_i [5:4], 2'h0 }, { \u_pwm.u_reg.addr_hit [0], \u_pwm.u_reg.addr_hit [1], \u_pwm.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1659  });
  assign \$procmux$1467_Y  = \$1474y  ? 1'h1 : 1'hx;
  assign \$procmux$1483_Y  = \$1471y  ? 1'h0 : \$procmux$1467_Y ;
  assign \$procmux$1496_Y  = \$1467y  ? 1'h0 : \$procmux$1483_Y ;
  assign \$procmux$1506_Y  = \$1464y  ? 1'h1 : \$procmux$1496_Y ;
  assign \$procmux$1513_Y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  ? \$1460y  : \$procmux$1506_Y ;
  assign \$procmux$1524_Y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  ? 16'h0000 : \$1448y ;
  function [7:0] \$procmux$154 ;
    input [7:0] a;
    input [39:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$154  = b[7:0];
      5'b???1?:
        \$procmux$154  = b[15:8];
      5'b??1??:
        \$procmux$154  = b[23:16];
      5'b?1???:
        \$procmux$154  = b[31:24];
      5'b1????:
        \$procmux$154  = b[39:32];
      default:
        \$procmux$154  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [31:24] = \$procmux$154 (8'hff, { 8'h00, \u_rv_timer.u_reg.u_timer_v_lower0.q [31:24], \u_rv_timer.u_reg.u_timer_v_upper0.q [31:24], \u_rv_timer.u_reg.u_compare_lower0_0.q [31:24], \u_rv_timer.u_reg.u_compare_upper0_0.q [31:24] }, { \$auto$opt_reduce.cc:137:opt_pmux$1655 , \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  assign \$procmux$1579_Y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  ? 16'h0000 : \$1428y ;
  assign \$procmux$1588_Y  = \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$1593_Y  = \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  ? { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$1600_Y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$1588_Y ;
  assign \$procmux$1604_Y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  ? { \u_pwm.u_reg.reg_wdata [31:30], 14'h0000, \u_pwm.u_reg.reg_wdata [15:0] } : \$procmux$1593_Y ;
  assign \$procmux$1606_Y  = \u_pwm.u_reg.u_pwm_param_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$1613_Y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$1606_Y ;
  function [0:0] \$procmux$1616 ;
    input [0:0] a;
    input [5:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$1616  = b[0:0];
      6'b????1?:
        \$procmux$1616  = b[1:1];
      6'b???1??:
        \$procmux$1616  = b[2:2];
      6'b??1???:
        \$procmux$1616  = b[3:3];
      6'b?1????:
        \$procmux$1616  = b[4:4];
      6'b1?????:
        \$procmux$1616  = b[5:5];
      default:
        \$procmux$1616  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.busy_i  = \$procmux$1616 (1'h0, { \u_pwm.u_reg.u_cfg_cdc.src_busy_q , \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q , \u_pwm.u_reg.u_invert_cdc.src_busy_q , \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q , \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q , \u_pwm.u_reg.u_blink_param_cdc.src_busy_q  }, { \u_pwm.u_reg.addr_hit [1], \u_pwm.u_reg.addr_hit [2], \u_pwm.u_reg.addr_hit [3], \u_pwm.u_reg.addr_hit [4], \u_pwm.u_reg.addr_hit [5], \u_pwm.u_reg.addr_hit [6] });
  assign \$procmux$1640_Y  = \u_uart.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  function [3:0] \$procmux$165 ;
    input [3:0] a;
    input [19:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$165  = b[3:0];
      5'b???1?:
        \$procmux$165  = b[7:4];
      5'b??1??:
        \$procmux$165  = b[11:8];
      5'b?1???:
        \$procmux$165  = b[15:12];
      5'b1????:
        \$procmux$165  = b[19:16];
      default:
        \$procmux$165  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [15:12] = \$procmux$165 (4'hf, { 4'h0, \u_rv_timer.u_reg.u_timer_v_lower0.q [15:12], \u_rv_timer.u_reg.u_timer_v_upper0.q [15:12], \u_rv_timer.u_reg.u_compare_lower0_0.q [15:12], \u_rv_timer.u_reg.u_compare_upper0_0.q [15:12] }, { \$auto$opt_reduce.cc:137:opt_pmux$1655 , \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [10:0] \$procmux$176 ;
    input [10:0] a;
    input [65:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$176  = b[10:0];
      6'b????1?:
        \$procmux$176  = b[21:11];
      6'b???1??:
        \$procmux$176  = b[32:22];
      6'b??1???:
        \$procmux$176  = b[43:33];
      6'b?1????:
        \$procmux$176  = b[54:44];
      6'b1?????:
        \$procmux$176  = b[65:55];
      default:
        \$procmux$176  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [11:1] = \$procmux$176 (11'h7ff, { 11'h000, \u_rv_timer.u_reg.u_cfg0_prescale.q [11:1], \u_rv_timer.u_reg.u_timer_v_lower0.q [11:1], \u_rv_timer.u_reg.u_timer_v_upper0.q [11:1], \u_rv_timer.u_reg.u_compare_lower0_0.q [11:1], \u_rv_timer.u_reg.u_compare_upper0_0.q [11:1] }, { \$auto$opt_reduce.cc:137:opt_pmux$1649 , \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [0:0] \$procmux$187 ;
    input [0:0] a;
    input [8:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        \$procmux$187  = b[0:0];
      9'b???????1?:
        \$procmux$187  = b[1:1];
      9'b??????1??:
        \$procmux$187  = b[2:2];
      9'b?????1???:
        \$procmux$187  = b[3:3];
      9'b????1????:
        \$procmux$187  = b[4:4];
      9'b???1?????:
        \$procmux$187  = b[5:5];
      9'b??1??????:
        \$procmux$187  = b[6:6];
      9'b?1???????:
        \$procmux$187  = b[7:7];
      9'b1????????:
        \$procmux$187  = b[8:8];
      default:
        \$procmux$187  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [0] = \$procmux$187 (1'h1, { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , 1'h0, \u_rv_timer.u_reg.u_cfg0_prescale.q [0], \u_rv_timer.u_reg.u_timer_v_lower0.q [0], \u_rv_timer.u_reg.u_timer_v_upper0.q [0], \u_rv_timer.u_reg.u_compare_lower0_0.q [0], \u_rv_timer.u_reg.u_compare_upper0_0.q [0] }, { \u_rv_timer.u_reg.addr_hit [0], \u_rv_timer.u_reg.addr_hit [1], \u_rv_timer.u_reg.addr_hit [2], \u_rv_timer.u_reg.addr_hit [3], \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [7:0] \$procmux$198 ;
    input [7:0] a;
    input [47:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$198  = b[7:0];
      6'b????1?:
        \$procmux$198  = b[15:8];
      6'b???1??:
        \$procmux$198  = b[23:16];
      6'b??1???:
        \$procmux$198  = b[31:24];
      6'b?1????:
        \$procmux$198  = b[39:32];
      6'b1?????:
        \$procmux$198  = b[47:40];
      default:
        \$procmux$198  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [23:16] = \$procmux$198 (8'hff, { 8'h00, \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_timer_v_lower0.q [23:16], \u_rv_timer.u_reg.u_timer_v_upper0.q [23:16], \u_rv_timer.u_reg.u_compare_lower0_0.q [23:16], \u_rv_timer.u_reg.u_compare_upper0_0.q [23:16] }, { \$auto$opt_reduce.cc:137:opt_pmux$1649 , \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [30:0] \$procmux$2 ;
    input [30:0] a;
    input [154:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$2  = b[30:0];
      5'b???1?:
        \$procmux$2  = b[61:31];
      5'b??1??:
        \$procmux$2  = b[92:62];
      5'b?1???:
        \$procmux$2  = b[123:93];
      5'b1????:
        \$procmux$2  = b[154:124];
      default:
        \$procmux$2  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.rdata_i [31:1] = \$procmux$2 (31'h7fffffff, { \u_pwm.u_reg.u_cfg_cdc.src_q [31:1], 31'h00000000, \u_pwm.u_reg.u_pwm_param_cdc.src_q [31:1], \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:1], \u_pwm.u_reg.u_blink_param_cdc.src_q [31:1] }, { \u_pwm.u_reg.addr_hit [1], \$auto$opt_reduce.cc:137:opt_pmux$1653 , \u_pwm.u_reg.addr_hit [4], \u_pwm.u_reg.addr_hit [5], \u_pwm.u_reg.addr_hit [6] });
  assign \$procmux$208_Y  = \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$213_Y  = \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  ? \u_pwm.u_reg.u_pwm_en.q  : 1'hx;
  assign \$procmux$220_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$208_Y ;
  assign \$procmux$224_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata [0] : \$procmux$213_Y ;
  assign \$procmux$226_Y  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$233_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$226_Y ;
  assign \$procmux$261_Y  = \u_gpio.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$267_Y  = \u_gpio.u_reg.masked_oe_lower_qe  ? \$1620y  : 1'hx;
  assign \$procmux$276_Y  = \u_gpio.u_reg.masked_oe_upper_qe  ? \$1616y  : 1'hx;
  assign \$procmux$283_Y  = \u_gpio.u_reg.masked_oe_upper_qe  ? 1'hx : \$procmux$267_Y ;
  assign \$procmux$290_Y  = \u_gpio.u_reg.direct_oe_flds_we  ? \u_gpio.u_reg.reg_wdata [1:0] : { \$procmux$276_Y , \$procmux$283_Y  };
  assign \$procmux$292_Y  = \u_gpio.u_reg.masked_out_lower_qe  ? \$1606y  : 1'hx;
  assign \$procmux$301_Y  = \u_gpio.u_reg.masked_out_upper_qe  ? \$1602y  : 1'hx;
  assign \$procmux$308_Y  = \u_gpio.u_reg.masked_out_upper_qe  ? 1'hx : \$procmux$292_Y ;
  assign \$procmux$315_Y  = \u_gpio.u_reg.direct_out_flds_we  ? \u_gpio.u_reg.reg_wdata [1:0] : { \$procmux$301_Y , \$procmux$308_Y  };
  assign \$procmux$317_Y  = \u_pwm.u_reg.u_cfg_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$322_Y  = \u_pwm.u_reg.u_cfg_cdc.dst_to_src  ? { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  } : 32'hxxxxxxxx;
  assign \$procmux$329_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$317_Y ;
  assign \$procmux$333_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$322_Y ;
  assign \$procmux$335_Y  = \u_pwm.u_reg.u_cfg_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$342_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$335_Y ;
  assign \$procmux$344_Y  = \u_pwm.u_reg.u_blink_param_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$349_Y  = \u_pwm.u_reg.u_blink_param_cdc.dst_to_src  ? { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$356_Y  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$344_Y ;
  assign \$procmux$360_Y  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$349_Y ;
  assign \$procmux$398_Y  = \u_pwm.u_reg.u_blink_param_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$405_Y  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$398_Y ;
  assign \$procmux$431_Y  = \u_rv_timer.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$450_Y  = \u_pwm.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$453_Y  = \$2004y  ? 12'h000 : \$2005y ;
  assign \$procmux$460_Y  = \u_rv_timer.u_reg.u_ctrl.q  ? \$procmux$453_Y  : 12'h000;
  assign \$procmux$467_Y  = \$708y  ? 1'h1 : 1'h0;
  assign \$procmux$489_Y  = \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  ? 1'h0 : \$procmux$467_Y ;
  assign \xbar.u_s1n_6.tl_t_p  = \$689y  ? { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  } : \$procmux$511_Y ;
  assign \$procmux$511_Y  = \$687y  ? { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  } : \$procmux$514_Y ;
  assign \$procmux$514_Y  = \$685y  ? { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  } : \$procmux$516_Y ;
  assign \$procmux$516_Y  = \$683y  ? { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  } : { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.hfifo_reqready  = \xbar.u_s1n_6.hold_all_requests  ? 1'h0 : \$procmux$522_Y ;
  assign \$procmux$522_Y  = \$665y  ? \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  : \$procmux$525_Y ;
  assign \$procmux$525_Y  = \$659y  ? \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  : \$procmux$528_Y ;
  assign \$procmux$528_Y  = \$653y  ? \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  : \$procmux$530_Y ;
  assign \$procmux$530_Y  = \$647y  ? \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  : \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0];
  assign \$procmux$534_Y  = \xbar.u_s1n_6.tl_t_p [65] ? \$622y  : 9'hxxx;
  assign \$procmux$542_Y  = \xbar.u_s1n_6.accept_t_req  ? \$procmux$545_Y  : \$procmux$534_Y ;
  assign \$procmux$545_Y  = \xbar.u_s1n_6.tl_t_p [65] ? 9'hxxx : \$620y ;
  assign \$procmux$553_Y  = \$607y  ? 3'h3 : 3'h5;
  assign \$procmux$566_Y  = \$605y  ? 3'h2 : \$procmux$553_Y ;
  assign \$procmux$576_Y  = \$603y  ? 3'h1 : \$procmux$566_Y ;
  assign \xbar.u_s1n_6.dev_select_t  = \$601y  ? 3'h0 : \$procmux$576_Y ;
  assign \$procmux$588_Y  = \uart_host_adapter.g_multiple_reqs.source_q  ? 1'h0 : \$583y ;
  assign \u_gpio.u_reg.u_reg_if.rdata_i [31:2] = \$1845y  ? 30'h00000000 : 30'h3fffffff;
  function [1:0] \$procmux$613 ;
    input [1:0] a;
    input [29:0] b;
    input [14:0] s;
    casez (s) // synopsys parallel_case
      15'b??????????????1:
        \$procmux$613  = b[1:0];
      15'b?????????????1?:
        \$procmux$613  = b[3:2];
      15'b????????????1??:
        \$procmux$613  = b[5:4];
      15'b???????????1???:
        \$procmux$613  = b[7:6];
      15'b??????????1????:
        \$procmux$613  = b[9:8];
      15'b?????????1?????:
        \$procmux$613  = b[11:10];
      15'b????????1??????:
        \$procmux$613  = b[13:12];
      15'b???????1???????:
        \$procmux$613  = b[15:14];
      15'b??????1????????:
        \$procmux$613  = b[17:16];
      15'b?????1?????????:
        \$procmux$613  = b[19:18];
      15'b????1??????????:
        \$procmux$613  = b[21:20];
      15'b???1???????????:
        \$procmux$613  = b[23:22];
      15'b??1????????????:
        \$procmux$613  = b[25:24];
      15'b?1?????????????:
        \$procmux$613  = b[27:26];
      15'b1??????????????:
        \$procmux$613  = b[29:28];
      default:
        \$procmux$613  = a;
    endcase
  endfunction
  assign \u_gpio.u_reg.u_reg_if.rdata_i [1:0] = \$procmux$613 (2'h3, { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , 2'h0, \u_gpio.u_reg.u_data_in.q , \u_gpio.cio_gpio_q , 1'h0, \u_gpio.cio_gpio_q [0], 1'h0, \u_gpio.cio_gpio_q [1], \u_gpio.cio_gpio_en_q , 1'h0, \u_gpio.cio_gpio_en_q [0], 1'h0, \u_gpio.cio_gpio_en_q [1], \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \u_gpio.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [7], \u_gpio.u_reg.addr_hit [8], \u_gpio.u_reg.addr_hit [9], \u_gpio.u_reg.addr_hit [10], \u_gpio.u_reg.addr_hit [11], \u_gpio.u_reg.addr_hit [12], \u_gpio.u_reg.addr_hit [13], \u_gpio.u_reg.addr_hit [14] });
  assign \$procmux$629_Y  = \$562y  ? 1'h0 : 1'hx;
  assign \$procmux$637_Y  = \$562y  ? 3'h0 : 3'hx;
  assign \$procmux$644_Y  = \$520y  ? 1'h1 : 1'hx;
  assign \$procmux$653_Y  = \$520y  ? \u_uart.u_bridge.bebyte_q [3:0] : 4'hx;
  assign \$procmux$662_Y  = \$520y  ? { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] } : 32'hxxxxxxxx;
  assign \$procmux$671_Y  = \$520y  ? 2'hx : \$521y ;
  assign \$procmux$680_Y  = \$520y  ? 3'h4 : 3'hx;
  assign \$procmux$689_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$644_Y  : 1'hx;
  assign \$procmux$696_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$653_Y  : 4'hx;
  assign \$procmux$703_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$662_Y  : 32'hxxxxxxxx;
  assign \$procmux$71_Y  = \u_pwm.u_reg.u_invert_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$710_Y  = \u_uart.u_bridge.rx_valid_i  ? { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] } : 32'hxxxxxxxx;
  assign \$procmux$717_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$671_Y  : 2'hx;
  assign \$procmux$724_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$680_Y  : 3'hx;
  assign \$procmux$733_Y  = \$520y  ? \$procmux$796_Y  : \$521y ;
  assign \$procmux$744_Y  = \$529y  ? 3'h3 : 3'h4;
  assign \$procmux$757_Y  = \$529y  ? 1'hx : 1'h0;
  assign \$procmux$76_Y  = \u_pwm.u_reg.u_invert_cdc.dst_to_src  ? \u_pwm.u_reg.u_invert.q  : 1'hx;
  assign \$procmux$770_Y  = \$529y  ? 4'hx : 4'hf;
  assign \$procmux$783_Y  = \$529y  ? 32'hxxxxxxxx : 32'd0;
  assign \$procmux$796_Y  = \$529y  ? 2'h0 : 2'hx;
  assign \$procmux$809_Y  = \$520y  ? \$procmux$757_Y  : 1'hx;
  assign \$procmux$820_Y  = \$520y  ? \$procmux$770_Y  : 4'hx;
  assign \$procmux$83_Y  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$71_Y ;
  assign \$procmux$831_Y  = \$520y  ? \$procmux$783_Y  : 32'hxxxxxxxx;
  assign \$procmux$1003_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h2;
  assign \$procmux$853_Y  = \$520y  ? \$procmux$744_Y  : 3'hx;
  assign \$procmux$863_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$809_Y  : 1'hx;
  assign \$procmux$87_Y  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata [0] : \$procmux$76_Y ;
  assign \$procmux$871_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$820_Y  : 4'hx;
  assign \$procmux$879_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$831_Y  : 32'hxxxxxxxx;
  assign \$procmux$89_Y  = \u_pwm.u_reg.u_invert_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$903_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$733_Y  : 2'hx;
  assign \$procmux$911_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$853_Y  : 3'hx;
  assign \$procmux$920_Y  = \$520y  ? 2'h0 : \$521y ;
  assign \$procmux$932_Y  = \$520y  ? 3'h2 : 3'hx;
  assign \$520y  = \u_uart.u_bridge.idx_q  == 2'h3;
  assign \$procmux$955_CMP  = \u_uart.u_bridge.idx_q  == 2'h1;
  assign \$procmux$96_Y  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$89_Y ;
  assign \$procmux$983_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$920_Y  : 2'hx;
  assign \$procmux$1005_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h1;
  assign \$procmux$992_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$932_Y  : 3'hx;
  function [2:0] \$procmux$997 ;
    input [2:0] a;
    input [17:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$997  = b[2:0];
      6'b????1?:
        \$procmux$997  = b[5:3];
      6'b???1??:
        \$procmux$997  = b[8:6];
      6'b??1???:
        \$procmux$997  = b[11:9];
      6'b?1????:
        \$procmux$997  = b[14:12];
      6'b1?????:
        \$procmux$997  = b[17:15];
      default:
        \$procmux$997  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.rxf_st_d  = \$procmux$997 (3'hx, { \$procmux$1013_Y , \$procmux$992_Y , \$procmux$911_Y , \$procmux$724_Y , 3'h5, \$procmux$637_Y  }, { \$procmux$1007_CMP , \$procmux$1005_CMP , \$procmux$1003_CMP , \$procmux$1001_CMP , \$procmux$1020_CMP , \$procmux$1019_CMP  });
  assign \$procmux$1019_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h5;
  assign \$procmux$1020_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h4;
  assign cio_gpio_en_o = \u_gpio.cio_gpio_en_q ;
  assign cio_gpio_o = \u_gpio.cio_gpio_q ;
  assign cio_pwm_en_o = 1'h1;
  assign cio_pwm_o = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign cio_tx_en_o = 1'h1;
  assign tl_gpio_d2h = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign { tl_gpio_h2d[108:24], tl_gpio_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , 1'h1 };
  assign tl_pwm_d2h = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign { tl_pwm_h2d[108:24], tl_pwm_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , 1'h1 };
  assign tl_rv_timer_d2h = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign { tl_rv_timer_h2d[108:24], tl_rv_timer_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , 1'h1 };
  assign tl_uart_d2h = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign { tl_uart_h2d[108:24], tl_uart_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , 1'h1 };
  assign { tl_uart_host_d2h[65:48], tl_uart_host_d2h[15:0] } = { \xbar.u_s1n_6.tl_t_p [65:48], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign tl_uart_host_h2d = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \u_gpio.cio_gpio_en_o  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.cio_gpio_i  = cio_gpio_i;
  assign \u_gpio.cio_gpio_o  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.clk_i  = clk_i;
  assign \u_gpio.data_in_d  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_combined  = \u_gpio.intr_hw.event_intr_i ;
  assign \u_gpio.gen_filter[0].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [0];
  assign \u_gpio.gen_filter[0].u_filter.filter_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.filter_synced  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[0].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.thresh_i  = 2'h3;
  assign \u_gpio.gen_filter[1].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [1];
  assign \u_gpio.gen_filter[1].u_filter.filter_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.filter_synced  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[1].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.thresh_i  = 2'h3;
  assign \u_gpio.hw2reg  = { \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d , \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o , 1'h1, \u_gpio.cio_gpio_q , \u_gpio.cio_gpio_q [0], 1'h0, \u_gpio.cio_gpio_q [1], 1'h0, \u_gpio.cio_gpio_en_q , \u_gpio.cio_gpio_en_q [0], 1'h0, \u_gpio.cio_gpio_en_q [1], 1'h0 };
  assign \u_gpio.intr_hw.clk_i  = clk_i;
  assign \u_gpio.intr_hw.hw2reg_intr_state_d_o  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  assign \u_gpio.intr_hw.hw2reg_intr_state_de_o  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \u_gpio.intr_hw.reg2hw_intr_enable_q_i  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.intr_hw.reg2hw_intr_state_q_i  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.intr_hw.reg2hw_intr_test_q_i  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.intr_hw.rst_ni  = rst_ni;
  assign \u_gpio.intr_hw.status  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.reg2hw  = { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.direct_out_flds_we , \u_gpio.u_reg.reg_wdata [1], \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.reg_wdata [0], \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.reg_wdata [1], \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.reg_wdata [0], \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.direct_oe_flds_we , \u_gpio.u_reg.reg_wdata [1], \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.reg_wdata [0], \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.reg_wdata [1], \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.reg_wdata [0], \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  };
  assign \u_gpio.rst_ni  = rst_ni;
  assign \u_gpio.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.clk_i  = clk_i;
  assign \u_gpio.u_reg.ctrl_en_input_filter_qs  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.ctrl_en_input_filter_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.data_in_qs  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.devmode_i  = 1'h1;
  assign \u_gpio.u_reg.direct_oe_qe  = \u_gpio.u_reg.direct_oe_flds_we ;
  assign \u_gpio.u_reg.direct_oe_qs  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.direct_oe_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.direct_oe_we  = \u_gpio.u_reg.direct_oe_flds_we ;
  assign \u_gpio.u_reg.direct_out_qe  = \u_gpio.u_reg.direct_out_flds_we ;
  assign \u_gpio.u_reg.direct_out_qs  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.direct_out_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.direct_out_we  = \u_gpio.u_reg.direct_out_flds_we ;
  assign \u_gpio.u_reg.hw2reg  = { \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d , \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o , 1'h1, \u_gpio.cio_gpio_q , \u_gpio.cio_gpio_q [0], 1'h0, \u_gpio.cio_gpio_q [1], 1'h0, \u_gpio.cio_gpio_en_q , \u_gpio.cio_gpio_en_q [0], 1'h0, \u_gpio.cio_gpio_en_q [1], 1'h0 };
  assign \u_gpio.u_reg.intr_ctrl_en_falling_qs  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_falling_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_ctrl_en_rising_qs  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_rising_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_enable_qs  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.intr_enable_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_state_qs  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.intr_state_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_state_we  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  assign \u_gpio.u_reg.intr_test_flds_we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.intr_test_qe  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.intr_test_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_test_we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.masked_oe_lower_data_qs  = \u_gpio.cio_gpio_en_q [0];
  assign \u_gpio.u_reg.masked_oe_lower_data_wd  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.masked_oe_lower_flds_we  = { \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.masked_oe_lower_qe  };
  assign \u_gpio.u_reg.masked_oe_lower_mask_qs  = 1'h0;
  assign \u_gpio.u_reg.masked_oe_lower_mask_wd  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.masked_oe_lower_we  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.masked_oe_upper_data_qs  = \u_gpio.cio_gpio_en_q [1];
  assign \u_gpio.u_reg.masked_oe_upper_data_wd  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.masked_oe_upper_flds_we  = { \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.masked_oe_upper_qe  };
  assign \u_gpio.u_reg.masked_oe_upper_mask_qs  = 1'h0;
  assign \u_gpio.u_reg.masked_oe_upper_mask_wd  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.masked_oe_upper_we  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.masked_out_lower_data_qs  = \u_gpio.cio_gpio_q [0];
  assign \u_gpio.u_reg.masked_out_lower_data_wd  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.masked_out_lower_flds_we  = { \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.masked_out_lower_qe  };
  assign \u_gpio.u_reg.masked_out_lower_mask_wd  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.masked_out_lower_we  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.masked_out_upper_data_qs  = \u_gpio.cio_gpio_q [1];
  assign \u_gpio.u_reg.masked_out_upper_data_wd  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.masked_out_upper_flds_we  = { \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.masked_out_upper_qe  };
  assign \u_gpio.u_reg.masked_out_upper_mask_wd  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.masked_out_upper_we  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.reg2hw  = { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.direct_out_flds_we , \u_gpio.u_reg.reg_wdata [1], \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.reg_wdata [0], \u_gpio.u_reg.masked_out_lower_qe , \u_gpio.u_reg.reg_wdata [1], \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.reg_wdata [0], \u_gpio.u_reg.masked_out_upper_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.direct_oe_flds_we , \u_gpio.u_reg.reg_wdata [1], \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.reg_wdata [0], \u_gpio.u_reg.masked_oe_lower_qe , \u_gpio.u_reg.reg_wdata [1], \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.reg_wdata [0], \u_gpio.u_reg.masked_oe_upper_qe , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  };
  assign \u_gpio.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_gpio.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_gpio.u_reg.reg_busy  = 1'h0;
  assign \u_gpio.u_reg.reg_rdata  = \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \u_gpio.u_reg.reg_rdata_next  = \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \u_gpio.u_reg.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.shadow_busy  = 1'h0;
  assign \u_gpio.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_o_pre  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_reg_d2h  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.d  = 2'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.de  = 1'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.qe  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.qs  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.we  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.q  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.we  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_en  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_data_in.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_data_in.d  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.de  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.ds  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.qe  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.qs  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_data_in.wd  = 2'h0;
  assign \u_gpio.u_reg.u_data_in.we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_data  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.d  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.de  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_q  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_wd  = 2'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.q  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wd  = 2'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_data  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_en  = 1'h1;
  assign \u_gpio.u_reg.u_direct_oe.d  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_oe.ds  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_oe.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_direct_oe.qe  = \u_gpio.u_reg.direct_oe_flds_we ;
  assign \u_gpio.u_reg.u_direct_oe.qs  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_oe.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_direct_oe.we  = \u_gpio.u_reg.direct_oe_flds_we ;
  assign \u_gpio.u_reg.u_direct_out.d  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_out.ds  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_out.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_direct_out.qe  = \u_gpio.u_reg.direct_out_flds_we ;
  assign \u_gpio.u_reg.u_direct_out.qs  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_out.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_direct_out.we  = \u_gpio.u_reg.direct_out_flds_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.qe  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.qs  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.we  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_en_falling_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qe  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.we  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_en_lvlhigh_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qe  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.we  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_en_lvllow_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.qe  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.qs  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.we  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_en_rising_we ;
  assign \u_gpio.u_reg.u_intr_enable.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_enable.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_enable.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_enable.qe  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.qs  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_enable.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.we  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.we  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_state.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_state.d  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  assign \u_gpio.u_reg.u_intr_state.de  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \u_gpio.u_reg.u_intr_state.qs  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.u_intr_state.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_state.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_state.we  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  assign \u_gpio.u_reg.u_intr_state.wr_en  = \u_gpio.u_reg.u_intr_state.qe ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_data  = \u_gpio.u_reg.u_intr_state.wr_data ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_en  = \u_gpio.u_reg.u_intr_state.qe ;
  assign \u_gpio.u_reg.u_intr_test.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_test.ds  = 2'h0;
  assign \u_gpio.u_reg.u_intr_test.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_test.qe  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.u_intr_test.qre  = 1'h0;
  assign \u_gpio.u_reg.u_intr_test.qs  = 2'h0;
  assign \u_gpio.u_reg.u_intr_test.re  = 1'h0;
  assign \u_gpio.u_reg.u_intr_test.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_test.we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.u_masked_oe_lower_data.d  = \u_gpio.cio_gpio_en_q [0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.ds  = \u_gpio.cio_gpio_en_q [0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.q  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.qe  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.u_masked_oe_lower_data.qs  = \u_gpio.cio_gpio_en_q [0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.wd  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.u_masked_oe_lower_data.we  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.d  = 1'h0;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.ds  = 1'h0;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.q  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.qe  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.qs  = 1'h0;
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.wd  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.u_masked_oe_lower_mask.we  = \u_gpio.u_reg.masked_oe_lower_qe ;
  assign \u_gpio.u_reg.u_masked_oe_upper_data.d  = \u_gpio.cio_gpio_en_q [1];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.ds  = \u_gpio.cio_gpio_en_q [1];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.q  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.qe  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.u_masked_oe_upper_data.qs  = \u_gpio.cio_gpio_en_q [1];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.wd  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.u_masked_oe_upper_data.we  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.d  = 1'h0;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.ds  = 1'h0;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.q  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.qe  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.qs  = 1'h0;
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.wd  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.u_masked_oe_upper_mask.we  = \u_gpio.u_reg.masked_oe_upper_qe ;
  assign \u_gpio.u_reg.u_masked_out_lower_data.d  = \u_gpio.cio_gpio_q [0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.ds  = \u_gpio.cio_gpio_q [0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.q  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.qe  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.u_masked_out_lower_data.qs  = \u_gpio.cio_gpio_q [0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.wd  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.u_masked_out_lower_data.we  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.d  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.ds  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.q  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.u_masked_out_lower_mask.qe  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.qre  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.qs  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.re  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_lower_mask.wd  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.u_masked_out_lower_mask.we  = \u_gpio.u_reg.masked_out_lower_qe ;
  assign \u_gpio.u_reg.u_masked_out_upper_data.d  = \u_gpio.cio_gpio_q [1];
  assign \u_gpio.u_reg.u_masked_out_upper_data.ds  = \u_gpio.cio_gpio_q [1];
  assign \u_gpio.u_reg.u_masked_out_upper_data.q  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.u_masked_out_upper_data.qe  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.u_masked_out_upper_data.qs  = \u_gpio.cio_gpio_q [1];
  assign \u_gpio.u_reg.u_masked_out_upper_data.wd  = \u_gpio.u_reg.reg_wdata [0];
  assign \u_gpio.u_reg.u_masked_out_upper_data.we  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.d  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.ds  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.q  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.u_masked_out_upper_mask.qe  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.qre  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.qs  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.re  = 1'h0;
  assign \u_gpio.u_reg.u_masked_out_upper_mask.wd  = \u_gpio.u_reg.reg_wdata [1];
  assign \u_gpio.u_reg.u_masked_out_upper_mask.we  = \u_gpio.u_reg.masked_out_upper_qe ;
  assign \u_gpio.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [5:2], 2'h0 };
  assign \u_gpio.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_gpio.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_reg_if.d_ack  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_gpio.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.error  = \u_gpio.u_reg.u_reg_if.error_q ;
  assign \u_gpio.u_reg.u_reg_if.error_i  = \u_gpio.u_reg.reg_error ;
  assign \u_gpio.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.rd_req  = \u_gpio.u_reg.reg_re ;
  assign \u_gpio.u_reg.u_reg_if.rdata  = \u_gpio.u_reg.u_reg_if.rdata_q ;
  assign \u_gpio.u_reg.u_reg_if.re_o  = \u_gpio.u_reg.reg_re ;
  assign \u_gpio.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_reg_if.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.tl_o_pre  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_gpio.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.wdata_o  = \u_gpio.u_reg.reg_wdata ;
  assign \u_gpio.u_reg.u_reg_if.we_o  = \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_reg_if.wr_req  = \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_rsp_intg_gen.tl_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_rsp_intg_gen.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_pwm.cio_pwm_en_o  = 1'h1;
  assign \u_pwm.cio_pwm_o  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign \u_pwm.clk_i  = clk_i;
  assign \u_pwm.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_invert.q , \u_pwm.u_reg.u_invert0_qe.q_o , \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_a_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o , \u_pwm.u_reg.u_blink_param_x_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o  };
  assign \u_pwm.rst_ni  = rst_ni;
  assign \u_pwm.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_pwm_core.clk_core_i  = clk_i;
  assign \u_pwm.u_pwm_core.clk_div  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_pwm_core.clr_blink_cntr  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  assign \u_pwm.u_pwm_core.clr_phase_cntr  = \u_pwm.u_reg.u_cfg0_qe.q_o ;
  assign \u_pwm.u_pwm_core.cntr_en  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_pwm_core.cycle_end  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \u_pwm.u_pwm_core.dc_resn  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_en_i  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_x_i  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_y_i  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clk_i  = clk_i;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_resn_i  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_a_i  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_b_i  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_en_i  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.invert_i  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_ctr_i  = \u_pwm.u_pwm_core.phase_ctr_q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_i  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_masked  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_i  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.rst_ni  = rst_ni;
  assign \u_pwm.u_pwm_core.pwm_o  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign \u_pwm.u_pwm_core.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_invert.q , \u_pwm.u_reg.u_invert0_qe.q_o , \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_a_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o , \u_pwm.u_reg.u_blink_param_x_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o  };
  assign \u_pwm.u_pwm_core.rst_core_ni  = rst_ni;
  assign \u_pwm.u_reg._blink_param_gated_we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg._blink_param_qs  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg._blink_param_wdata  = \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  assign \u_pwm.u_reg._blink_param_x_0_qs_int  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_reg._blink_param_y_0_qs_int  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_reg._cfg_clk_div_qs_int  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg._cfg_cntr_en_qs_int  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg._cfg_dc_resn_qs_int  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg._cfg_gated_we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg._cfg_qs  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg._cfg_wdata  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg._duty_cycle_a_0_qs_int  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_reg._duty_cycle_b_0_qs_int  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_reg._duty_cycle_gated_we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg._duty_cycle_qs  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg._duty_cycle_wdata  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  assign \u_pwm.u_reg._invert_gated_we  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg._invert_qs  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_reg._invert_qs_int  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_reg._invert_wdata  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg._pwm_en_gated_we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg._pwm_en_qs  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg._pwm_en_qs_int  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg._pwm_en_wdata  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg._pwm_param_blink_en_0_qs_int  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_reg._pwm_param_gated_we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg._pwm_param_htbt_en_0_qs_int  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_reg._pwm_param_phase_delay_0_qs_int  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg._pwm_param_qs  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg._pwm_param_wdata  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.blink_param_busy  = \u_pwm.u_reg.u_blink_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.blink_param_flds_we  = { \u_pwm.u_reg.u_blink_param0_qe.d_i , \u_pwm.u_reg.u_blink_param0_qe.d_i  };
  assign \u_pwm.u_reg.blink_param_qe  = \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  assign \u_pwm.u_reg.blink_param_qs  = \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  assign \u_pwm.u_reg.blink_param_we  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.cfg_busy  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  assign \u_pwm.u_reg.cfg_flds_we  = { \u_pwm.u_reg.u_cfg0_qe.d_i , \u_pwm.u_reg.u_cfg0_qe.d_i , \u_pwm.u_reg.u_cfg0_qe.d_i  };
  assign \u_pwm.u_reg.cfg_qe  = \u_pwm.u_reg.u_cfg0_qe.q_o ;
  assign \u_pwm.u_reg.cfg_qs  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.cfg_we  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.clk_i  = clk_i;
  assign \u_pwm.u_reg.devmode_i  = 1'h1;
  assign \u_pwm.u_reg.duty_cycle_busy  = \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q ;
  assign \u_pwm.u_reg.duty_cycle_flds_we  = { \u_pwm.u_reg.u_duty_cycle0_qe.d_i , \u_pwm.u_reg.u_duty_cycle0_qe.d_i  };
  assign \u_pwm.u_reg.duty_cycle_qe  = \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  assign \u_pwm.u_reg.duty_cycle_qs  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  assign \u_pwm.u_reg.duty_cycle_we  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.invert_busy  = \u_pwm.u_reg.u_invert_cdc.src_busy_q ;
  assign \u_pwm.u_reg.invert_flds_we  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.invert_qe  = \u_pwm.u_reg.u_invert0_qe.q_o ;
  assign \u_pwm.u_reg.invert_qs  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.invert_we  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.pwm_en_busy  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  assign \u_pwm.u_reg.pwm_en_flds_we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.pwm_en_qe  = \u_pwm.u_reg.u_pwm_en0_qe.q_o ;
  assign \u_pwm.u_reg.pwm_en_qs  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.pwm_en_we  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.pwm_param_busy  = \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.pwm_param_flds_we  = { \u_pwm.u_reg.u_pwm_param0_qe.d_i , \u_pwm.u_reg.u_pwm_param0_qe.d_i , \u_pwm.u_reg.u_pwm_param0_qe.d_i  };
  assign \u_pwm.u_reg.pwm_param_qe  = \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \u_pwm.u_reg.pwm_param_qs  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.pwm_param_we  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_invert.q , \u_pwm.u_reg.u_invert0_qe.q_o , \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_a_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o , \u_pwm.u_reg.u_blink_param_x_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o  };
  assign \u_pwm.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_pwm.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_pwm.u_reg.reg_busy  = \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \u_pwm.u_reg.reg_busy_sel  = \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \u_pwm.u_reg.reg_rdata  = \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \u_pwm.u_reg.reg_rdata_next  = \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \u_pwm.u_reg.regwen_qs  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.regwen_wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.regwen_we  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.shadow_busy  = 1'h0;
  assign \u_pwm.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_o_pre  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_reg_d2h  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_blink_param0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_qs  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_qs_i  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_regwen_o  = \u_pwm.u_reg._blink_param_regwen ;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_req_from_src  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_wd_o  = \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_we_o  = \u_pwm.u_reg._blink_param_we ;
  assign \u_pwm.u_reg.u_blink_param_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_busy_o  = \u_pwm.u_reg.u_blink_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_qs_o  = \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_req  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_we_i  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_blink_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_blink_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_x_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_x_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_x_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_x_0.qe  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_x_0.qs  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_reg.u_blink_param_x_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_x_0.wd  = \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_x_0.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_data  = \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_y_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_y_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_y_0.qe  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.qs  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_reg.u_blink_param_y_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_y_0.wd  = \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_y_0.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_data  = \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_qs  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.dst_qs_i  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.dst_regwen_o  = \u_pwm.u_reg._cfg_regwen ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_req_from_src  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_wd_o  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_we_o  = \u_pwm.u_reg._cfg_we ;
  assign \u_pwm.u_reg.u_cfg_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.src_busy_o  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_qs_o  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_req  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_we_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_clk_div.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_clk_div.d  = 27'h0000000;
  assign \u_pwm.u_reg.u_cfg_clk_div.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_clk_div.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.qs  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_clk_div.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.d  = 27'h0000000;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cntr_en.d  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.qs  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_dc_resn.d  = 4'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.qs  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.d  = 4'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.qe  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.qs  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wd  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_a_0.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_data  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.qe  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.qs  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wd  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_b_0.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_data  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_qs  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_qs_i  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_regwen_o  = \u_pwm.u_reg._duty_cycle_regwen ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_req_from_src  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_wd_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_we_o  = \u_pwm.u_reg._duty_cycle_we ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_qs_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_req  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_we_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_ack ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_ack ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert.d  = 1'h0;
  assign \u_pwm.u_reg.u_invert.de  = 1'h0;
  assign \u_pwm.u_reg.u_invert.qe  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert.qs  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_reg.u_invert.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert.wd  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.u_invert.we  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert.wr_data  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.u_invert.wr_en  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_invert.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_invert.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_reg.u_invert.wr_en_data_arb.q  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_reg.u_invert.wr_en_data_arb.wd  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.u_invert.wr_en_data_arb.we  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.u_invert.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_invert0_qe.d_i ;
  assign \u_pwm.u_reg.u_invert0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.dst_ds_i  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.dst_qs  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_qs_i  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_regwen_o  = \u_pwm.u_reg._invert_regwen ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_req_from_src  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.dst_wd_o  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.u_invert_cdc.dst_we_o  = \u_pwm.u_reg._invert_we ;
  assign \u_pwm.u_reg.u_invert_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.src_busy_o  = \u_pwm.u_reg.u_invert_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_invert_cdc.src_qs_o  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.u_invert_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_invert_cdc.src_req  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_invert_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_invert_cdc.src_we_i  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_ds_i  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_qs_i  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_qs_o  = \u_pwm.u_reg.u_invert.q ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_invert_cdc.src_ack ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_invert_cdc.src_ack ;
  assign \u_pwm.u_reg.u_invert_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_invert_cdc.dst_req ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_invert_cdc.unused_wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_pwm_en.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.qe  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en.qs  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_ds_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_qs  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_qs_i  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_regwen_o  = \u_pwm.u_reg._pwm_en_regwen ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_req_from_src  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_wd_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_we_o  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_busy_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_qs_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_req  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_we_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_ds_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_i  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_o  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.unused_wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_pwm_param0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.qe  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.qs  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_qs  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_regwen_o  = \u_pwm.u_reg._pwm_param_regwen ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_req_from_src  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_wd_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_we_o  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_busy_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_qs_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_req  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_we_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.qe  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.qs  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.qe  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.qs  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_pwm.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_pwm.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_reg_if.d_ack  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \u_pwm.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_pwm.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.error  = \u_pwm.u_reg.u_reg_if.error_q ;
  assign \u_pwm.u_reg.u_reg_if.error_i  = \u_pwm.u_reg.reg_error ;
  assign \u_pwm.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.rd_req  = \u_pwm.u_reg.reg_re ;
  assign \u_pwm.u_reg.u_reg_if.rdata  = \u_pwm.u_reg.u_reg_if.rdata_q ;
  assign \u_pwm.u_reg.u_reg_if.re_o  = \u_pwm.u_reg.reg_re ;
  assign \u_pwm.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_reg_if.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.tl_o_pre  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_pwm.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.wdata_o  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_reg_if.we_o  = \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_reg_if.wr_req  = \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_regwen.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_regwen.d  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.de  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.qe  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_regwen.qs  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_regwen.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_regwen.wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_regwen.we  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_regwen.wr_en  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.q  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_regwen.wr_data ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_rsp_intg_gen.tl_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_rsp_intg_gen.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.unused__invert_wdata  = \u_pwm.u_reg.u_invert_cdc.src_q ;
  assign \u_pwm.u_reg.unused__pwm_en_wdata  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_rv_timer.active  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_core.active  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.gen_harts[0].u_core.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_core.intr  = \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.gen_harts[0].u_core.mtime  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  };
  assign \u_rv_timer.gen_harts[0].u_core.mtimecmp  = { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.gen_harts[0].u_core.prescaler  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.gen_harts[0].u_core.rst_ni  = rst_ni;
  assign \u_rv_timer.gen_harts[0].u_core.step  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.gen_harts[0].u_core.tick  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_d_o  = \u_rv_timer.intr_timer_state_d ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_de_o  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_enable_q_i  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_state_q_i  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_q_i  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.gen_harts[0].u_intr_hw.rst_ni  = rst_ni;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.status  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.hw2reg  = { \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d , \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  };
  assign \u_rv_timer.intr_timer_en  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.intr_timer_set  = \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.intr_timer_state_de  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  assign \u_rv_timer.intr_timer_state_q  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.intr_timer_test_q  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.intr_timer_test_qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.mtime  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  };
  assign \u_rv_timer.mtime_d  = \u_rv_timer.gen_harts[0].u_core.mtime_d ;
  assign \u_rv_timer.mtimecmp  = { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.prescaler  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.reg2hw  = { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0], \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i , \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_cfg0_prescale.q , \u_rv_timer.u_reg.u_timer_v_lower0.q , \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q , \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o , \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  };
  assign \u_rv_timer.rst_ni  = rst_ni;
  assign \u_rv_timer.step  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.tick  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.cfg0_prescale_qs  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.cfg0_prescale_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.cfg0_step_qs  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.cfg0_step_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.compare_lower0_0_flds_we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_lower0_0_qe  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.compare_lower0_0_qs  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.compare_lower0_0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.compare_lower0_0_we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_upper0_0_flds_we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_upper0_0_qe  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.compare_upper0_0_qs  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.compare_upper0_0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.compare_upper0_0_we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.ctrl_qs  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.ctrl_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.devmode_i  = 1'h1;
  assign \u_rv_timer.u_reg.hw2reg  = { \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d , \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  };
  assign \u_rv_timer.u_reg.intr_enable0_qs  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.intr_enable0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_state0_qs  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.intr_state0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_state0_we  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.intr_test0_flds_we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.intr_test0_qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.intr_test0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_test0_we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.reg2hw  = { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0], \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i , \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_cfg0_prescale.q , \u_rv_timer.u_reg.u_timer_v_lower0.q , \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q , \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o , \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  };
  assign \u_rv_timer.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.reg_busy  = 1'h0;
  assign \u_rv_timer.u_reg.reg_rdata  = \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \u_rv_timer.u_reg.reg_rdata_next  = \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \u_rv_timer.u_reg.reg_wdata  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.shadow_busy  = 1'h0;
  assign \u_rv_timer.u_reg.timer_v_lower0_qs  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.timer_v_lower0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.timer_v_lower0_we  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.timer_v_upper0_qs  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.timer_v_upper0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.timer_v_upper0_we  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_o_pre  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_reg_d2h  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_cfg0_prescale.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.d  = 12'h000;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.qe  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.qs  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.d  = 12'h000;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_cfg0_step.d  = 8'h00;
  assign \u_rv_timer.u_reg.u_cfg0_step.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_step.qe  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.qs  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_cfg0_step.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.d  = 8'h00;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.qe  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.qs  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.qe  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.qs  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_ctrl.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_ctrl.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.qe  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.qs  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_ctrl.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.we  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.we  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_intr_enable0.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.qe  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.qs  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_intr_enable0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.we  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.we  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_state0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_intr_state0.d  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d ;
  assign \u_rv_timer.u_reg.u_intr_state0.de  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_intr_state0.qs  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.u_intr_state0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_intr_state0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_state0.we  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en  = \u_rv_timer.u_reg.u_intr_state0.qe ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_intr_state0.qe ;
  assign \u_rv_timer.u_reg.u_intr_test0.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.ds  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.q  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_test0.qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.u_intr_test0.qre  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.qs  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.re  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_test0.we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_rv_timer.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_reg_if.d_ack  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \u_rv_timer.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_rv_timer.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.error  = \u_rv_timer.u_reg.u_reg_if.error_q ;
  assign \u_rv_timer.u_reg.u_reg_if.error_i  = \u_rv_timer.u_reg.reg_error ;
  assign \u_rv_timer.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.rd_req  = \u_rv_timer.u_reg.reg_re ;
  assign \u_rv_timer.u_reg.u_reg_if.rdata  = \u_rv_timer.u_reg.u_reg_if.rdata_q ;
  assign \u_rv_timer.u_reg.u_reg_if.re_o  = \u_rv_timer.u_reg.reg_re ;
  assign \u_rv_timer.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_reg_if.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.tl_o_pre  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [108], \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [104:0] } = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.wdata_o  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_reg_if.we_o  = \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_reg_if.wr_req  = \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_rsp_intg_gen.tl_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_rsp_intg_gen.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_timer_v_lower0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_lower0.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.qs  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.we  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en  = \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.qs  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.we  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en  = \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  assign \u_uart.addr_o  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \u_uart.be_o  = \u_uart.u_bridge.be_q ;
  assign \u_uart.cio_rx_i  = cio_rx_i;
  assign \u_uart.cio_tx_en_o  = 1'h1;
  assign \u_uart.cio_tx_o  = cio_tx_o;
  assign \u_uart.clk_i  = clk_i;
  assign \u_uart.core_tx  = cio_tx_o;
  assign \u_uart.err_i  = \xbar.u_s1n_6.tl_t_p [1];
  assign \u_uart.gnt_i  = \uart_host_adapter.gnt_o ;
  assign \u_uart.hw2reg  = { \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 4'h0, \u_uart.u_uart_core.tx_fifo_depth , 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.rdata_i  = tl_uart_host_d2h[47:16];
  assign { \u_uart.reg2hw [56:33], \u_uart.reg2hw [31:0] } = { \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 2'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  };
  assign \u_uart.req_o  = \u_uart.u_bridge.req_q ;
  assign \u_uart.rst_ni  = rst_ni;
  assign \u_uart.rx_data_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.rx_pop_i  = \u_uart.u_uart_core.rx_pop_i ;
  assign \u_uart.rx_valid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_bridge.addr_o  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \u_uart.u_bridge.be_o  = \u_uart.u_bridge.be_q ;
  assign \u_uart.u_bridge.clk_i  = clk_i;
  assign \u_uart.u_bridge.err_i  = \xbar.u_s1n_6.tl_t_p [1];
  assign \u_uart.u_bridge.gnt_i  = \uart_host_adapter.gnt_o ;
  assign \u_uart.u_bridge.rdata_i  = tl_uart_host_d2h[47:16];
  assign \u_uart.u_bridge.req_o  = \u_uart.u_bridge.req_q ;
  assign \u_uart.u_bridge.rst_ni  = rst_ni;
  assign \u_uart.u_bridge.rx_pop_o  = \u_uart.u_uart_core.rx_pop_i ;
  assign \u_uart.u_bridge.valid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \u_uart.u_bridge.wdata_o  = \u_uart.u_bridge.wdata_q ;
  assign \u_uart.u_bridge.we_o  = \u_uart.u_bridge.we_q ;
  assign \u_uart.u_reg.addr_hit  = \u_pwm.u_reg.addr_hit [5:0];
  assign \u_uart.u_reg.clk_i  = clk_i;
  assign \u_uart.u_reg.ctrl_llpbk_qs  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.ctrl_llpbk_wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.ctrl_nco_qs  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.ctrl_nco_wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.ctrl_nf_qs  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.ctrl_nf_wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.ctrl_parity_en_qs  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.ctrl_parity_en_wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.ctrl_parity_odd_qs  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.ctrl_parity_odd_wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.ctrl_rx_qs  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.ctrl_rx_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.ctrl_slpbk_qs  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.ctrl_slpbk_wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.ctrl_tx_qs  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.ctrl_tx_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.devmode_i  = 1'h1;
  assign \u_uart.u_reg.fifo_ctrl_flds_we  = { \u_uart.u_reg.u_fifo_ctrl0_qe.d_i , \u_uart.u_reg.u_fifo_ctrl0_qe.d_i  };
  assign \u_uart.u_reg.fifo_ctrl_qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_reg.fifo_ctrl_rxrst_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.fifo_ctrl_txrst_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.fifo_ctrl_we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.fifo_status_rxlvl_qs  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.fifo_status_txlvl_qs  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.hw2reg  = { \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 4'h0, \u_uart.u_uart_core.tx_fifo_depth , 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.rdata_qs  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.reg2hw  = { \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  };
  assign \u_uart.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_uart.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_uart.u_reg.reg_busy  = 1'h0;
  assign \u_uart.u_reg.reg_rdata  = \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_reg.reg_rdata_next  = \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_reg.rst_ni  = rst_ni;
  assign \u_uart.u_reg.shadow_busy  = 1'h0;
  assign \u_uart.u_reg.status_re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.status_rxidle_qs  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_o_pre  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_reg_d2h  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_ctrl_llpbk.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_llpbk.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.qs  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_llpbk.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_nco.d  = 16'h0000;
  assign \u_uart.u_reg.u_ctrl_nco.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nco.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.qs  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_nco.wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_data  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.d  = 16'h0000;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_nf.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.qs  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_nf.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_parity_en.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.qs  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_parity_en.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_parity_odd.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.qs  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_rx.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.qs  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_rx.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_slpbk.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.qs  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_slpbk.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_tx.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.qs  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_tx.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.qs  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.qs  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.d  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.ds  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.q  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.qe  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.qs  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.wd  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.we  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_txlvl.d  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.ds  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.q  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_txlvl.qe  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_txlvl.qs  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.wd  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_txlvl.we  = 1'h0;
  assign \u_uart.u_reg.u_rdata.d  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.ds  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.q  = 8'h00;
  assign \u_uart.u_reg.u_rdata.qe  = 1'h0;
  assign \u_uart.u_reg.u_rdata.qre  = \u_uart.u_reg.rdata_re ;
  assign \u_uart.u_reg.u_rdata.qs  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.re  = \u_uart.u_reg.rdata_re ;
  assign \u_uart.u_reg.u_rdata.wd  = 8'h00;
  assign \u_uart.u_reg.u_rdata.we  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_uart.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_uart.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_uart.u_reg.u_reg_if.d_ack  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \u_uart.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_uart.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.error  = \u_uart.u_reg.u_reg_if.error_q ;
  assign \u_uart.u_reg.u_reg_if.error_i  = \u_uart.u_reg.reg_error ;
  assign \u_uart.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.rd_req  = \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.u_reg_if.rdata  = \u_uart.u_reg.u_reg_if.rdata_q ;
  assign \u_uart.u_reg.u_reg_if.re_o  = \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_reg_if.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.tl_o_pre  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_uart.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_uart.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_uart.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_uart.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.wdata_o  = \u_uart.u_reg.reg_wdata ;
  assign \u_uart.u_reg.u_reg_if.we_o  = \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_reg_if.wr_req  = \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_rsp_intg_gen.tl_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_rsp_intg_gen.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_status_rxempty.d  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.ds  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxempty.qs  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxempty.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.we  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.d  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.ds  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxfull.qs  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxfull.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.we  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.d  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.ds  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxidle.qs  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxidle.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.d  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.ds  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txempty.qs  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txempty.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.d  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.ds  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txfull.qs  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txfull.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.d  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.ds  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txidle.qs  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txidle.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.we  = 1'h0;
  assign \u_uart.u_reg.u_wdata.clk_i  = clk_i;
  assign \u_uart.u_reg.u_wdata.d  = 8'h00;
  assign \u_uart.u_reg.u_wdata.de  = 1'h0;
  assign \u_uart.u_reg.u_wdata.qe  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.qs  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_wdata.wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_data  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.d  = 8'h00;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.q  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata0_qe.clk_i  = clk_i;
  assign \u_uart.u_reg.u_wdata0_qe.rst_ni  = rst_ni;
  assign \u_uart.u_reg.wdata_flds_we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.wdata_qe  = \u_uart.u_reg.u_wdata0_qe.q_o ;
  assign \u_uart.u_reg.wdata_wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.wdata_we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_uart_core.clk_i  = clk_i;
  assign \u_uart.u_uart_core.hw2reg  = { \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 4'h0, \u_uart.u_uart_core.tx_fifo_depth , 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_uart_core.line_loopback  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_uart_core.reg2hw  = { \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  };
  assign \u_uart.u_uart_core.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.rx  = cio_rx_i;
  assign \u_uart.u_uart_core.rx_data_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.rx_enable  = 1'h1;
  assign \u_uart.u_uart_core.rx_fifo_data  = \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  assign \u_uart.u_uart_core.rx_fifo_pop  = \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  assign \u_uart.u_uart_core.rx_fifo_rvalid  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.rx_fifo_wvalid  = \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i ;
  assign \u_uart.u_uart_core.rx_in  = \u_uart.u_uart_core.uart_rx.rx ;
  assign \u_uart.u_uart_core.rx_sync  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \u_uart.u_uart_core.rx_tick_baud  = \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \u_uart.u_uart_core.rx_uart_idle  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_uart_core.rx_valid  = \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \u_uart.u_uart_core.rx_valid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.rxnf_enable  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_uart_core.sync_rx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.d_i  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.d_o  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.intq  = \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  assign \u_uart.u_uart_core.sync_rx.q_o  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \u_uart.u_uart_core.sync_rx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.d_i  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.d_i  = \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.unused_sig  = 1'h1;
  assign \u_uart.u_uart_core.sys_loopback  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_uart_core.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.tx  = cio_tx_o;
  assign \u_uart.u_uart_core.tx_enable  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.tx_fifo_rready  = \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \u_uart.u_uart_core.tx_out  = \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_rxfifo.depth_o  = \u_uart.u_uart_core.rx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_empty  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_wptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_wptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage_rdata  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clr_i  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.depth_o  = \u_uart.u_uart_core.rx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.empty_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.full_o  = \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3:0] = 4'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [3:0] = 4'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rdata_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rvalid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wready_o  = \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_txfifo.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_txfifo.depth_o  = \u_uart.u_uart_core.tx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_txfifo.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_empty  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_rptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_rptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage_rdata  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clr_i  = \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.depth_o  = \u_uart.u_uart_core.tx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.empty_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.full_o  = \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [2:0] = 3'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [2:0] = 3'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.rdata_o  = \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.u_uart_core.u_uart_txfifo.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_txfifo.rvalid_o  = \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wdata_i  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wready_o  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wvalid_i  = \u_uart.u_reg.u_wdata0_qe.q_o ;
  assign \u_uart.u_uart_core.uart_fifo_rxrst  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  assign \u_uart.u_uart_core.uart_fifo_txrst  = \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  assign \u_uart.u_uart_core.uart_rdata  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.uart_rx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.uart_rx.frame_err  = \u_uart.u_uart_core.event_rx_frame_err ;
  assign \u_uart.u_uart_core.uart_rx.idle  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_uart_core.uart_rx.parity_enable  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_uart_core.uart_rx.parity_odd  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_uart_core.uart_rx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.uart_rx.rx_data  = \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  assign \u_uart.u_uart_core.uart_rx.rx_enable  = 1'h1;
  assign \u_uart.u_uart_core.uart_rx.rx_parity_err  = \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_uart_core.uart_rx.rx_valid  = \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud  = \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.uart_tx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.uart_tx.idle  = \u_uart.u_uart_core.tx_uart_idle ;
  assign \u_uart.u_uart_core.uart_tx.parity_enable  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_uart_core.uart_tx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.uart_tx.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.uart_tx.tx  = \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \u_uart.u_uart_core.uart_tx.tx_enable  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.uart_tx.wr  = \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \u_uart.u_uart_core.uart_tx.wr_data  = \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.valid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \u_uart.wdata_o  = \u_uart.u_bridge.wdata_q ;
  assign \u_uart.we_o  = \u_uart.u_bridge.we_q ;
  assign uart_addr = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign uart_be = \u_uart.u_bridge.be_q ;
  assign uart_err = \xbar.u_s1n_6.tl_t_p [1];
  assign uart_gnt = \uart_host_adapter.gnt_o ;
  assign \uart_host_adapter.addr_i  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \uart_host_adapter.be_i  = \u_uart.u_bridge.be_q ;
  assign \uart_host_adapter.clk_i  = clk_i;
  assign \uart_host_adapter.err_o  = \xbar.u_s1n_6.tl_t_p [1];
  assign \uart_host_adapter.instr_type_i  = 4'h9;
  assign \uart_host_adapter.intg_err  = 1'h0;
  assign \uart_host_adapter.intg_err_o  = 1'h0;
  assign \uart_host_adapter.intg_err_q  = 1'h0;
  assign \uart_host_adapter.rdata_intg_o  = \xbar.u_s1n_6.tl_t_p [8:2];
  assign \uart_host_adapter.rdata_o  = tl_uart_host_d2h[47:16];
  assign \uart_host_adapter.req_i  = \u_uart.u_bridge.req_q ;
  assign \uart_host_adapter.rst_ni  = rst_ni;
  assign \uart_host_adapter.tl_be  = \u_rv_timer.u_reg.reg_be ;
  assign \uart_host_adapter.tl_i  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \uart_host_adapter.tl_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.tl_out  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.tl_source  = { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  assign \uart_host_adapter.u_cmd_intg_gen.cmd_intg  = 7'h00;
  assign \uart_host_adapter.u_cmd_intg_gen.data_final  = \u_uart.u_bridge.wdata_q ;
  assign \uart_host_adapter.u_cmd_intg_gen.data_intg  = 7'h00;
  assign \uart_host_adapter.u_cmd_intg_gen.tl_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.u_cmd_intg_gen.tl_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.unused_addr_bottom_bits  = 1'h0;
  assign \uart_host_adapter.valid_o  = \xbar.u_s1n_6.tl_t_p [65];
  assign \uart_host_adapter.wdata_i  = \u_uart.u_bridge.wdata_q ;
  assign \uart_host_adapter.wdata_intg_i  = 7'h00;
  assign \uart_host_adapter.we_i  = \u_uart.u_bridge.we_q ;
  assign uart_rdata = tl_uart_host_d2h[47:16];
  assign uart_req = \u_uart.u_bridge.req_q ;
  assign uart_rvalid = \xbar.u_s1n_6.tl_t_p [65];
  assign uart_wdata = \u_uart.u_bridge.wdata_q ;
  assign uart_we = \u_uart.u_bridge.we_q ;
  assign \xbar.clk_i  = clk_i;
  assign \xbar.dev_sel_s1n_6  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.rst_ni  = rst_ni;
  assign \xbar.scanmode_i  = 4'h9;
  assign \xbar.tl_gpio_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_gpio_o  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.tl_pwm_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_pwm_o  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.tl_rv_timer_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_rv_timer_o  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.tl_s1n_6_ds_d2h  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_s1n_6_ds_h2d  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.tl_s1n_6_us_d2h  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.tl_s1n_6_us_h2d  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.tl_uart_host_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.tl_uart_host_o  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.tl_uart_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_uart_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.accept_t_rsp  = \xbar.u_s1n_6.tl_t_p [65];
  assign { \xbar.u_s1n_6.blanked_auser [22:14], \xbar.u_s1n_6.blanked_auser [6:0] } = 16'h04d5;
  assign \xbar.u_s1n_6.clk_i  = clk_i;
  assign \xbar.u_s1n_6.dev_select_i  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.full_o  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 23'h024000, \xbar.u_s1n_6.dev_select_t  };
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rready_i  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 23'h024000, \xbar.u_s1n_6.dev_select_t  };
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wready_o  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wvalid_i  = \u_uart.u_bridge.req_q ;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rdata_o  = { \xbar.u_s1n_6.tl_t_p [64:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], 1'h0 };
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rvalid_o  = \xbar.u_s1n_6.tl_t_p [65];
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wdata_i  = { \xbar.u_s1n_6.tl_t_p [64:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], 1'h0 };
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wvalid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \xbar.u_s1n_6.fifo_h.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.spare_req_i  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.spare_req_o  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.tl_d_i  = { \xbar.u_s1n_6.tl_t_p [65:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.fifo_h.tl_d_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.fifo_h.tl_h_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.fifo_h.tl_h_o  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [15:0] } = { \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 15'h0000, \u_uart.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rvalid_o  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wdata_i  = { \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wvalid_i  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [15:0] } = { \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 15'h0000, \u_pwm.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rvalid_o  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wdata_i  = { \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wvalid_i  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [15:0] } = { \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 15'h0000, \u_gpio.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rvalid_o  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wdata_i  = { \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wvalid_i  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [15:0] } = { \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 15'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rvalid_o  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wvalid_i  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [107:0] = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign { \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [65], \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [61:48], \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [15:0] } = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 16'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [65:1] = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001 };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_i  = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_o  = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.tl_d_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.tl_h_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.tl_h_o  = { \xbar.u_s1n_6.tl_t_p [65:48], tl_uart_host_d2h[47:16], \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.tl_t_i  = { \xbar.u_s1n_6.tl_t_p [65:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.tl_t_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.tl_u_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o , \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.tl_u_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108], \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.unused_scanmode  = 1'h0;
  assign \$336y  = \$auto$bmuxmap.cc:84:execute$2063 ;
  assign \$497y  = \$auto$bmuxmap.cc:84:execute$2082 ;
endmodule
