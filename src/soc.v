/* Generated by Yosys 0.57+125 (git sha1 5e550ddc3, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module soc(clk_i, rst_ni, cio_rx_i, cio_tx_o, cio_tx_en_o, cio_pwm_o, cio_pwm_en_o, cio_gpio_i, cio_gpio_o, cio_gpio_en_o);
  input clk_i;
  wire clk_i;
  input rst_ni;
  wire rst_ni;
  input cio_rx_i;
  wire cio_rx_i;
  output cio_tx_o;
  wire cio_tx_o;
  output cio_tx_en_o;
  wire cio_tx_en_o;
  output cio_pwm_o;
  wire cio_pwm_o;
  output cio_pwm_en_o;
  wire cio_pwm_en_o;
  input [1:0] cio_gpio_i;
  wire [1:0] cio_gpio_i;
  output [1:0] cio_gpio_o;
  wire [1:0] cio_gpio_o;
  output [1:0] cio_gpio_en_o;
  wire [1:0] cio_gpio_en_o;
  wire \$1005y ;
  wire \$1022y ;
  wire \$1060y ;
  wire \$1077y ;
  wire \$1115y ;
  wire \$1132y ;
  wire \$1149y ;
  wire \$1276y ;
  wire \$1277y ;
  wire \$1278y ;
  wire [3:0] \$1281y ;
  wire \$1284y ;
  wire \$1287y ;
  wire \$1288y ;
  wire \$1289y ;
  wire \$1293y ;
  wire \$1294y ;
  wire \$1298y ;
  wire \$1299y ;
  wire \$1303y ;
  wire \$1304y ;
  wire \$1308y ;
  wire \$1309y ;
  wire \$1311y ;
  wire \$1312y ;
  wire \$1314y ;
  wire \$1317y ;
  wire \$1320y ;
  wire \$1323y ;
  wire \$1326y ;
  wire \$1338y ;
  wire \$1339y ;
  wire \$1340y ;
  wire \$1341y ;
  wire \$1342y ;
  wire \$1343y ;
  wire [26:0] \$1346y ;
  wire [26:0] \$1347y ;
  wire [16:0] \$1366y ;
  wire \$1368y ;
  wire \$1369y ;
  wire \$1370y ;
  wire \$1371y ;
  wire \$1372y ;
  wire \$1373y ;
  wire [15:0] \$1374y ;
  wire [15:0] \$1375y ;
  wire [15:0] \$1376y ;
  wire [15:0] \$1383y ;
  wire \$1387y ;
  wire \$1388y ;
  wire \$1390y ;
  wire \$1391y ;
  wire \$1392y ;
  wire \$1393y ;
  wire \$1394y ;
  wire [15:0] \$1395y ;
  wire [15:0] \$1396y ;
  wire [15:0] \$1397y ;
  wire [15:0] \$1403y ;
  wire \$1415y ;
  wire \$1416y ;
  wire \$1417y ;
  wire \$1418y ;
  wire \$1419y ;
  wire \$1420y ;
  wire \$1421y ;
  wire \$1422y ;
  wire \$1423y ;
  wire \$1425y ;
  wire \$1426y ;
  wire \$1428y ;
  wire \$1429y ;
  wire \$1435y ;
  wire \$1436y ;
  wire \$1441y ;
  wire [16:0] \$1442y ;
  wire [16:0] \$1443y ;
  wire [16:0] \$1444y ;
  wire [16:0] \$1445y ;
  wire [16:0] \$1446y ;
  wire [16:0] \$1447y ;
  wire \$1454y ;
  wire \$1455y ;
  wire \$1456y ;
  wire \$1457y ;
  wire \$1463y ;
  wire \$1464y ;
  wire [15:0] \$1467y ;
  wire [15:0] \$1470y ;
  wire [15:0] \$1475y ;
  wire [31:0] \$1477y ;
  wire [15:0] \$1479y ;
  wire \$1492y ;
  wire \$1493y ;
  wire \$1495y ;
  wire \$1496y ;
  wire \$1519y ;
  wire \$1520y ;
  wire [1:0] \$1521y ;
  wire [1:0] \$1522y ;
  wire \$1543y ;
  wire \$1544y ;
  wire [1:0] \$1545y ;
  wire [1:0] \$1546y ;
  wire [1:0] \$1558y ;
  wire [1:0] \$1566y ;
  wire [1:0] \$1567y ;
  wire [1:0] \$1569y ;
  wire [1:0] \$1570y ;
  wire [1:0] \$1575y ;
  wire [1:0] \$1576y ;
  wire \$1583y ;
  wire [2:0] \$1599y ;
  wire \$1607y ;
  wire [31:0] \$1608y ;
  wire [1:0] \$1692y ;
  wire [1:0] \$1693y ;
  wire [1:0] \$1694y ;
  wire \$1772y ;
  wire \$1773y ;
  wire \$1774y ;
  wire \$1784y ;
  wire \$1785y ;
  wire \$1790y ;
  wire \$1794y ;
  wire \$1795y ;
  wire \$1799y ;
  wire \$1800y ;
  wire \$1803y ;
  wire \$1804y ;
  wire \$1805y ;
  wire \$1809y ;
  wire \$1810y ;
  wire \$1812y ;
  wire \$1813y ;
  wire \$1815y ;
  wire \$1818y ;
  wire \$1824y ;
  wire \$1827y ;
  wire \$1830y ;
  wire \$1839y ;
  wire \$1841y ;
  wire \$1853y ;
  wire [11:0] \$1854y ;
  wire \$1857y ;
  wire \$1860y ;
  wire [2:0] \$1883y ;
  wire \$1891y ;
  wire [31:0] \$1892y ;
  wire \$1992y ;
  wire \$1993y ;
  wire \$1994y ;
  wire \$2068y ;
  wire \$2069y ;
  wire \$2070y ;
  wire \$2076y ;
  wire \$2080y ;
  wire \$2081y ;
  wire \$2085y ;
  wire \$2086y ;
  wire \$2090y ;
  wire \$2091y ;
  wire \$2094y ;
  wire \$2095y ;
  wire \$2096y ;
  wire \$2100y ;
  wire \$2101y ;
  wire \$2105y ;
  wire \$2106y ;
  wire \$2110y ;
  wire \$2111y ;
  wire \$2115y ;
  wire \$2116y ;
  wire \$2118y ;
  wire \$2119y ;
  wire \$2121y ;
  wire \$2124y ;
  wire \$2127y ;
  wire \$2130y ;
  wire \$2133y ;
  wire \$2136y ;
  wire \$2139y ;
  wire \$2142y ;
  wire \$216y ;
  wire [2:0] \$21y ;
  wire \$224y ;
  wire \$229y ;
  wire \$234y ;
  wire \$239y ;
  wire \$244y ;
  wire \$248y ;
  wire \$249y ;
  wire \$251y ;
  wire \$252y ;
  wire \$257y ;
  wire \$260y ;
  wire \$263y ;
  wire [16:0] \$285y ;
  wire \$287y ;
  wire \$294y ;
  wire \$296y ;
  wire \$299y ;
  wire \$29y ;
  wire \$302y ;
  wire \$304y ;
  wire [31:0] \$30y ;
  wire \$311y ;
  wire [3:0] \$312y ;
  wire [3:0] \$313y ;
  wire [3:0] \$314y ;
  wire [3:0] \$315y ;
  wire [3:0] \$320y ;
  wire [3:0] \$327y ;
  wire \$331y ;
  wire \$334y ;
  wire \$337y ;
  wire [7:0] \$338y ;
  wire \$341y ;
  wire \$342y ;
  wire \$343y ;
  wire [7:0] \$344y ;
  wire [63:0] \$345y ;
  wire [63:0] \$347y ;
  wire [4:0] \$353y ;
  wire \$361y ;
  wire [3:0] \$362y ;
  wire \$363y ;
  wire \$364y ;
  wire [3:0] \$365y ;
  wire \$375y ;
  wire \$377y ;
  wire \$394y ;
  wire \$395y ;
  wire \$396y ;
  wire \$397y ;
  wire \$400y ;
  wire [4:0] \$407y ;
  wire \$410y ;
  wire \$411y ;
  wire \$413y ;
  wire \$414y ;
  wire \$416y ;
  wire \$417y ;
  wire [3:0] \$418y ;
  wire \$419y ;
  wire \$440y ;
  wire \$442y ;
  wire \$444y ;
  wire \$445y ;
  wire \$447y ;
  wire \$448y ;
  wire \$449y ;
  wire \$455y ;
  wire \$457y ;
  wire \$460y ;
  wire \$463y ;
  wire \$465y ;
  wire \$472y ;
  wire [4:0] \$473y ;
  wire [4:0] \$474y ;
  wire [4:0] \$475y ;
  wire [4:0] \$476y ;
  wire [4:0] \$481y ;
  wire [4:0] \$488y ;
  wire \$492y ;
  wire \$495y ;
  wire \$498y ;
  wire [7:0] \$499y ;
  wire \$502y ;
  wire \$503y ;
  wire \$504y ;
  wire [7:0] \$505y ;
  wire [127:0] \$506y ;
  wire [127:0] \$508y ;
  wire \$511y ;
  wire \$517y ;
  wire \$518y ;
  wire \$522y ;
  wire [1:0] \$523y ;
  wire \$530y ;
  wire \$531y ;
  wire \$564y ;
  wire \$590y ;
  wire \$592y ;
  wire [3:0] \$593y ;
  wire \$595y ;
  wire \$596y ;
  wire \$616y ;
  wire \$622y ;
  wire [2:0] \$623y ;
  wire \$634y ;
  wire \$636y ;
  wire \$638y ;
  wire \$640y ;
  wire \$645y ;
  wire [8:0] \$653y ;
  wire [8:0] \$655y ;
  wire \$659y ;
  wire \$660y ;
  wire \$680y ;
  wire \$681y ;
  wire \$686y ;
  wire \$692y ;
  wire \$698y ;
  wire \$716y ;
  wire \$718y ;
  wire \$720y ;
  wire \$722y ;
  wire \$724y ;
  wire \$726y ;
  wire \$728y ;
  wire \$730y ;
  wire \$732y ;
  wire \$733y ;
  wire \$741y ;
  wire \$753y ;
  wire \$756y ;
  wire [2:0] \$780y ;
  wire \$788y ;
  wire [31:0] \$789y ;
  wire \$793y ;
  wire \$794y ;
  wire \$895y ;
  wire \$912y ;
  wire \$950y ;
  wire \$967y ;
  wire [31:0] \$auto$bmuxmap.cc:84:execute$2153 ;
  wire [15:0] \$auto$bmuxmap.cc:84:execute$2158 ;
  wire [7:0] \$auto$bmuxmap.cc:84:execute$2161 ;
  wire [63:0] \$auto$bmuxmap.cc:84:execute$2163 ;
  wire [31:0] \$auto$bmuxmap.cc:84:execute$2172 ;
  wire [15:0] \$auto$bmuxmap.cc:84:execute$2177 ;
  wire [7:0] \$auto$bmuxmap.cc:84:execute$2180 ;
  wire \$auto$demuxmap.cc:63:execute$2182 ;
  wire \$auto$demuxmap.cc:63:execute$2185 ;
  wire \$auto$demuxmap.cc:63:execute$2188 ;
  wire \$auto$demuxmap.cc:63:execute$2191 ;
  wire \$auto$demuxmap.cc:63:execute$2194 ;
  wire \$auto$demuxmap.cc:63:execute$2197 ;
  wire \$auto$demuxmap.cc:63:execute$2200 ;
  wire \$auto$demuxmap.cc:63:execute$2203 ;
  wire \$auto$demuxmap.cc:63:execute$2206 ;
  wire \$auto$demuxmap.cc:63:execute$2209 ;
  wire \$auto$demuxmap.cc:63:execute$2212 ;
  wire \$auto$demuxmap.cc:63:execute$2215 ;
  wire \$auto$demuxmap.cc:63:execute$2218 ;
  wire \$auto$demuxmap.cc:63:execute$2221 ;
  wire \$auto$demuxmap.cc:63:execute$2224 ;
  wire \$auto$demuxmap.cc:63:execute$2227 ;
  wire \$auto$demuxmap.cc:63:execute$2230 ;
  wire \$auto$demuxmap.cc:63:execute$2233 ;
  wire \$auto$demuxmap.cc:63:execute$2236 ;
  wire \$auto$demuxmap.cc:63:execute$2239 ;
  wire \$auto$demuxmap.cc:63:execute$2242 ;
  wire \$auto$demuxmap.cc:63:execute$2245 ;
  wire \$auto$demuxmap.cc:63:execute$2248 ;
  wire \$auto$demuxmap.cc:63:execute$2251 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1800 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1802 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1829 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1831 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1836 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1843 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1845 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1856 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1859 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1862 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1873 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1876 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1911 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1913 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1915 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1917 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1919 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1921 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1936 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1941 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1943 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1948 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1954 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1956 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1958 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1964 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1971 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1988 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1990 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1992 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2043 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2049 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2053 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2059 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2063 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2069 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2077 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2083 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2088 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2094 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2098 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2101 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2103 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2109 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2111 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2116 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$2118 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1804 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1809 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1833 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1847 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1923 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1938 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1945 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1966 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1973 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1976 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1979 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1994 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1997 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2018 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2105 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2113 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$2120 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1764 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1766 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1768 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1770 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1776 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1778 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1780 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1782 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1784 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1788 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1790 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1798 ;
  wire [63:0] \$auto$rtlil.cc:3097:Not$2140 ;
  wire [127:0] \$auto$rtlil.cc:3097:Not$2147 ;
  wire [63:0] \$auto$rtlil.cc:3144:And$2142 ;
  wire [63:0] \$auto$rtlil.cc:3144:And$2144 ;
  wire [127:0] \$auto$rtlil.cc:3144:And$2149 ;
  wire [127:0] \$auto$rtlil.cc:3144:And$2151 ;
  wire [1:0] \$procmux$1005_Y ;
  wire \$procmux$1010_CMP ;
  wire [2:0] \$procmux$1018_Y ;
  wire \$procmux$1042_CMP ;
  wire [1:0] \$procmux$1073_Y ;
  wire [2:0] \$procmux$1083_Y ;
  wire \$procmux$1089_CMP ;
  wire \$procmux$1091_CMP ;
  wire \$procmux$1092_CMP ;
  wire \$procmux$1094_CMP ;
  wire \$procmux$1096_CMP ;
  wire \$procmux$1100_CMP ;
  wire [2:0] \$procmux$1107_Y ;
  wire [3:0] \$procmux$1112_Y ;
  wire [1:0] \$procmux$1115_Y ;
  wire [2:0] \$procmux$1199_Y ;
  wire [31:0] \$procmux$1204_Y ;
  wire [2:0] \$procmux$1211_Y ;
  wire [31:0] \$procmux$1215_Y ;
  wire [4:0] \$procmux$1219_Y ;
  wire [4:0] \$procmux$1229_Y ;
  wire [4:0] \$procmux$1236_Y ;
  wire [4:0] \$procmux$1238_Y ;
  wire [4:0] \$procmux$1248_Y ;
  wire [4:0] \$procmux$1255_Y ;
  wire \$procmux$1257_Y ;
  wire \$procmux$1259_Y ;
  wire \$procmux$1266_Y ;
  wire \$procmux$1269_Y ;
  wire [3:0] \$procmux$1280_Y ;
  wire [10:0] \$procmux$1291_Y ;
  wire \$procmux$12_Y ;
  wire \$procmux$1302_Y ;
  wire [3:0] \$procmux$1311_Y ;
  wire [10:0] \$procmux$1320_Y ;
  wire \$procmux$1363_Y ;
  wire [3:0] \$procmux$1368_Y ;
  wire [2:0] \$procmux$136_Y ;
  wire \$procmux$1406_Y ;
  wire \$procmux$1408_Y ;
  wire [10:0] \$procmux$1416_Y ;
  wire \$procmux$141_Y ;
  wire [3:0] \$procmux$1424_Y ;
  wire [10:0] \$procmux$1434_Y ;
  wire [3:0] \$procmux$1441_Y ;
  wire \$procmux$1448_Y ;
  wire \$procmux$1472_Y ;
  wire [3:0] \$procmux$1479_Y ;
  wire [3:0] \$procmux$1489_Y ;
  wire [2:0] \$procmux$148_Y ;
  wire [3:0] \$procmux$1496_Y ;
  wire [3:0] \$procmux$1498_Y ;
  wire [3:0] \$procmux$1508_Y ;
  wire [3:0] \$procmux$1515_Y ;
  wire \$procmux$1517_Y ;
  wire \$procmux$152_Y ;
  wire \$procmux$154_Y ;
  wire \$procmux$1592_Y ;
  wire [11:0] \$procmux$1595_Y ;
  wire [11:0] \$procmux$1602_Y ;
  wire \$procmux$161_Y ;
  wire [2:0] \$procmux$1702_Y ;
  wire [31:0] \$procmux$1707_Y ;
  wire [2:0] \$procmux$1714_Y ;
  wire [31:0] \$procmux$1718_Y ;
  wire \$procmux$1723_Y ;
  wire \$procmux$1730_Y ;
  wire \$procmux$1755_Y ;
  wire [2:0] \$procmux$253_Y ;
  wire [31:0] \$procmux$258_Y ;
  wire [2:0] \$procmux$265_Y ;
  wire [31:0] \$procmux$269_Y ;
  wire \$procmux$271_Y ;
  wire \$procmux$278_Y ;
  wire \$procmux$28_Y ;
  wire \$procmux$407_Y ;
  wire \$procmux$41_Y ;
  wire \$procmux$420_Y ;
  wire \$procmux$442_Y ;
  wire [65:0] \$procmux$464_Y ;
  wire [65:0] \$procmux$467_Y ;
  wire [65:0] \$procmux$469_Y ;
  wire \$procmux$475_Y ;
  wire \$procmux$478_Y ;
  wire \$procmux$481_Y ;
  wire \$procmux$483_Y ;
  wire \$procmux$492_Y ;
  wire [8:0] \$procmux$494_Y ;
  wire [8:0] \$procmux$502_Y ;
  wire [8:0] \$procmux$505_Y ;
  wire [2:0] \$procmux$513_Y ;
  wire \$procmux$51_Y ;
  wire [2:0] \$procmux$526_Y ;
  wire [2:0] \$procmux$536_Y ;
  wire \$procmux$548_Y ;
  wire [3:0] \$procmux$557_Y ;
  wire [1:0] \$procmux$566_Y ;
  wire [3:0] \$procmux$577_Y ;
  wire [1:0] \$procmux$585_Y ;
  wire \$procmux$58_Y ;
  wire [7:0] \$procmux$592_Y ;
  wire \$procmux$594_CMP ;
  wire \$procmux$595_CMP ;
  wire \$procmux$596_CMP ;
  wire \$procmux$598_CMP ;
  wire \$procmux$599_CMP ;
  wire \$procmux$600_CMP ;
  wire [3:0] \$procmux$606_Y ;
  wire [1:0] \$procmux$611_Y ;
  wire [7:0] \$procmux$616_Y ;
  wire \$procmux$621_Y ;
  wire [15:0] \$procmux$63_Y ;
  wire [3:0] \$procmux$648_Y ;
  wire [1:0] \$procmux$655_Y ;
  wire [3:0] \$procmux$662_Y ;
  wire [1:0] \$procmux$667_Y ;
  wire [15:0] \$procmux$66_Y ;
  wire [2:0] \$procmux$682_Y ;
  wire \$procmux$687_Y ;
  wire [2:0] \$procmux$68_Y ;
  wire [2:0] \$procmux$692_Y ;
  wire [15:0] \$procmux$6_Y ;
  wire \$procmux$700_Y ;
  wire [3:0] \$procmux$710_Y ;
  wire [31:0] \$procmux$720_Y ;
  wire [1:0] \$procmux$730_Y ;
  wire [31:0] \$procmux$73_Y ;
  wire [2:0] \$procmux$740_Y ;
  wire \$procmux$750_Y ;
  wire [3:0] \$procmux$758_Y ;
  wire [31:0] \$procmux$766_Y ;
  wire [31:0] \$procmux$774_Y ;
  wire [1:0] \$procmux$782_Y ;
  wire [2:0] \$procmux$790_Y ;
  wire [1:0] \$procmux$800_Y ;
  wire [2:0] \$procmux$80_Y ;
  wire [2:0] \$procmux$812_Y ;
  wire \$procmux$826_Y ;
  wire [3:0] \$procmux$840_Y ;
  wire [31:0] \$procmux$84_Y ;
  wire [31:0] \$procmux$854_Y ;
  wire [1:0] \$procmux$868_Y ;
  wire \$procmux$86_Y ;
  wire \$procmux$882_Y ;
  wire [3:0] \$procmux$894_Y ;
  wire [31:0] \$procmux$906_Y ;
  wire [2:0] \$procmux$930_Y ;
  wire \$procmux$93_Y ;
  wire \$procmux$941_Y ;
  wire [3:0] \$procmux$950_Y ;
  wire [31:0] \$procmux$959_Y ;
  wire [1:0] \$procmux$986_Y ;
  wire [2:0] \$procmux$995_Y ;
  wire [65:0] tl_gpio_d2h;
  wire [108:0] tl_gpio_h2d;
  wire [65:0] tl_pwm_d2h;
  wire [108:0] tl_pwm_h2d;
  wire [65:0] tl_rv_timer_d2h;
  wire [108:0] tl_rv_timer_h2d;
  wire [65:0] tl_uart_d2h;
  wire [108:0] tl_uart_h2d;
  wire [65:0] tl_uart_host_d2h;
  wire [108:0] tl_uart_host_h2d;
  wire [1:0] \u_gpio.cio_gpio_en_o ;
  reg [1:0] \u_gpio.cio_gpio_en_q ;
  wire [1:0] \u_gpio.cio_gpio_i ;
  wire [1:0] \u_gpio.cio_gpio_o ;
  reg [1:0] \u_gpio.cio_gpio_q ;
  wire \u_gpio.clk_i ;
  wire [1:0] \u_gpio.data_in_d ;
  reg [1:0] \u_gpio.data_in_q ;
  wire [1:0] \u_gpio.event_intr_acthigh ;
  wire [1:0] \u_gpio.event_intr_actlow ;
  wire [1:0] \u_gpio.event_intr_combined ;
  wire [1:0] \u_gpio.event_intr_fall ;
  wire [1:0] \u_gpio.event_intr_rise ;
  wire \u_gpio.gen_filter[0].u_filter.clk_i ;
  wire [1:0] \u_gpio.gen_filter[0].u_filter.diff_ctr_d ;
  reg [1:0] \u_gpio.gen_filter[0].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[0].u_filter.enable_i ;
  wire \u_gpio.gen_filter[0].u_filter.filter_i ;
  wire \u_gpio.gen_filter[0].u_filter.filter_o ;
  reg \u_gpio.gen_filter[0].u_filter.filter_q ;
  wire \u_gpio.gen_filter[0].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[0].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[0].u_filter.stored_value_q ;
  wire [1:0] \u_gpio.gen_filter[0].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[0].u_filter.update_stored_value ;
  wire \u_gpio.gen_filter[1].u_filter.clk_i ;
  wire [1:0] \u_gpio.gen_filter[1].u_filter.diff_ctr_d ;
  reg [1:0] \u_gpio.gen_filter[1].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[1].u_filter.enable_i ;
  wire \u_gpio.gen_filter[1].u_filter.filter_i ;
  wire \u_gpio.gen_filter[1].u_filter.filter_o ;
  reg \u_gpio.gen_filter[1].u_filter.filter_q ;
  wire \u_gpio.gen_filter[1].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[1].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[1].u_filter.stored_value_q ;
  wire [1:0] \u_gpio.gen_filter[1].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[1].u_filter.update_stored_value ;
  wire [9:0] \u_gpio.hw2reg ;
  wire \u_gpio.intr_hw.clk_i ;
  wire [1:0] \u_gpio.intr_hw.event_intr_i ;
  wire [1:0] \u_gpio.intr_hw.g_intr_event.new_event ;
  wire [1:0] \u_gpio.intr_hw.hw2reg_intr_state_d_o ;
  wire \u_gpio.intr_hw.hw2reg_intr_state_de_o ;
  wire [1:0] \u_gpio.intr_hw.reg2hw_intr_enable_q_i ;
  wire [1:0] \u_gpio.intr_hw.reg2hw_intr_state_q_i ;
  wire [1:0] \u_gpio.intr_hw.reg2hw_intr_test_q_i ;
  wire \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  wire \u_gpio.intr_hw.rst_ni ;
  wire [1:0] \u_gpio.intr_hw.status ;
  wire [26:0] \u_gpio.reg2hw ;
  wire \u_gpio.rst_ni ;
  wire [108:0] \u_gpio.tl_i ;
  wire [65:0] \u_gpio.tl_o ;
  wire [6:0] \u_gpio.u_reg.addr_hit ;
  wire \u_gpio.u_reg.addrmiss ;
  wire \u_gpio.u_reg.clk_i ;
  wire [3:0] \u_gpio.u_reg.ctrl_en_input_filter_qs ;
  wire [3:0] \u_gpio.u_reg.ctrl_en_input_filter_wd ;
  wire \u_gpio.u_reg.ctrl_en_input_filter_we ;
  wire [1:0] \u_gpio.u_reg.data_in_qs ;
  wire \u_gpio.u_reg.devmode_i ;
  wire [1:0] \u_gpio.u_reg.direct_flds_we ;
  wire [1:0] \u_gpio.u_reg.direct_gpio_o_qs ;
  wire [1:0] \u_gpio.u_reg.direct_gpio_o_wd ;
  wire [1:0] \u_gpio.u_reg.direct_gpio_oe_qs ;
  wire [1:0] \u_gpio.u_reg.direct_gpio_oe_wd ;
  wire \u_gpio.u_reg.direct_qe ;
  wire \u_gpio.u_reg.direct_we ;
  wire [9:0] \u_gpio.u_reg.hw2reg ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_falling_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_falling_wd ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_input_filter_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_input_filter_wd ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvlhigh_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvlhigh_wd ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvllow_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvllow_wd ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_rising_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_rising_wd ;
  wire \u_gpio.u_reg.intr_ctrl_we ;
  wire [1:0] \u_gpio.u_reg.intr_enable_qs ;
  wire [1:0] \u_gpio.u_reg.intr_enable_wd ;
  wire \u_gpio.u_reg.intr_enable_we ;
  wire [1:0] \u_gpio.u_reg.intr_state_qs ;
  wire [1:0] \u_gpio.u_reg.intr_state_wd ;
  wire \u_gpio.u_reg.intr_state_we ;
  wire \u_gpio.u_reg.intr_test_flds_we ;
  wire \u_gpio.u_reg.intr_test_qe ;
  wire [1:0] \u_gpio.u_reg.intr_test_wd ;
  wire \u_gpio.u_reg.intr_test_we ;
  wire [26:0] \u_gpio.u_reg.reg2hw ;
  wire [4:0] \u_gpio.u_reg.reg_addr ;
  wire [3:0] \u_gpio.u_reg.reg_be ;
  wire \u_gpio.u_reg.reg_busy ;
  wire \u_gpio.u_reg.reg_error ;
  wire [31:0] \u_gpio.u_reg.reg_rdata ;
  wire [31:0] \u_gpio.u_reg.reg_rdata_next ;
  wire \u_gpio.u_reg.reg_re ;
  wire [31:0] \u_gpio.u_reg.reg_wdata ;
  wire \u_gpio.u_reg.reg_we ;
  wire \u_gpio.u_reg.rst_ni ;
  wire \u_gpio.u_reg.shadow_busy ;
  wire [108:0] \u_gpio.u_reg.tl_i ;
  wire [65:0] \u_gpio.u_reg.tl_o ;
  wire [65:0] \u_gpio.u_reg.tl_o_pre ;
  wire [65:0] \u_gpio.u_reg.tl_reg_d2h ;
  wire [108:0] \u_gpio.u_reg.tl_reg_h2d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.de ;
  reg [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.qe ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.qs ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wd ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.we ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_data ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_data_in.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_data_in.d ;
  wire \u_gpio.u_reg.u_data_in.de ;
  wire [1:0] \u_gpio.u_reg.u_data_in.ds ;
  reg [1:0] \u_gpio.u_reg.u_data_in.q ;
  wire \u_gpio.u_reg.u_data_in.qe ;
  wire [1:0] \u_gpio.u_reg.u_data_in.qs ;
  wire \u_gpio.u_reg.u_data_in.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wd ;
  wire \u_gpio.u_reg.u_data_in.we ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_data ;
  wire \u_gpio.u_reg.u_data_in.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_wd ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_we ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.d ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.ds ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.q ;
  wire \u_gpio.u_reg.u_direct_gpio_o.qe ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.qs ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.wd ;
  wire \u_gpio.u_reg.u_direct_gpio_o.we ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.d ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.ds ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.q ;
  wire \u_gpio.u_reg.u_direct_gpio_oe.qe ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.qs ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.wd ;
  wire \u_gpio.u_reg.u_direct_gpio_oe.we ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_enable.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.d ;
  wire \u_gpio.u_reg.u_intr_enable.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_enable.q ;
  wire \u_gpio.u_reg.u_intr_enable.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.qs ;
  wire \u_gpio.u_reg.u_intr_enable.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wd ;
  wire \u_gpio.u_reg.u_intr_enable.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_data ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_state.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.d ;
  wire \u_gpio.u_reg.u_intr_state.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_state.q ;
  wire \u_gpio.u_reg.u_intr_state.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.qs ;
  wire \u_gpio.u_reg.u_intr_state.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wd ;
  wire \u_gpio.u_reg.u_intr_state.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_data ;
  wire \u_gpio.u_reg.u_intr_state.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.d ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.ds ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.q ;
  wire \u_gpio.u_reg.u_intr_test.qe ;
  wire \u_gpio.u_reg.u_intr_test.qre ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.qs ;
  wire \u_gpio.u_reg.u_intr_test.re ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.wd ;
  wire \u_gpio.u_reg.u_intr_test.we ;
  wire \u_gpio.u_reg.u_reg_if.a_ack ;
  wire \u_gpio.u_reg.u_reg_if.addr_align_err ;
  wire [4:0] \u_gpio.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.be_o ;
  wire \u_gpio.u_reg.u_reg_if.busy_i ;
  wire \u_gpio.u_reg.u_reg_if.clk_i ;
  wire \u_gpio.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_gpio.u_reg.u_reg_if.err_internal ;
  wire \u_gpio.u_reg.u_reg_if.error ;
  wire \u_gpio.u_reg.u_reg_if.error_i ;
  reg \u_gpio.u_reg.u_reg_if.error_q ;
  wire \u_gpio.u_reg.u_reg_if.intg_error ;
  wire \u_gpio.u_reg.u_reg_if.intg_error_o ;
  reg \u_gpio.u_reg.u_reg_if.outstanding_q ;
  wire \u_gpio.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_gpio.u_reg.u_reg_if.rdata_q ;
  wire \u_gpio.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_gpio.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_gpio.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_gpio.u_reg.u_reg_if.rspop_q ;
  wire \u_gpio.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_gpio.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.tl_o_pre ;
  wire \u_gpio.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.u_err.mask ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_gpio.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_gpio.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.wdata_o ;
  wire \u_gpio.u_reg.u_reg_if.we_o ;
  wire \u_gpio.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_gpio.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_gpio.u_reg.wr_err ;
  wire \u_pwm.cio_pwm_en_o ;
  wire \u_pwm.cio_pwm_o ;
  wire \u_pwm.clk_i ;
  wire [125:0] \u_pwm.reg2hw ;
  wire \u_pwm.rst_ni ;
  wire [108:0] \u_pwm.tl_i ;
  wire [65:0] \u_pwm.tl_o ;
  wire [26:0] \u_pwm.u_pwm_core.beat_ctr_d ;
  wire \u_pwm.u_pwm_core.beat_ctr_en ;
  reg [26:0] \u_pwm.u_pwm_core.beat_ctr_q ;
  wire \u_pwm.u_pwm_core.beat_end ;
  wire \u_pwm.u_pwm_core.clk_core_i ;
  wire [26:0] \u_pwm.u_pwm_core.clk_div ;
  wire \u_pwm.u_pwm_core.clr_blink_cntr ;
  wire \u_pwm.u_pwm_core.clr_phase_cntr ;
  wire \u_pwm.u_pwm_core.cntr_en ;
  wire \u_pwm.u_pwm_core.cycle_end ;
  wire [3:0] \u_pwm.u_pwm_core.dc_resn ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_d ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_en_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_x_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_y_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_sum ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clk_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_d ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask ;
  wire [3:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_resn_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_a_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_actual ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_b_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_blink ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_htbt ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_d ;
  reg [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_en_i ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pattern_repeat ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_ctr_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_masked ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_i ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.rst_ni ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.unused_sum ;
  wire [3:0] \u_pwm.u_pwm_core.lshift ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_d ;
  wire \u_pwm.u_pwm_core.phase_ctr_en ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_incr ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_next ;
  wire \u_pwm.u_pwm_core.phase_ctr_overflow ;
  reg [15:0] \u_pwm.u_pwm_core.phase_ctr_q ;
  wire \u_pwm.u_pwm_core.pwm_o ;
  wire [125:0] \u_pwm.u_pwm_core.reg2hw ;
  wire \u_pwm.u_pwm_core.rst_core_ni ;
  wire \u_pwm.u_reg._blink_param_gated_we ;
  wire [31:0] \u_pwm.u_reg._blink_param_qs ;
  wire \u_pwm.u_reg._blink_param_regwen ;
  wire [31:0] \u_pwm.u_reg._blink_param_wdata ;
  wire \u_pwm.u_reg._blink_param_we ;
  wire [15:0] \u_pwm.u_reg._blink_param_x_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._blink_param_y_0_qs_int ;
  wire [26:0] \u_pwm.u_reg._cfg_clk_div_qs_int ;
  wire \u_pwm.u_reg._cfg_cntr_en_qs_int ;
  wire [3:0] \u_pwm.u_reg._cfg_dc_resn_qs_int ;
  wire \u_pwm.u_reg._cfg_gated_we ;
  wire [31:0] \u_pwm.u_reg._cfg_qs ;
  wire \u_pwm.u_reg._cfg_regwen ;
  wire [31:0] \u_pwm.u_reg._cfg_wdata ;
  wire \u_pwm.u_reg._cfg_we ;
  wire [15:0] \u_pwm.u_reg._duty_cycle_a_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._duty_cycle_b_0_qs_int ;
  wire \u_pwm.u_reg._duty_cycle_gated_we ;
  wire [31:0] \u_pwm.u_reg._duty_cycle_qs ;
  wire \u_pwm.u_reg._duty_cycle_regwen ;
  wire [31:0] \u_pwm.u_reg._duty_cycle_wdata ;
  wire \u_pwm.u_reg._duty_cycle_we ;
  wire \u_pwm.u_reg._pwm_en_gated_we ;
  wire \u_pwm.u_reg._pwm_en_qs ;
  wire \u_pwm.u_reg._pwm_en_qs_int ;
  wire \u_pwm.u_reg._pwm_en_regwen ;
  wire \u_pwm.u_reg._pwm_en_wdata ;
  wire \u_pwm.u_reg._pwm_en_we ;
  wire \u_pwm.u_reg._pwm_param_blink_en_0_qs_int ;
  wire \u_pwm.u_reg._pwm_param_gated_we ;
  wire \u_pwm.u_reg._pwm_param_htbt_en_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._pwm_param_phase_delay_0_qs_int ;
  wire [31:0] \u_pwm.u_reg._pwm_param_qs ;
  wire \u_pwm.u_reg._pwm_param_regwen ;
  wire [31:0] \u_pwm.u_reg._pwm_param_wdata ;
  wire \u_pwm.u_reg._pwm_param_we ;
  wire [5:0] \u_pwm.u_reg.addr_hit ;
  wire \u_pwm.u_reg.addrmiss ;
  wire \u_pwm.u_reg.blink_param_busy ;
  wire [1:0] \u_pwm.u_reg.blink_param_flds_we ;
  wire \u_pwm.u_reg.blink_param_qe ;
  wire [31:0] \u_pwm.u_reg.blink_param_qs ;
  wire \u_pwm.u_reg.blink_param_we ;
  wire \u_pwm.u_reg.cfg_busy ;
  wire [2:0] \u_pwm.u_reg.cfg_flds_we ;
  wire \u_pwm.u_reg.cfg_qe ;
  wire [31:0] \u_pwm.u_reg.cfg_qs ;
  wire \u_pwm.u_reg.cfg_we ;
  wire \u_pwm.u_reg.clk_i ;
  wire \u_pwm.u_reg.devmode_i ;
  wire \u_pwm.u_reg.duty_cycle_busy ;
  wire [1:0] \u_pwm.u_reg.duty_cycle_flds_we ;
  wire \u_pwm.u_reg.duty_cycle_qe ;
  wire [31:0] \u_pwm.u_reg.duty_cycle_qs ;
  wire \u_pwm.u_reg.duty_cycle_we ;
  wire \u_pwm.u_reg.pwm_en_busy ;
  wire \u_pwm.u_reg.pwm_en_flds_we ;
  wire \u_pwm.u_reg.pwm_en_qe ;
  wire \u_pwm.u_reg.pwm_en_qs ;
  wire \u_pwm.u_reg.pwm_en_we ;
  wire \u_pwm.u_reg.pwm_param_busy ;
  wire [2:0] \u_pwm.u_reg.pwm_param_flds_we ;
  wire \u_pwm.u_reg.pwm_param_qe ;
  wire [31:0] \u_pwm.u_reg.pwm_param_qs ;
  wire \u_pwm.u_reg.pwm_param_we ;
  wire [125:0] \u_pwm.u_reg.reg2hw ;
  wire [4:0] \u_pwm.u_reg.reg_addr ;
  wire [3:0] \u_pwm.u_reg.reg_be ;
  wire \u_pwm.u_reg.reg_busy ;
  wire \u_pwm.u_reg.reg_busy_sel ;
  wire \u_pwm.u_reg.reg_error ;
  wire [31:0] \u_pwm.u_reg.reg_rdata ;
  wire [31:0] \u_pwm.u_reg.reg_rdata_next ;
  wire \u_pwm.u_reg.reg_re ;
  wire [31:0] \u_pwm.u_reg.reg_wdata ;
  wire \u_pwm.u_reg.reg_we ;
  wire \u_pwm.u_reg.regwen_qs ;
  wire \u_pwm.u_reg.regwen_wd ;
  wire \u_pwm.u_reg.regwen_we ;
  wire \u_pwm.u_reg.rst_ni ;
  wire \u_pwm.u_reg.shadow_busy ;
  wire [108:0] \u_pwm.u_reg.tl_i ;
  wire [65:0] \u_pwm.u_reg.tl_o ;
  wire [65:0] \u_pwm.u_reg.tl_o_pre ;
  wire [65:0] \u_pwm.u_reg.tl_reg_d2h ;
  wire [108:0] \u_pwm.u_reg.tl_reg_h2d ;
  wire \u_pwm.u_reg.u_blink_param0_qe.clk_i ;
  wire \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  reg \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  wire \u_pwm.u_reg.u_blink_param0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_ack ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_blink_param_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_req ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_blink_param_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_blink_param_x_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.d ;
  wire \u_pwm.u_reg.u_blink_param_x_0.de ;
  reg [15:0] \u_pwm.u_reg.u_blink_param_x_0.q ;
  wire \u_pwm.u_reg.u_blink_param_x_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.qs ;
  wire \u_pwm.u_reg.u_blink_param_x_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wd ;
  wire \u_pwm.u_reg.u_blink_param_x_0.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_x_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_blink_param_y_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.d ;
  wire \u_pwm.u_reg.u_blink_param_y_0.de ;
  reg [15:0] \u_pwm.u_reg.u_blink_param_y_0.q ;
  wire \u_pwm.u_reg.u_blink_param_y_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.qs ;
  wire \u_pwm.u_reg.u_blink_param_y_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wd ;
  wire \u_pwm.u_reg.u_blink_param_y_0.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_y_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg0_qe.clk_i ;
  wire \u_pwm.u_reg.u_cfg0_qe.d_i ;
  reg \u_pwm.u_reg.u_cfg0_qe.q_o ;
  wire \u_pwm.u_reg.u_cfg0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_cfg_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_req ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_cfg_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_cfg_clk_div.clk_i ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.d ;
  wire \u_pwm.u_reg.u_cfg_clk_div.de ;
  reg [26:0] \u_pwm.u_reg.u_cfg_clk_div.q ;
  wire \u_pwm.u_reg.u_cfg_clk_div.qe ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.qs ;
  wire \u_pwm.u_reg.u_cfg_clk_div.rst_ni ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wd ;
  wire \u_pwm.u_reg.u_cfg_clk_div.we ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_data ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.de ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.gen_w.unused_q ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.q ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.we ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.d ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.de ;
  reg \u_pwm.u_reg.u_cfg_cntr_en.q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.qe ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.qs ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wd ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.we ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_data ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.clk_i ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.d ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.de ;
  reg [3:0] \u_pwm.u_reg.u_cfg_dc_resn.q ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.qe ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.qs ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.rst_ni ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wd ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.we ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_data ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.de ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.q ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.we ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle0_qe.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.d ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.de ;
  reg [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.qs ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.d ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.de ;
  reg [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.qs ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_ack ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_req ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_duty_cycle_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_en.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en.d ;
  wire \u_pwm.u_reg.u_pwm_en.de ;
  reg \u_pwm.u_reg.u_pwm_en.q ;
  wire \u_pwm.u_reg.u_pwm_en.qe ;
  wire \u_pwm.u_reg.u_pwm_en.qs ;
  wire \u_pwm.u_reg.u_pwm_en.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en.wd ;
  wire \u_pwm.u_reg.u_pwm_en.we ;
  wire \u_pwm.u_reg.u_pwm_en.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  reg \u_pwm.u_reg.u_pwm_en0_qe.q_o ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_ds_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_qs ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_req ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_update ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_ds_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.unused_wd ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  reg \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.de ;
  reg \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.qe ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.we ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_req ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.de ;
  reg \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.qe ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.we ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.de ;
  reg [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_reg_if.a_ack ;
  wire \u_pwm.u_reg.u_reg_if.addr_align_err ;
  wire [4:0] \u_pwm.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.be_o ;
  wire \u_pwm.u_reg.u_reg_if.busy_i ;
  wire \u_pwm.u_reg.u_reg_if.clk_i ;
  wire \u_pwm.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_pwm.u_reg.u_reg_if.err_internal ;
  wire \u_pwm.u_reg.u_reg_if.error ;
  wire \u_pwm.u_reg.u_reg_if.error_i ;
  reg \u_pwm.u_reg.u_reg_if.error_q ;
  wire \u_pwm.u_reg.u_reg_if.intg_error ;
  wire \u_pwm.u_reg.u_reg_if.intg_error_o ;
  reg \u_pwm.u_reg.u_reg_if.outstanding_q ;
  wire \u_pwm.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_pwm.u_reg.u_reg_if.rdata_q ;
  wire \u_pwm.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_pwm.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_pwm.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_pwm.u_reg.u_reg_if.rspop_q ;
  wire \u_pwm.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_pwm.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.tl_o_pre ;
  wire \u_pwm.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.u_err.mask ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_full ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_get ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_pwm.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_pwm.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.wdata_o ;
  wire \u_pwm.u_reg.u_reg_if.we_o ;
  wire \u_pwm.u_reg.u_reg_if.wr_req ;
  wire \u_pwm.u_reg.u_regwen.clk_i ;
  wire \u_pwm.u_reg.u_regwen.d ;
  wire \u_pwm.u_reg.u_regwen.de ;
  reg \u_pwm.u_reg.u_regwen.q ;
  wire \u_pwm.u_reg.u_regwen.qe ;
  wire \u_pwm.u_reg.u_regwen.qs ;
  wire \u_pwm.u_reg.u_regwen.rst_ni ;
  wire \u_pwm.u_reg.u_regwen.wd ;
  wire \u_pwm.u_reg.u_regwen.we ;
  wire \u_pwm.u_reg.u_regwen.wr_data ;
  wire \u_pwm.u_reg.u_regwen.wr_en ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_en ;
  wire [65:0] \u_pwm.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_pwm.u_reg.unused__pwm_en_wdata ;
  wire \u_pwm.u_reg.wr_err ;
  wire \u_rv_timer.active ;
  wire \u_rv_timer.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_core.active ;
  wire \u_rv_timer.gen_harts[0].u_core.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_core.intr ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtime ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtime_d ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtimecmp ;
  wire [11:0] \u_rv_timer.gen_harts[0].u_core.prescaler ;
  wire \u_rv_timer.gen_harts[0].u_core.rst_ni ;
  wire [7:0] \u_rv_timer.gen_harts[0].u_core.step ;
  wire \u_rv_timer.gen_harts[0].u_core.tick ;
  reg [11:0] \u_rv_timer.gen_harts[0].u_core.tick_count ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_d_o ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_de_o ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_enable_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_state_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.rst_ni ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.status ;
  wire [67:0] \u_rv_timer.hw2reg ;
  wire \u_rv_timer.intr_timer_en ;
  wire \u_rv_timer.intr_timer_set ;
  wire \u_rv_timer.intr_timer_state_d ;
  wire \u_rv_timer.intr_timer_state_de ;
  wire \u_rv_timer.intr_timer_state_q ;
  wire \u_rv_timer.intr_timer_test_q ;
  wire \u_rv_timer.intr_timer_test_qe ;
  wire [63:0] \u_rv_timer.mtime ;
  wire [63:0] \u_rv_timer.mtime_d ;
  wire [63:0] \u_rv_timer.mtimecmp ;
  wire \u_rv_timer.mtimecmp_update ;
  wire [11:0] \u_rv_timer.prescaler ;
  wire [154:0] \u_rv_timer.reg2hw ;
  wire \u_rv_timer.rst_ni ;
  wire [7:0] \u_rv_timer.step ;
  wire \u_rv_timer.tick ;
  wire [108:0] \u_rv_timer.tl_i ;
  wire [65:0] \u_rv_timer.tl_o ;
  wire [8:0] \u_rv_timer.u_reg.addr_hit ;
  wire \u_rv_timer.u_reg.addrmiss ;
  wire [11:0] \u_rv_timer.u_reg.cfg0_prescale_qs ;
  wire [11:0] \u_rv_timer.u_reg.cfg0_prescale_wd ;
  wire [7:0] \u_rv_timer.u_reg.cfg0_step_qs ;
  wire [7:0] \u_rv_timer.u_reg.cfg0_step_wd ;
  wire \u_rv_timer.u_reg.cfg0_we ;
  wire \u_rv_timer.u_reg.clk_i ;
  wire \u_rv_timer.u_reg.compare_lower0_0_flds_we ;
  wire \u_rv_timer.u_reg.compare_lower0_0_qe ;
  wire [31:0] \u_rv_timer.u_reg.compare_lower0_0_qs ;
  wire [31:0] \u_rv_timer.u_reg.compare_lower0_0_wd ;
  wire \u_rv_timer.u_reg.compare_lower0_0_we ;
  wire \u_rv_timer.u_reg.compare_upper0_0_flds_we ;
  wire \u_rv_timer.u_reg.compare_upper0_0_qe ;
  wire [31:0] \u_rv_timer.u_reg.compare_upper0_0_qs ;
  wire [31:0] \u_rv_timer.u_reg.compare_upper0_0_wd ;
  wire \u_rv_timer.u_reg.compare_upper0_0_we ;
  wire \u_rv_timer.u_reg.ctrl_qs ;
  wire \u_rv_timer.u_reg.ctrl_wd ;
  wire \u_rv_timer.u_reg.ctrl_we ;
  wire \u_rv_timer.u_reg.devmode_i ;
  wire [67:0] \u_rv_timer.u_reg.hw2reg ;
  wire \u_rv_timer.u_reg.intr_enable0_qs ;
  wire \u_rv_timer.u_reg.intr_enable0_wd ;
  wire \u_rv_timer.u_reg.intr_enable0_we ;
  wire \u_rv_timer.u_reg.intr_state0_qs ;
  wire \u_rv_timer.u_reg.intr_state0_wd ;
  wire \u_rv_timer.u_reg.intr_state0_we ;
  wire \u_rv_timer.u_reg.intr_test0_flds_we ;
  wire \u_rv_timer.u_reg.intr_test0_qe ;
  wire \u_rv_timer.u_reg.intr_test0_wd ;
  wire \u_rv_timer.u_reg.intr_test0_we ;
  wire [154:0] \u_rv_timer.u_reg.reg2hw ;
  wire [8:0] \u_rv_timer.u_reg.reg_addr ;
  wire [3:0] \u_rv_timer.u_reg.reg_be ;
  wire \u_rv_timer.u_reg.reg_busy ;
  wire \u_rv_timer.u_reg.reg_error ;
  wire [31:0] \u_rv_timer.u_reg.reg_rdata ;
  wire [31:0] \u_rv_timer.u_reg.reg_rdata_next ;
  wire \u_rv_timer.u_reg.reg_re ;
  wire [31:0] \u_rv_timer.u_reg.reg_wdata ;
  wire \u_rv_timer.u_reg.reg_we ;
  wire \u_rv_timer.u_reg.rst_ni ;
  wire \u_rv_timer.u_reg.shadow_busy ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_lower0_qs ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_lower0_wd ;
  wire \u_rv_timer.u_reg.timer_v_lower0_we ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_upper0_qs ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_upper0_wd ;
  wire \u_rv_timer.u_reg.timer_v_upper0_we ;
  wire [108:0] \u_rv_timer.u_reg.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.tl_o ;
  wire [65:0] \u_rv_timer.u_reg.tl_o_pre ;
  wire [65:0] \u_rv_timer.u_reg.tl_reg_d2h ;
  wire [108:0] \u_rv_timer.u_reg.tl_reg_h2d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.clk_i ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.de ;
  reg [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.qe ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.qs ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.rst_ni ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.we ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.de ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.gen_w.unused_q ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.q ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.we ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_cfg0_step.clk_i ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.d ;
  wire \u_rv_timer.u_reg.u_cfg0_step.de ;
  reg [7:0] \u_rv_timer.u_reg.u_cfg0_step.q ;
  wire \u_rv_timer.u_reg.u_cfg0_step.qe ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.qs ;
  wire \u_rv_timer.u_reg.u_cfg0_step.rst_ni ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_step.we ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.de ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.gen_w.unused_q ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.q ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.we ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.d ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.qs ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wd ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.clk_i ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  reg \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.rst_ni ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.d ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.qs ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wd ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.clk_i ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  reg \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.rst_ni ;
  wire \u_rv_timer.u_reg.u_ctrl.clk_i ;
  wire \u_rv_timer.u_reg.u_ctrl.d ;
  wire \u_rv_timer.u_reg.u_ctrl.de ;
  reg \u_rv_timer.u_reg.u_ctrl.q ;
  wire \u_rv_timer.u_reg.u_ctrl.qe ;
  wire \u_rv_timer.u_reg.u_ctrl.qs ;
  wire \u_rv_timer.u_reg.u_ctrl.rst_ni ;
  wire \u_rv_timer.u_reg.u_ctrl.wd ;
  wire \u_rv_timer.u_reg.u_ctrl.we ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_data ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.gen_w.unused_q ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_enable0.clk_i ;
  wire \u_rv_timer.u_reg.u_intr_enable0.d ;
  wire \u_rv_timer.u_reg.u_intr_enable0.de ;
  reg \u_rv_timer.u_reg.u_intr_enable0.q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.qe ;
  wire \u_rv_timer.u_reg.u_intr_enable0.qs ;
  wire \u_rv_timer.u_reg.u_intr_enable0.rst_ni ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wd ;
  wire \u_rv_timer.u_reg.u_intr_enable0.we ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_state0.clk_i ;
  wire \u_rv_timer.u_reg.u_intr_state0.d ;
  wire \u_rv_timer.u_reg.u_intr_state0.de ;
  reg \u_rv_timer.u_reg.u_intr_state0.q ;
  wire \u_rv_timer.u_reg.u_intr_state0.qe ;
  wire \u_rv_timer.u_reg.u_intr_state0.qs ;
  wire \u_rv_timer.u_reg.u_intr_state0.rst_ni ;
  wire \u_rv_timer.u_reg.u_intr_state0.wd ;
  wire \u_rv_timer.u_reg.u_intr_state0.we ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_test0.d ;
  wire \u_rv_timer.u_reg.u_intr_test0.ds ;
  wire \u_rv_timer.u_reg.u_intr_test0.q ;
  wire \u_rv_timer.u_reg.u_intr_test0.qe ;
  wire \u_rv_timer.u_reg.u_intr_test0.qre ;
  wire \u_rv_timer.u_reg.u_intr_test0.qs ;
  wire \u_rv_timer.u_reg.u_intr_test0.re ;
  wire \u_rv_timer.u_reg.u_intr_test0.wd ;
  wire \u_rv_timer.u_reg.u_intr_test0.we ;
  wire \u_rv_timer.u_reg.u_reg_if.a_ack ;
  wire \u_rv_timer.u_reg.u_reg_if.addr_align_err ;
  wire [8:0] \u_rv_timer.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.be_o ;
  wire \u_rv_timer.u_reg.u_reg_if.busy_i ;
  wire \u_rv_timer.u_reg.u_reg_if.clk_i ;
  wire \u_rv_timer.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_rv_timer.u_reg.u_reg_if.err_internal ;
  wire \u_rv_timer.u_reg.u_reg_if.error ;
  wire \u_rv_timer.u_reg.u_reg_if.error_i ;
  reg \u_rv_timer.u_reg.u_reg_if.error_q ;
  wire \u_rv_timer.u_reg.u_reg_if.intg_error ;
  wire \u_rv_timer.u_reg.u_reg_if.intg_error_o ;
  reg \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  wire \u_rv_timer.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_rv_timer.u_reg.u_reg_if.rdata_q ;
  wire \u_rv_timer.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_rv_timer.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_rv_timer.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_rv_timer.u_reg.u_reg_if.rspop_q ;
  wire \u_rv_timer.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_rv_timer.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.tl_o_pre ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.u_err.mask ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_full ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_get ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_rv_timer.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.wdata_o ;
  wire \u_rv_timer.u_reg.u_reg_if.we_o ;
  wire \u_rv_timer.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_rv_timer.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.d ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.qs ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.d ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.qs ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.wr_err ;
  wire [31:0] \u_uart.addr_o ;
  wire [3:0] \u_uart.be_o ;
  wire \u_uart.cio_rx_i ;
  wire \u_uart.cio_tx_en_o ;
  wire \u_uart.cio_tx_o ;
  wire \u_uart.clk_i ;
  wire \u_uart.err_i ;
  wire \u_uart.gnt_i ;
  wire [29:0] \u_uart.hw2reg ;
  wire [31:0] \u_uart.rdata_i ;
  wire [56:0] \u_uart.reg2hw ;
  wire \u_uart.req_o ;
  wire \u_uart.rst_ni ;
  wire [7:0] \u_uart.rx_data ;
  wire \u_uart.rx_pop ;
  wire \u_uart.rx_valid ;
  wire [108:0] \u_uart.tl_i ;
  wire [65:0] \u_uart.tl_o ;
  wire [7:0] \u_uart.tx_data ;
  wire \u_uart.tx_ready ;
  wire \u_uart.tx_valid ;
  wire [31:0] \u_uart.u_bridge.addr_o ;
  reg [31:0] \u_uart.u_bridge.addr_q ;
  reg \u_uart.u_bridge.any_err_q ;
  wire [3:0] \u_uart.u_bridge.be_d ;
  wire [3:0] \u_uart.u_bridge.be_o ;
  reg [3:0] \u_uart.u_bridge.be_q ;
  wire [7:0] \u_uart.u_bridge.bebyte_d ;
  reg [7:0] \u_uart.u_bridge.bebyte_q  = 8'h00;
  wire \u_uart.u_bridge.clk_i ;
  wire \u_uart.u_bridge.err_i ;
  wire \u_uart.u_bridge.gnt_i ;
  wire [1:0] \u_uart.u_bridge.idx_d ;
  reg [1:0] \u_uart.u_bridge.idx_q ;
  wire [7:0] \u_uart.u_bridge.op_d ;
  reg [7:0] \u_uart.u_bridge.op_q  = 8'h00;
  wire [31:0] \u_uart.u_bridge.rdata_i ;
  reg [31:0] \u_uart.u_bridge.rdata_q ;
  wire \u_uart.u_bridge.req_d ;
  wire \u_uart.u_bridge.req_o ;
  reg \u_uart.u_bridge.req_q ;
  wire \u_uart.u_bridge.rst_ni ;
  wire [7:0] \u_uart.u_bridge.rx_data_i ;
  wire \u_uart.u_bridge.rx_pop_o ;
  wire \u_uart.u_bridge.rx_valid_i ;
  wire [2:0] \u_uart.u_bridge.rxf_st_d ;
  reg [2:0] \u_uart.u_bridge.rxf_st_q ;
  wire [31:0] \u_uart.u_bridge.sh_d ;
  reg [31:0] \u_uart.u_bridge.sh_q ;
  wire [7:0] \u_uart.u_bridge.tx_data_o ;
  wire [3:0] \u_uart.u_bridge.tx_idx_d ;
  reg [3:0] \u_uart.u_bridge.tx_idx_q ;
  wire \u_uart.u_bridge.tx_ready_i ;
  wire [1:0] \u_uart.u_bridge.tx_st_d ;
  reg [1:0] \u_uart.u_bridge.tx_st_q ;
  wire \u_uart.u_bridge.tx_valid_o ;
  wire \u_uart.u_bridge.valid_i ;
  wire [31:0] \u_uart.u_bridge.wdata_d ;
  wire [31:0] \u_uart.u_bridge.wdata_o ;
  reg [31:0] \u_uart.u_bridge.wdata_q ;
  wire \u_uart.u_bridge.we_d ;
  wire \u_uart.u_bridge.we_o ;
  reg \u_uart.u_bridge.we_q ;
  wire [5:0] \u_uart.u_reg.addr_hit ;
  wire \u_uart.u_reg.addrmiss ;
  wire \u_uart.u_reg.clk_i ;
  wire \u_uart.u_reg.ctrl_llpbk_qs ;
  wire \u_uart.u_reg.ctrl_llpbk_wd ;
  wire [15:0] \u_uart.u_reg.ctrl_nco_qs ;
  wire [15:0] \u_uart.u_reg.ctrl_nco_wd ;
  wire \u_uart.u_reg.ctrl_nf_qs ;
  wire \u_uart.u_reg.ctrl_nf_wd ;
  wire \u_uart.u_reg.ctrl_parity_en_qs ;
  wire \u_uart.u_reg.ctrl_parity_en_wd ;
  wire \u_uart.u_reg.ctrl_parity_odd_qs ;
  wire \u_uart.u_reg.ctrl_parity_odd_wd ;
  wire \u_uart.u_reg.ctrl_rx_qs ;
  wire \u_uart.u_reg.ctrl_rx_wd ;
  wire \u_uart.u_reg.ctrl_slpbk_qs ;
  wire \u_uart.u_reg.ctrl_slpbk_wd ;
  wire \u_uart.u_reg.ctrl_tx_qs ;
  wire \u_uart.u_reg.ctrl_tx_wd ;
  wire \u_uart.u_reg.ctrl_we ;
  wire \u_uart.u_reg.devmode_i ;
  wire [1:0] \u_uart.u_reg.fifo_ctrl_flds_we ;
  wire \u_uart.u_reg.fifo_ctrl_qe ;
  wire \u_uart.u_reg.fifo_ctrl_rxrst_wd ;
  wire \u_uart.u_reg.fifo_ctrl_txrst_wd ;
  wire \u_uart.u_reg.fifo_ctrl_we ;
  wire [7:0] \u_uart.u_reg.fifo_status_rxlvl_qs ;
  wire [7:0] \u_uart.u_reg.fifo_status_txlvl_qs ;
  wire [29:0] \u_uart.u_reg.hw2reg ;
  wire [7:0] \u_uart.u_reg.rdata_qs ;
  wire \u_uart.u_reg.rdata_re ;
  wire [56:0] \u_uart.u_reg.reg2hw ;
  wire [4:0] \u_uart.u_reg.reg_addr ;
  wire [3:0] \u_uart.u_reg.reg_be ;
  wire \u_uart.u_reg.reg_busy ;
  wire \u_uart.u_reg.reg_error ;
  wire [31:0] \u_uart.u_reg.reg_rdata ;
  wire [31:0] \u_uart.u_reg.reg_rdata_next ;
  wire \u_uart.u_reg.reg_re ;
  wire [31:0] \u_uart.u_reg.reg_wdata ;
  wire \u_uart.u_reg.reg_we ;
  wire \u_uart.u_reg.rst_ni ;
  wire \u_uart.u_reg.shadow_busy ;
  wire \u_uart.u_reg.status_re ;
  wire \u_uart.u_reg.status_rxempty_qs ;
  wire \u_uart.u_reg.status_rxfull_qs ;
  wire \u_uart.u_reg.status_rxidle_qs ;
  wire \u_uart.u_reg.status_txempty_qs ;
  wire \u_uart.u_reg.status_txfull_qs ;
  wire \u_uart.u_reg.status_txidle_qs ;
  wire [108:0] \u_uart.u_reg.tl_i ;
  wire [65:0] \u_uart.u_reg.tl_o ;
  wire [65:0] \u_uart.u_reg.tl_o_pre ;
  wire [65:0] \u_uart.u_reg.tl_reg_d2h ;
  wire [108:0] \u_uart.u_reg.tl_reg_h2d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.clk_i ;
  wire \u_uart.u_reg.u_ctrl_llpbk.d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.de ;
  reg \u_uart.u_reg.u_ctrl_llpbk.q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.qe ;
  wire \u_uart.u_reg.u_ctrl_llpbk.qs ;
  wire \u_uart.u_reg.u_ctrl_llpbk.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wd ;
  wire \u_uart.u_reg.u_ctrl_llpbk.we ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_data ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nco.clk_i ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.d ;
  wire \u_uart.u_reg.u_ctrl_nco.de ;
  reg [15:0] \u_uart.u_reg.u_ctrl_nco.q ;
  wire \u_uart.u_reg.u_ctrl_nco.qe ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.qs ;
  wire \u_uart.u_reg.u_ctrl_nco.rst_ni ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wd ;
  wire \u_uart.u_reg.u_ctrl_nco.we ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.de ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.q ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.we ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nf.clk_i ;
  wire \u_uart.u_reg.u_ctrl_nf.d ;
  wire \u_uart.u_reg.u_ctrl_nf.de ;
  reg \u_uart.u_reg.u_ctrl_nf.q ;
  wire \u_uart.u_reg.u_ctrl_nf.qe ;
  wire \u_uart.u_reg.u_ctrl_nf.qs ;
  wire \u_uart.u_reg.u_ctrl_nf.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_nf.wd ;
  wire \u_uart.u_reg.u_ctrl_nf.we ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_en.clk_i ;
  wire \u_uart.u_reg.u_ctrl_parity_en.d ;
  wire \u_uart.u_reg.u_ctrl_parity_en.de ;
  reg \u_uart.u_reg.u_ctrl_parity_en.q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.qe ;
  wire \u_uart.u_reg.u_ctrl_parity_en.qs ;
  wire \u_uart.u_reg.u_ctrl_parity_en.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_en.we ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.clk_i ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.d ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.de ;
  reg \u_uart.u_reg.u_ctrl_parity_odd.q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.qe ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.qs ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.we ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_rx.clk_i ;
  wire \u_uart.u_reg.u_ctrl_rx.d ;
  wire \u_uart.u_reg.u_ctrl_rx.de ;
  reg \u_uart.u_reg.u_ctrl_rx.q ;
  wire \u_uart.u_reg.u_ctrl_rx.qe ;
  wire \u_uart.u_reg.u_ctrl_rx.qs ;
  wire \u_uart.u_reg.u_ctrl_rx.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_rx.wd ;
  wire \u_uart.u_reg.u_ctrl_rx.we ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_slpbk.clk_i ;
  wire \u_uart.u_reg.u_ctrl_slpbk.d ;
  wire \u_uart.u_reg.u_ctrl_slpbk.de ;
  reg \u_uart.u_reg.u_ctrl_slpbk.q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.qe ;
  wire \u_uart.u_reg.u_ctrl_slpbk.qs ;
  wire \u_uart.u_reg.u_ctrl_slpbk.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wd ;
  wire \u_uart.u_reg.u_ctrl_slpbk.we ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_data ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_tx.clk_i ;
  wire \u_uart.u_reg.u_ctrl_tx.d ;
  wire \u_uart.u_reg.u_ctrl_tx.de ;
  reg \u_uart.u_reg.u_ctrl_tx.q ;
  wire \u_uart.u_reg.u_ctrl_tx.qe ;
  wire \u_uart.u_reg.u_ctrl_tx.qs ;
  wire \u_uart.u_reg.u_ctrl_tx.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_tx.wd ;
  wire \u_uart.u_reg.u_ctrl_tx.we ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_data ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  reg \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.de ;
  reg \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.qe ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.de ;
  reg \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.qe ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_en ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.d ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.ds ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.q ;
  wire \u_uart.u_reg.u_fifo_status_rxlvl.qe ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.qs ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.wd ;
  wire \u_uart.u_reg.u_fifo_status_rxlvl.we ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.d ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.ds ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.q ;
  wire \u_uart.u_reg.u_fifo_status_txlvl.qe ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.qs ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.wd ;
  wire \u_uart.u_reg.u_fifo_status_txlvl.we ;
  wire [7:0] \u_uart.u_reg.u_rdata.d ;
  wire [7:0] \u_uart.u_reg.u_rdata.ds ;
  wire [7:0] \u_uart.u_reg.u_rdata.q ;
  wire \u_uart.u_reg.u_rdata.qe ;
  wire \u_uart.u_reg.u_rdata.qre ;
  wire [7:0] \u_uart.u_reg.u_rdata.qs ;
  wire \u_uart.u_reg.u_rdata.re ;
  wire [7:0] \u_uart.u_reg.u_rdata.wd ;
  wire \u_uart.u_reg.u_rdata.we ;
  wire \u_uart.u_reg.u_reg_if.a_ack ;
  wire \u_uart.u_reg.u_reg_if.addr_align_err ;
  wire [4:0] \u_uart.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_uart.u_reg.u_reg_if.be_o ;
  wire \u_uart.u_reg.u_reg_if.busy_i ;
  wire \u_uart.u_reg.u_reg_if.clk_i ;
  wire \u_uart.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_uart.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_uart.u_reg.u_reg_if.err_internal ;
  wire \u_uart.u_reg.u_reg_if.error ;
  wire \u_uart.u_reg.u_reg_if.error_i ;
  reg \u_uart.u_reg.u_reg_if.error_q ;
  wire \u_uart.u_reg.u_reg_if.intg_error ;
  wire \u_uart.u_reg.u_reg_if.intg_error_o ;
  reg \u_uart.u_reg.u_reg_if.outstanding_q ;
  wire \u_uart.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_uart.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_uart.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_uart.u_reg.u_reg_if.rdata_q ;
  wire \u_uart.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_uart.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_uart.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_uart.u_reg.u_reg_if.rspop_q ;
  wire \u_uart.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_uart.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_uart.u_reg.u_reg_if.tl_o_pre ;
  wire \u_uart.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_uart.u_reg.u_reg_if.u_err.mask ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_full ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_get ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_uart.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_uart.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_uart.u_reg.u_reg_if.wdata_o ;
  wire \u_uart.u_reg.u_reg_if.we_o ;
  wire \u_uart.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_uart.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_uart.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_uart.u_reg.u_status_rxempty.d ;
  wire \u_uart.u_reg.u_status_rxempty.ds ;
  wire \u_uart.u_reg.u_status_rxempty.q ;
  wire \u_uart.u_reg.u_status_rxempty.qe ;
  wire \u_uart.u_reg.u_status_rxempty.qre ;
  wire \u_uart.u_reg.u_status_rxempty.qs ;
  wire \u_uart.u_reg.u_status_rxempty.re ;
  wire \u_uart.u_reg.u_status_rxempty.wd ;
  wire \u_uart.u_reg.u_status_rxempty.we ;
  wire \u_uart.u_reg.u_status_rxfull.d ;
  wire \u_uart.u_reg.u_status_rxfull.ds ;
  wire \u_uart.u_reg.u_status_rxfull.q ;
  wire \u_uart.u_reg.u_status_rxfull.qe ;
  wire \u_uart.u_reg.u_status_rxfull.qre ;
  wire \u_uart.u_reg.u_status_rxfull.qs ;
  wire \u_uart.u_reg.u_status_rxfull.re ;
  wire \u_uart.u_reg.u_status_rxfull.wd ;
  wire \u_uart.u_reg.u_status_rxfull.we ;
  wire \u_uart.u_reg.u_status_rxidle.d ;
  wire \u_uart.u_reg.u_status_rxidle.ds ;
  wire \u_uart.u_reg.u_status_rxidle.q ;
  wire \u_uart.u_reg.u_status_rxidle.qe ;
  wire \u_uart.u_reg.u_status_rxidle.qre ;
  wire \u_uart.u_reg.u_status_rxidle.qs ;
  wire \u_uart.u_reg.u_status_rxidle.re ;
  wire \u_uart.u_reg.u_status_rxidle.wd ;
  wire \u_uart.u_reg.u_status_rxidle.we ;
  wire \u_uart.u_reg.u_status_txempty.d ;
  wire \u_uart.u_reg.u_status_txempty.ds ;
  wire \u_uart.u_reg.u_status_txempty.q ;
  wire \u_uart.u_reg.u_status_txempty.qe ;
  wire \u_uart.u_reg.u_status_txempty.qre ;
  wire \u_uart.u_reg.u_status_txempty.qs ;
  wire \u_uart.u_reg.u_status_txempty.re ;
  wire \u_uart.u_reg.u_status_txempty.wd ;
  wire \u_uart.u_reg.u_status_txempty.we ;
  wire \u_uart.u_reg.u_status_txfull.d ;
  wire \u_uart.u_reg.u_status_txfull.ds ;
  wire \u_uart.u_reg.u_status_txfull.q ;
  wire \u_uart.u_reg.u_status_txfull.qe ;
  wire \u_uart.u_reg.u_status_txfull.qre ;
  wire \u_uart.u_reg.u_status_txfull.qs ;
  wire \u_uart.u_reg.u_status_txfull.re ;
  wire \u_uart.u_reg.u_status_txfull.wd ;
  wire \u_uart.u_reg.u_status_txfull.we ;
  wire \u_uart.u_reg.u_status_txidle.d ;
  wire \u_uart.u_reg.u_status_txidle.ds ;
  wire \u_uart.u_reg.u_status_txidle.q ;
  wire \u_uart.u_reg.u_status_txidle.qe ;
  wire \u_uart.u_reg.u_status_txidle.qre ;
  wire \u_uart.u_reg.u_status_txidle.qs ;
  wire \u_uart.u_reg.u_status_txidle.re ;
  wire \u_uart.u_reg.u_status_txidle.wd ;
  wire \u_uart.u_reg.u_status_txidle.we ;
  wire \u_uart.u_reg.u_wdata.clk_i ;
  wire [7:0] \u_uart.u_reg.u_wdata.d ;
  wire \u_uart.u_reg.u_wdata.de ;
  reg [7:0] \u_uart.u_reg.u_wdata.q ;
  wire \u_uart.u_reg.u_wdata.qe ;
  wire [7:0] \u_uart.u_reg.u_wdata.qs ;
  wire \u_uart.u_reg.u_wdata.rst_ni ;
  wire [7:0] \u_uart.u_reg.u_wdata.wd ;
  wire \u_uart.u_reg.u_wdata.we ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_data ;
  wire \u_uart.u_reg.u_wdata.wr_en ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.de ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.gen_w.unused_q ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.q ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.we ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_wdata0_qe.clk_i ;
  wire \u_uart.u_reg.u_wdata0_qe.d_i ;
  reg \u_uart.u_reg.u_wdata0_qe.q_o ;
  wire \u_uart.u_reg.u_wdata0_qe.rst_ni ;
  wire \u_uart.u_reg.wdata_flds_we ;
  wire \u_uart.u_reg.wdata_qe ;
  wire [7:0] \u_uart.u_reg.wdata_wd ;
  wire \u_uart.u_reg.wdata_we ;
  wire \u_uart.u_reg.wr_err ;
  wire \u_uart.u_uart_core.clk_i ;
  wire \u_uart.u_uart_core.event_rx_frame_err ;
  wire \u_uart.u_uart_core.event_rx_parity_err ;
  wire [29:0] \u_uart.u_uart_core.hw2reg ;
  wire \u_uart.u_uart_core.line_loopback ;
  reg [16:0] \u_uart.u_uart_core.nco_sum_q ;
  wire [56:0] \u_uart.u_uart_core.reg2hw ;
  wire \u_uart.u_uart_core.rst_ni ;
  wire \u_uart.u_uart_core.rx ;
  wire [7:0] \u_uart.u_uart_core.rx_data_o ;
  wire \u_uart.u_uart_core.rx_enable ;
  wire [7:0] \u_uart.u_uart_core.rx_fifo_data ;
  wire [4:0] \u_uart.u_uart_core.rx_fifo_depth ;
  wire \u_uart.u_uart_core.rx_fifo_pop ;
  wire \u_uart.u_uart_core.rx_fifo_rvalid ;
  wire \u_uart.u_uart_core.rx_fifo_wready ;
  wire \u_uart.u_uart_core.rx_fifo_wvalid ;
  wire \u_uart.u_uart_core.rx_in ;
  wire \u_uart.u_uart_core.rx_in_maj ;
  wire \u_uart.u_uart_core.rx_in_mx ;
  wire \u_uart.u_uart_core.rx_pop_i ;
  wire \u_uart.u_uart_core.rx_sync ;
  reg \u_uart.u_uart_core.rx_sync_q1 ;
  reg \u_uart.u_uart_core.rx_sync_q2 ;
  wire \u_uart.u_uart_core.rx_tick_baud ;
  wire \u_uart.u_uart_core.rx_uart_idle ;
  wire \u_uart.u_uart_core.rx_valid ;
  wire \u_uart.u_uart_core.rx_valid_o ;
  wire \u_uart.u_uart_core.rxnf_enable ;
  wire \u_uart.u_uart_core.sync_rx.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.d_i ;
  wire \u_uart.u_uart_core.sync_rx.d_o ;
  wire \u_uart.u_uart_core.sync_rx.intq ;
  wire \u_uart.u_uart_core.sync_rx.q_o ;
  wire \u_uart.u_uart_core.sync_rx.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.d_i ;
  reg \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.d_i ;
  reg \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.unused_sig ;
  wire \u_uart.u_uart_core.sys_loopback ;
  wire \u_uart.u_uart_core.tick_baud_x16 ;
  wire \u_uart.u_uart_core.tx ;
  wire [7:0] \u_uart.u_uart_core.tx_data_i ;
  wire \u_uart.u_uart_core.tx_enable ;
  wire [7:0] \u_uart.u_uart_core.tx_fifo_data ;
  wire [3:0] \u_uart.u_uart_core.tx_fifo_depth ;
  wire \u_uart.u_uart_core.tx_fifo_rready ;
  wire \u_uart.u_uart_core.tx_fifo_rvalid ;
  wire [7:0] \u_uart.u_uart_core.tx_fifo_wdata ;
  wire \u_uart.u_uart_core.tx_fifo_wready ;
  wire \u_uart.u_uart_core.tx_fifo_wvalid ;
  wire \u_uart.u_uart_core.tx_out ;
  reg \u_uart.u_uart_core.tx_out_q ;
  wire \u_uart.u_uart_core.tx_ready_o ;
  wire \u_uart.u_uart_core.tx_uart_idle ;
  wire \u_uart.u_uart_core.tx_valid_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.clk_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.depth_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.err_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_empty ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_wptr ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_wptr ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  reg [127:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage_rdata ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clk_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clr_i ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.depth_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.empty_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.err_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.full_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_o ;
  reg [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rst_ni ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_o ;
  reg [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt ;
  reg \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.rdata_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rst_ni ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rvalid_o ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.wready_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.clk_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.depth_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.err_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_empty ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_rptr ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_rptr ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  reg [63:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage_rdata ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clk_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clr_i ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.depth_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.empty_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.err_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.full_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_o ;
  reg [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rst_ni ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_o ;
  reg [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt ;
  reg \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.rdata_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rst_ni ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rvalid_o ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.wdata_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.wready_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.wvalid_i ;
  wire \u_uart.u_uart_core.uart_fifo_rxrst ;
  wire \u_uart.u_uart_core.uart_fifo_txrst ;
  wire [7:0] \u_uart.u_uart_core.uart_rdata ;
  wire [3:0] \u_uart.u_uart_core.uart_rx.baud_div_d ;
  reg [3:0] \u_uart.u_uart_core.uart_rx.baud_div_q ;
  wire [3:0] \u_uart.u_uart_core.uart_rx.bit_cnt_d ;
  reg [3:0] \u_uart.u_uart_core.uart_rx.bit_cnt_q ;
  wire \u_uart.u_uart_core.uart_rx.clk_i ;
  wire \u_uart.u_uart_core.uart_rx.frame_err ;
  wire \u_uart.u_uart_core.uart_rx.idle ;
  wire \u_uart.u_uart_core.uart_rx.idle_d ;
  reg \u_uart.u_uart_core.uart_rx.idle_q ;
  wire \u_uart.u_uart_core.uart_rx.parity_enable ;
  wire \u_uart.u_uart_core.uart_rx.parity_odd ;
  wire \u_uart.u_uart_core.uart_rx.rst_ni ;
  wire \u_uart.u_uart_core.uart_rx.rx ;
  wire [7:0] \u_uart.u_uart_core.uart_rx.rx_data ;
  wire \u_uart.u_uart_core.uart_rx.rx_enable ;
  wire \u_uart.u_uart_core.uart_rx.rx_parity_err ;
  wire \u_uart.u_uart_core.uart_rx.rx_valid ;
  reg \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  wire [10:0] \u_uart.u_uart_core.uart_rx.sreg_d ;
  reg [10:0] \u_uart.u_uart_core.uart_rx.sreg_q ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud_d ;
  reg \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud_x16 ;
  reg [3:0] \u_uart.u_uart_core.uart_tx.baud_div_q ;
  wire [3:0] \u_uart.u_uart_core.uart_tx.bit_cnt_d ;
  reg [3:0] \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  wire \u_uart.u_uart_core.uart_tx.clk_i ;
  wire \u_uart.u_uart_core.uart_tx.idle ;
  wire \u_uart.u_uart_core.uart_tx.parity_enable ;
  wire \u_uart.u_uart_core.uart_tx.rst_ni ;
  wire [10:0] \u_uart.u_uart_core.uart_tx.sreg_d ;
  reg [10:0] \u_uart.u_uart_core.uart_tx.sreg_q ;
  reg \u_uart.u_uart_core.uart_tx.tick_baud_q ;
  wire \u_uart.u_uart_core.uart_tx.tick_baud_x16 ;
  wire \u_uart.u_uart_core.uart_tx.tx ;
  wire \u_uart.u_uart_core.uart_tx.tx_d ;
  wire \u_uart.u_uart_core.uart_tx.tx_enable ;
  reg \u_uart.u_uart_core.uart_tx.tx_q ;
  wire \u_uart.u_uart_core.uart_tx.wr ;
  wire [7:0] \u_uart.u_uart_core.uart_tx.wr_data ;
  wire \u_uart.u_uart_core.uart_tx.wr_parity ;
  wire \u_uart.valid_i ;
  wire [31:0] \u_uart.wdata_o ;
  wire \u_uart.we_o ;
  wire [31:0] uart_addr;
  wire [3:0] uart_be;
  wire uart_err;
  wire uart_gnt;
  wire [31:0] \uart_host_adapter.addr_i ;
  wire [3:0] \uart_host_adapter.be_i ;
  wire \uart_host_adapter.clk_i ;
  wire \uart_host_adapter.err_o ;
  reg \uart_host_adapter.g_multiple_reqs.source_q ;
  wire \uart_host_adapter.gnt_o ;
  wire [3:0] \uart_host_adapter.instr_type_i ;
  wire \uart_host_adapter.intg_err ;
  wire \uart_host_adapter.intg_err_o ;
  wire \uart_host_adapter.intg_err_q ;
  wire [6:0] \uart_host_adapter.rdata_intg_o ;
  wire [31:0] \uart_host_adapter.rdata_o ;
  wire \uart_host_adapter.req_i ;
  wire \uart_host_adapter.rst_ni ;
  wire [3:0] \uart_host_adapter.tl_be ;
  wire [65:0] \uart_host_adapter.tl_i ;
  wire [108:0] \uart_host_adapter.tl_o ;
  wire [108:0] \uart_host_adapter.tl_out ;
  wire [7:0] \uart_host_adapter.tl_source ;
  wire [6:0] \uart_host_adapter.u_cmd_intg_gen.cmd_intg ;
  wire [31:0] \uart_host_adapter.u_cmd_intg_gen.data_final ;
  wire [6:0] \uart_host_adapter.u_cmd_intg_gen.data_intg ;
  wire [108:0] \uart_host_adapter.u_cmd_intg_gen.tl_i ;
  wire [108:0] \uart_host_adapter.u_cmd_intg_gen.tl_o ;
  wire \uart_host_adapter.unused_addr_bottom_bits ;
  wire \uart_host_adapter.valid_o ;
  wire [31:0] \uart_host_adapter.wdata_i ;
  wire [6:0] \uart_host_adapter.wdata_intg_i ;
  wire \uart_host_adapter.we_i ;
  wire [31:0] uart_rdata;
  wire uart_req;
  wire uart_rvalid;
  wire [31:0] uart_wdata;
  wire uart_we;
  wire \xbar.clk_i ;
  wire [2:0] \xbar.dev_sel_s1n_6 ;
  wire \xbar.rst_ni ;
  wire [3:0] \xbar.scanmode_i ;
  wire [65:0] \xbar.tl_gpio_i ;
  wire [108:0] \xbar.tl_gpio_o ;
  wire [65:0] \xbar.tl_pwm_i ;
  wire [108:0] \xbar.tl_pwm_o ;
  wire [65:0] \xbar.tl_rv_timer_i ;
  wire [108:0] \xbar.tl_rv_timer_o ;
  wire [263:0] \xbar.tl_s1n_6_ds_d2h ;
  wire [435:0] \xbar.tl_s1n_6_ds_h2d ;
  wire [65:0] \xbar.tl_s1n_6_us_d2h ;
  wire [108:0] \xbar.tl_s1n_6_us_h2d ;
  wire [108:0] \xbar.tl_uart_host_i ;
  wire [65:0] \xbar.tl_uart_host_o ;
  wire [65:0] \xbar.tl_uart_i ;
  wire [108:0] \xbar.tl_uart_o ;
  wire \xbar.u_s1n_6.accept_t_req ;
  wire \xbar.u_s1n_6.accept_t_rsp ;
  wire [22:0] \xbar.u_s1n_6.blanked_auser ;
  wire \xbar.u_s1n_6.clk_i ;
  wire [2:0] \xbar.u_s1n_6.dev_select_i ;
  reg [2:0] \xbar.u_s1n_6.dev_select_outstanding ;
  wire [2:0] \xbar.u_s1n_6.dev_select_t ;
  wire \xbar.u_s1n_6.fifo_h.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.err_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.full_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [109:0] \xbar.u_s1n_6.fifo_h.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rvalid_o ;
  wire [109:0] \xbar.u_s1n_6.fifo_h.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.err_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.full_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.fifo_h.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.fifo_h.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.fifo_h.rst_ni ;
  wire [2:0] \xbar.u_s1n_6.fifo_h.spare_req_i ;
  wire [2:0] \xbar.u_s1n_6.fifo_h.spare_req_o ;
  wire \xbar.u_s1n_6.fifo_h.spare_rsp_i ;
  wire \xbar.u_s1n_6.fifo_h.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.fifo_h.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.fifo_h.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.fifo_h.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.fifo_h.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_err_resp.err_resp.clk_i ;
  reg [3:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type ;
  reg [2:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode ;
  reg \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending ;
  reg [1:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_size ;
  reg [7:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_source ;
  wire \xbar.u_s1n_6.gen_err_resp.err_resp.rst_ni ;
  wire [108:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_i ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_o ;
  wire \xbar.u_s1n_6.gen_u_o[0].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[1].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[2].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[3].dev_select ;
  wire \xbar.u_s1n_6.hfifo_reqready ;
  wire \xbar.u_s1n_6.hold_all_requests ;
  reg [8:0] \xbar.u_s1n_6.num_req_outstanding ;
  wire \xbar.u_s1n_6.rst_ni ;
  wire [263:0] \xbar.u_s1n_6.tl_d_i ;
  wire [435:0] \xbar.u_s1n_6.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.tl_h_o ;
  wire [65:0] \xbar.u_s1n_6.tl_t_i ;
  wire [108:0] \xbar.u_s1n_6.tl_t_o ;
  wire [65:0] \xbar.u_s1n_6.tl_t_p ;
  wire [329:0] \xbar.u_s1n_6.tl_u_i ;
  wire [544:0] \xbar.u_s1n_6.tl_u_o ;
  wire \xbar.unused_scanmode ;
  assign \u_uart.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \$1005y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_req  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1022y  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_ack  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._pwm_param_we , \u_pwm.u_reg.u_pwm_param_cdc.dst_re_o , \u_pwm.u_reg._pwm_param_regwen  } = \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q  & { \u_pwm.u_reg.u_pwm_param_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_cdc.dst_req  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src  = \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q  && \u_pwm.u_reg.u_duty_cycle_cdc.src_ack ;
  assign \$1060y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_req  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1077y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_ack  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._duty_cycle_we , \u_pwm.u_reg.u_duty_cycle_cdc.dst_re_o , \u_pwm.u_reg._duty_cycle_regwen  } = \u_pwm.u_reg.u_duty_cycle_cdc.txn_bits_q  & { \u_pwm.u_reg.u_duty_cycle_cdc.dst_req , \u_pwm.u_reg.u_duty_cycle_cdc.dst_req , \u_pwm.u_reg.u_duty_cycle_cdc.dst_req  };
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_to_src  = \u_pwm.u_reg.u_blink_param_cdc.src_busy_q  && \u_pwm.u_reg.u_blink_param_cdc.src_ack ;
  assign \$1115y  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_uart.u_reg.reg_error  = \u_uart.u_reg.addrmiss  | \u_uart.u_reg.wr_err ;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_req  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1132y  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_ack  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._blink_param_we , \u_pwm.u_reg.u_blink_param_cdc.dst_re_o , \u_pwm.u_reg._blink_param_regwen  } = \u_pwm.u_reg.u_blink_param_cdc.txn_bits_q  & { \u_pwm.u_reg.u_blink_param_cdc.dst_req , \u_pwm.u_reg.u_blink_param_cdc.dst_req , \u_pwm.u_reg.u_blink_param_cdc.dst_req  };
  assign \$1149y  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we  ? \u_pwm.u_reg.reg_wdata [0] : 1'h1;
  assign \u_pwm.u_reg.u_regwen.wr_data  = \u_pwm.u_reg.u_regwen.q  & \$1149y ;
  assign \u_pwm.u_reg.u_cfg0_qe.d_i  = \u_pwm.u_reg._cfg_we  & \u_pwm.u_reg._cfg_regwen ;
  assign \u_pwm.u_reg.u_pwm_en0_qe.d_i  = \u_pwm.u_reg._pwm_en_we  & \u_pwm.u_reg._pwm_en_regwen ;
  assign \u_pwm.u_reg.u_pwm_param0_qe.d_i  = \u_pwm.u_reg._pwm_param_we  & \u_pwm.u_reg._pwm_param_regwen ;
  assign \u_pwm.u_reg.u_duty_cycle0_qe.d_i  = \u_pwm.u_reg._duty_cycle_we  & \u_pwm.u_reg._duty_cycle_regwen ;
  assign \u_pwm.u_reg.u_blink_param0_qe.d_i  = \u_pwm.u_reg._blink_param_we  & \u_pwm.u_reg._blink_param_regwen ;
  assign \$1276y  = \u_pwm.u_reg.reg_re  || \u_pwm.u_reg.reg_we ;
  assign \$1278y  = ! \$1277y ;
  assign \u_pwm.u_reg.addrmiss  = \$1276y  ? \$1278y  : 1'h0;
  assign \$1288y  = \u_gpio.u_reg.addr_hit [1] & \$1287y ;
  assign \$1289y  = \$1284y  | \$1288y ;
  assign \$1294y  = \$1289y  | \$1293y ;
  assign \$1298y  = \u_gpio.u_reg.addr_hit [3] & \$1287y ;
  assign \$1299y  = \$1294y  | \$1298y ;
  assign \$1303y  = \u_gpio.u_reg.addr_hit [4] & \$1287y ;
  assign \$1304y  = \$1299y  | \$1303y ;
  assign \$1287y  = | \$1281y ;
  assign \$1308y  = \u_gpio.u_reg.addr_hit [5] & \$1287y ;
  assign \$1309y  = \$1304y  | \$1308y ;
  assign \u_pwm.u_reg.wr_err  = \u_pwm.u_reg.reg_we  & \$1309y ;
  assign \$1311y  = \u_gpio.u_reg.addr_hit [0] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.we  = \$1311y  & \$1312y ;
  assign \$1314y  = \u_gpio.u_reg.addr_hit [1] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  = \$1314y  & \$1312y ;
  assign \$1317y  = \u_gpio.u_reg.addr_hit [2] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  = \$1317y  & \$1312y ;
  assign \$1320y  = \u_gpio.u_reg.addr_hit [3] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  = \$1320y  & \$1312y ;
  assign \$1323y  = \u_gpio.u_reg.addr_hit [4] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i  = \$1323y  & \$1312y ;
  assign \$1326y  = \u_gpio.u_reg.addr_hit [5] & \u_pwm.u_reg.reg_we ;
  assign \$1312y  = ! \u_pwm.u_reg.reg_error ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i  = \$1326y  & \$1312y ;
  assign \$1338y  = \u_pwm.u_reg.u_pwm_en0_qe.q_o  | \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \$1339y  = \$1338y  | \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \$1340y  = \$1339y  | \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \$1341y  = \$1340y  | \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  assign \$1342y  = \$1341y  | \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  assign \$1343y  = \$1342y  | \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  = \$1343y  | \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  assign \$1346y  = \u_pwm.u_pwm_core.beat_ctr_q  + 27'h0000001;
  assign \$1347y  = \u_pwm.u_pwm_core.beat_end  ? 27'h0000000 : \$1346y ;
  assign \u_pwm.u_pwm_core.beat_ctr_d  = \u_pwm.u_reg.u_cfg0_qe.q_o  ? 27'h0000000 : \$1347y ;
  assign \u_pwm.u_pwm_core.beat_end  = \u_pwm.u_pwm_core.beat_ctr_q  == \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_pwm_core.lshift  = 4'hf - \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.beat_ctr_en  = \u_pwm.u_reg.u_cfg0_qe.q_o  | \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_pwm_core.phase_ctr_en  = \u_pwm.u_pwm_core.beat_end  & \u_pwm.u_pwm_core.beat_ctr_en ;
  assign \u_pwm.u_pwm_core.phase_ctr_incr  = 16'h0001 << \u_pwm.u_pwm_core.lshift ;
  assign { \u_pwm.u_pwm_core.phase_ctr_overflow , \u_pwm.u_pwm_core.phase_ctr_next  } = { 1'h0, \u_pwm.u_pwm_core.phase_ctr_q  } + { 1'h0, \u_pwm.u_pwm_core.phase_ctr_incr  };
  assign \u_pwm.u_pwm_core.phase_ctr_d  = \u_pwm.u_reg.u_cfg0_qe.q_o  ? 16'h0000 : \u_pwm.u_pwm_core.phase_ctr_next ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  = \u_pwm.u_pwm_core.beat_end  & \u_pwm.u_pwm_core.phase_ctr_overflow ;
  assign \$1366y  = { 1'h0, \u_pwm.u_reg.u_blink_param_x_0.q  } + { 1'h0, \u_pwm.u_reg.u_blink_param_y_0.q  };
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.unused_sum , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_sum  } = \$1366y  + 17'h00001;
  assign \$1370y  = ! \$1369y ;
  assign \$1371y  = \$1370y  || \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  assign \$1372y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  == \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_sum ;
  assign \$1373y  = \$1372y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \$1374y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  + 16'h0001;
  assign \$1375y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  ? \$1374y  : 16'hxxxx;
  assign \$1376y  = \$1373y  ? 16'h0000 : \$1375y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_d  = \$1371y  ? 16'h0000 : \$1376y ;
  assign \$1383y  = \$1369y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_d  : 16'hxxxx;
  assign \$1387y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  > \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \$1388y  = \$1369y  && \$1387y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_blink  = \$1388y  ? \u_pwm.u_reg.u_duty_cycle_b_0.q  : \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \$1391y  = ! \$1390y ;
  assign \$1392y  = \$1391y  || \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  assign \$1395y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  + 16'h0001;
  assign \$1396y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  ? \$1395y  : 16'hxxxx;
  assign \$1397y  = \$1394y  ? 16'h0000 : \$1396y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_d  = \$1392y  ? 16'h0000 : \$1397y ;
  assign \$1403y  = \$1390y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_d  : 16'hxxxx;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  & \$1393y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  = \u_pwm.u_reg.u_duty_cycle_a_0.q  < \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt  = \u_pwm.u_reg.u_duty_cycle_a_0.q  > \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \$1415y  = ! \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt ;
  assign \$1416y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  >= \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \$1418y  = \$1416y  || \$1417y ;
  assign \$1419y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  && \$1418y ;
  assign \$1421y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  && \$1420y ;
  assign \$1422y  = \$1421y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q ;
  assign \$1423y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  <= \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \$1417y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end ;
  assign \$1425y  = \$1423y  || \$1417y ;
  assign \$1426y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt  && \$1425y ;
  assign \$1428y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt  && \$1420y ;
  assign \$1429y  = \$1428y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q ;
  assign \$1435y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt ;
  assign \$1436y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.neg_htbt ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pattern_repeat  = \$1435y  & \$1436y ;
  assign \$1420y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  == \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \$1441y  = \$1420y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pattern_repeat ;
  assign \$1442y  = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  } - { 1'h0, \u_pwm.u_reg.u_blink_param_y_0.q  };
  assign \$1443y  = \$1442y  - 17'h00001;
  assign \$1444y  = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  } + { 1'h0, \u_pwm.u_reg.u_blink_param_y_0.q  };
  assign \$1445y  = \$1444y  + 17'h00001;
  assign \$1446y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction  ? \$1443y  : \$1445y ;
  assign \$1447y  = \$1441y  ? { 1'h0, \u_pwm.u_reg.u_duty_cycle_a_0.q  } : \$1446y ;
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_d  } = \$1393y  ? \$1447y  : 17'h0xxxx;
  assign \$1454y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction ;
  assign \$1455y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap  & \$1454y ;
  assign \$1456y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap  & \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction ;
  assign \$1457y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  ? \$1455y  : \$1456y ;
  assign \$1463y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  != \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \$1464y  = \$1368y  && \$1463y ;
  assign \$1393y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  == \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \$1394y  = \$1393y  && \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \$1467y  = \$1394y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_d  : 16'hxxxx;
  assign \$1470y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pos_htbt  ? 16'hffff : 16'h0000;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_htbt  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q  ? \$1470y  : \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q ;
  assign \$1368y  = ! \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \$1369y  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q  && \$1368y ;
  assign \$1390y  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q  && \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \$1475y  = \$1390y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_htbt  : \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_actual  = \$1369y  ? \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_blink  : \$1475y ;
  assign \$1477y  = { 28'h0000000, \u_pwm.u_reg.u_cfg_dc_resn.q  } + 32'd1;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask  = 16'hffff >> \$1477y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  & \$1479y ;
  assign \$1479y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_actual  & \$1479y ;
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase  } = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase  } + { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked  };
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase ;
  assign \$1493y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  | \$1492y ;
  assign \$1492y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded ;
  assign \$1495y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  & \$1492y ;
  assign \$1496y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap  ? \$1493y  : \$1495y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  ? \$1496y  : 1'h0;
  assign \u_gpio.gen_filter[0].u_filter.update_stored_value  = \u_gpio.gen_filter[0].u_filter.diff_ctr_d  == 2'h3;
  assign \$1519y  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[0].u_filter.filter_q ;
  assign \$1520y  = \u_gpio.gen_filter[0].u_filter.diff_ctr_q  >= 2'h3;
  assign \$1521y  = \u_gpio.gen_filter[0].u_filter.diff_ctr_q  + 2'h1;
  assign \$1522y  = \$1520y  ? 2'h3 : \$1521y ;
  assign \u_gpio.gen_filter[0].u_filter.diff_ctr_d  = \$1519y  ? 2'h0 : \$1522y ;
  assign \u_gpio.gen_filter[0].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [0] ? \u_gpio.gen_filter[0].u_filter.stored_value_q  : \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.update_stored_value  = \u_gpio.gen_filter[1].u_filter.diff_ctr_d  == 2'h3;
  assign \$1543y  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[1].u_filter.filter_q ;
  assign \$1544y  = \u_gpio.gen_filter[1].u_filter.diff_ctr_q  >= 2'h3;
  assign \$1545y  = \u_gpio.gen_filter[1].u_filter.diff_ctr_q  + 2'h1;
  assign \$1546y  = \$1544y  ? 2'h3 : \$1545y ;
  assign \u_gpio.gen_filter[1].u_filter.diff_ctr_d  = \$1543y  ? 2'h0 : \$1546y ;
  assign \u_gpio.gen_filter[1].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [1] ? \u_gpio.gen_filter[1].u_filter.stored_value_q  : \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1558y  = { \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.intr_hw.reg2hw_intr_test_qe_i  } & \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.intr_hw.g_intr_event.new_event  = \$1558y  | \u_gpio.intr_hw.event_intr_i ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de  = | \u_gpio.intr_hw.g_intr_event.new_event ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d  = \u_gpio.intr_hw.g_intr_event.new_event  | \u_gpio.u_reg.u_intr_state.q ;
  assign \$1566y  = ~ \u_gpio.data_in_q ;
  assign \$1567y  = \$1566y  & { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_rise  = \$1567y  & \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \$1570y  = \u_gpio.data_in_q  & \$1569y ;
  assign \u_gpio.event_intr_fall  = \$1570y  & \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.event_intr_acthigh  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  } & \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \$1569y  = ~ { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_actlow  = \$1569y  & \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \$1575y  = \u_gpio.event_intr_rise  | \u_gpio.event_intr_fall ;
  assign \$1576y  = \$1575y  | \u_gpio.event_intr_actlow ;
  assign \u_gpio.intr_hw.event_intr_i  = \$1576y  | \u_gpio.event_intr_acthigh ;
  assign \u_gpio.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \u_gpio.u_reg.reg_we  = \u_gpio.u_reg.u_reg_if.a_ack  & \$1583y ;
  assign \u_gpio.u_reg.reg_re  = \u_gpio.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$1599y  = \u_gpio.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$1607y  = \u_gpio.u_reg.reg_error  || \u_gpio.u_reg.reg_we ;
  assign \$1608y  = \$1607y  ? 32'd4294967295 : \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  = ~ \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \$1583y  = \u_gpio.u_reg.u_reg_if.u_err.op_full  | \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_gpio.u_reg.reg_error  = \u_gpio.u_reg.addrmiss  | \u_gpio.u_reg.wr_err ;
  assign \u_gpio.u_reg.u_intr_state.qe  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  | \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \$1692y  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de  ? \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d  : \u_gpio.u_reg.u_intr_state.q ;
  assign \$1693y  = ~ \u_gpio.u_reg.reg_wdata [1:0];
  assign \$1694y  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  ? \$1693y  : 2'h3;
  assign \u_gpio.u_reg.u_intr_state.wr_data  = \$1692y  & \$1694y ;
  assign \u_gpio.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_gpio.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [4:2] == 3'h1;
  assign \u_gpio.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [4:2] == 3'h2;
  assign \u_gpio.u_reg.addr_hit [3] = \u_uart.u_bridge.addr_q [4:2] == 3'h3;
  assign \u_gpio.u_reg.addr_hit [4] = \u_uart.u_bridge.addr_q [4:2] == 3'h4;
  assign \u_gpio.u_reg.addr_hit [5] = \u_uart.u_bridge.addr_q [4:2] == 3'h5;
  assign \u_gpio.u_reg.addr_hit [6] = \u_uart.u_bridge.addr_q [4:2] == 3'h6;
  assign \$1772y  = \u_gpio.u_reg.reg_re  || \u_gpio.u_reg.reg_we ;
  assign \$1774y  = ! \$1773y ;
  assign \u_gpio.u_reg.addrmiss  = \$1772y  ? \$1774y  : 1'h0;
  assign \$1284y  = \u_gpio.u_reg.addr_hit [0] & \$1281y [0];
  assign \$1784y  = \u_gpio.u_reg.addr_hit [1] & \$1281y [0];
  assign \$1785y  = \$1284y  | \$1784y ;
  assign \$1293y  = \u_gpio.u_reg.addr_hit [2] & \$1281y [0];
  assign \$1790y  = \$1785y  | \$1293y ;
  assign \$1794y  = \u_gpio.u_reg.addr_hit [3] & \$1281y [0];
  assign \$1795y  = \$1790y  | \$1794y ;
  assign \$1799y  = \u_gpio.u_reg.addr_hit [4] & \$1281y [0];
  assign \$1800y  = \$1795y  | \$1799y ;
  assign \$1803y  = | \$1281y [1:0];
  assign \$1804y  = \u_gpio.u_reg.addr_hit [5] & \$1803y ;
  assign \$1805y  = \$1800y  | \$1804y ;
  assign \$1809y  = \u_gpio.u_reg.addr_hit [6] & \$1281y [0];
  assign \$1810y  = \$1805y  | \$1809y ;
  assign \u_gpio.u_reg.wr_err  = \u_gpio.u_reg.reg_we  & \$1810y ;
  assign \$1812y  = \u_gpio.u_reg.addr_hit [0] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  = \$1812y  & \$1813y ;
  assign \$1815y  = \u_gpio.u_reg.addr_hit [1] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_enable_we  = \$1815y  & \$1813y ;
  assign \$1818y  = \u_gpio.u_reg.addr_hit [2] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.intr_hw.reg2hw_intr_test_qe_i  = \$1818y  & \$1813y ;
  assign \$1824y  = \u_gpio.u_reg.addr_hit [4] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.direct_qe  = \$1824y  & \$1813y ;
  assign \$1827y  = \u_gpio.u_reg.addr_hit [5] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_we  = \$1827y  & \$1813y ;
  assign \$1830y  = \u_gpio.u_reg.addr_hit [6] & \u_gpio.u_reg.reg_we ;
  assign \$1813y  = ! \u_gpio.u_reg.reg_error ;
  assign \u_gpio.u_reg.ctrl_en_input_filter_we  = \$1830y  & \$1813y ;
  assign \u_rv_timer.mtimecmp_update  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  | \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  | \u_rv_timer.mtimecmp_update ;
  assign \$1839y  = ~ \u_rv_timer.mtimecmp_update ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d  = \u_rv_timer.intr_timer_state_d  & \$1839y ;
  assign \$1841y  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i  & \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  = \$1841y  | \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.intr_timer_state_d  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  | \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \$1853y  = \u_rv_timer.gen_harts[0].u_core.tick_count  == \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \$1854y  = \u_rv_timer.gen_harts[0].u_core.tick_count  + 12'h001;
  assign \$1857y  = \u_rv_timer.gen_harts[0].u_core.tick_count  >= \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  = \u_rv_timer.u_reg.u_ctrl.q  & \$1857y ;
  assign \u_rv_timer.gen_harts[0].u_core.mtime_d  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  } + { 56'h00000000000000, \u_rv_timer.u_reg.u_cfg0_step.q  };
  assign \$1860y  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  } >= { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i  = \u_rv_timer.u_reg.u_ctrl.q  & \$1860y ;
  assign \u_rv_timer.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \u_rv_timer.u_reg.reg_we  = \u_rv_timer.u_reg.u_reg_if.a_ack  & \$1583y ;
  assign \u_rv_timer.u_reg.reg_re  = \u_rv_timer.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$1883y  = \u_rv_timer.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$1891y  = \u_rv_timer.u_reg.reg_error  || \u_rv_timer.u_reg.reg_we ;
  assign \$1892y  = \$1891y  ? 32'd4294967295 : \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  = ~ \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.u_reg_if.u_err.op_full  = ! \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105];
  assign \u_gpio.u_reg.u_reg_if.u_err.op_partial  = \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] == 3'h1;
  assign \u_gpio.u_reg.u_reg_if.u_err.op_get  = \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] == 3'h4;
  assign \u_rv_timer.u_reg.reg_error  = \u_rv_timer.u_reg.addrmiss  | \u_rv_timer.u_reg.wr_err ;
  assign \u_rv_timer.u_reg.u_intr_state0.qe  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  assign \$1992y  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de  ? \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d  : \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \$1993y  = ~ \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \$1994y  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  ? \$1993y  : 1'h1;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_data  = \$1992y  & \$1994y ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.qe  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  ? \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  : \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.qe  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_data  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  ? \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  : \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [8:2] == 7'h40;
  assign \u_rv_timer.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [8:2] == 7'h41;
  assign \u_rv_timer.u_reg.addr_hit [3] = \u_uart.u_bridge.addr_q [8:2] == 7'h42;
  assign \u_rv_timer.u_reg.addr_hit [4] = \u_uart.u_bridge.addr_q [8:2] == 7'h43;
  assign \u_rv_timer.u_reg.addr_hit [5] = \u_uart.u_bridge.addr_q [8:2] == 7'h44;
  assign \u_rv_timer.u_reg.addr_hit [6] = \u_uart.u_bridge.addr_q [8:2] == 7'h45;
  assign \u_rv_timer.u_reg.addr_hit [7] = \u_uart.u_bridge.addr_q [8:2] == 7'h46;
  assign \u_rv_timer.u_reg.addr_hit [8] = \u_uart.u_bridge.addr_q [8:2] == 7'h47;
  assign \$2068y  = \u_rv_timer.u_reg.reg_re  || \u_rv_timer.u_reg.reg_we ;
  assign \$2069y  = | \u_rv_timer.u_reg.addr_hit ;
  assign \$2070y  = ! \$2069y ;
  assign \u_rv_timer.u_reg.addrmiss  = \$2068y  ? \$2070y  : 1'h0;
  assign \$2076y  = \u_rv_timer.u_reg.addr_hit [0] & \$1281y [0];
  assign \$2080y  = \u_rv_timer.u_reg.addr_hit [1] & \$1281y [0];
  assign \$2081y  = \$2076y  | \$2080y ;
  assign \$2085y  = \u_rv_timer.u_reg.addr_hit [2] & \$1281y [0];
  assign \$2086y  = \$2081y  | \$2085y ;
  assign \$2090y  = \u_rv_timer.u_reg.addr_hit [3] & \$1281y [0];
  assign \$2091y  = \$2086y  | \$2090y ;
  assign \$2094y  = | \$1281y [2:0];
  assign \$2095y  = \u_rv_timer.u_reg.addr_hit [4] & \$2094y ;
  assign \$2096y  = \$2091y  | \$2095y ;
  assign \$21y  = \u_uart.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$2100y  = \u_rv_timer.u_reg.addr_hit [5] & \$1287y ;
  assign \$2101y  = \$2096y  | \$2100y ;
  assign \$2105y  = \u_rv_timer.u_reg.addr_hit [6] & \$1287y ;
  assign \$2106y  = \$2101y  | \$2105y ;
  assign \$2110y  = \u_rv_timer.u_reg.addr_hit [7] & \$1287y ;
  assign \$2111y  = \$2106y  | \$2110y ;
  assign \$1281y  = ~ \u_rv_timer.u_reg.reg_be ;
  assign \$2115y  = \u_rv_timer.u_reg.addr_hit [8] & \$1287y ;
  assign \$2116y  = \$2111y  | \$2115y ;
  assign \u_rv_timer.u_reg.wr_err  = \u_rv_timer.u_reg.reg_we  & \$2116y ;
  assign \$2118y  = \u_rv_timer.u_reg.addr_hit [0] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.ctrl_we  = \$2118y  & \$2119y ;
  assign \$2121y  = \u_rv_timer.u_reg.addr_hit [1] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.intr_enable0_we  = \$2121y  & \$2119y ;
  assign \$2124y  = \u_rv_timer.u_reg.addr_hit [2] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  = \$2124y  & \$2119y ;
  assign \$2127y  = \u_rv_timer.u_reg.addr_hit [3] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i  = \$2127y  & \$2119y ;
  assign \$2130y  = \u_rv_timer.u_reg.addr_hit [4] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.cfg0_we  = \$2130y  & \$2119y ;
  assign \$2133y  = \u_rv_timer.u_reg.addr_hit [5] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  = \$2133y  & \$2119y ;
  assign \$2136y  = \u_rv_timer.u_reg.addr_hit [6] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  = \$2136y  & \$2119y ;
  assign \$2139y  = \u_rv_timer.u_reg.addr_hit [7] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i  = \$2139y  & \$2119y ;
  assign \$2142y  = \u_rv_timer.u_reg.addr_hit [8] & \u_rv_timer.u_reg.reg_we ;
  assign \$2119y  = ! \u_rv_timer.u_reg.reg_error ;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i  = \$2142y  & \$2119y ;
  assign \$216y  = \u_uart.u_reg.reg_re  || \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.addrmiss  = \$216y  ? \$1278y  : 1'h0;
  assign \$224y  = \u_gpio.u_reg.addr_hit [0] & \$1287y ;
  assign \$229y  = \$224y  | \$1784y ;
  assign \$234y  = \$229y  | \$1293y ;
  assign \$239y  = \$234y  | \$1794y ;
  assign \$244y  = \$239y  | \$1799y ;
  assign \$248y  = \u_gpio.u_reg.addr_hit [5] & \$2094y ;
  assign \$249y  = \$244y  | \$248y ;
  assign \u_uart.u_reg.wr_err  = \u_uart.u_reg.reg_we  & \$249y ;
  assign \$251y  = \u_gpio.u_reg.addr_hit [0] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.ctrl_we  = \$251y  & \$252y ;
  assign \$257y  = \u_gpio.u_reg.addr_hit [2] & \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.rdata_re  = \$257y  & \$252y ;
  assign \$260y  = \u_gpio.u_reg.addr_hit [3] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_wdata0_qe.d_i  = \$260y  & \$252y ;
  assign \$263y  = \u_gpio.u_reg.addr_hit [4] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.d_i  = \$263y  & \$252y ;
  assign \$252y  = ! \u_uart.u_reg.reg_error ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.clr_i  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q  & \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_uart_core.u_uart_txfifo.clr_i  = \u_uart.u_reg.u_fifo_ctrl_txrst.q  & \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_reg.status_rxempty_qs  = ~ \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_reg.status_txidle_qs  = \u_uart.u_uart_core.tx_uart_idle  & \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.status_txempty_qs  = ~ \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_reg.status_rxfull_qs  = ~ \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_reg.status_txfull_qs  = ~ \u_uart.u_uart_core.tx_fifo_wready ;
  assign \$285y  = { 1'h0, \u_uart.u_uart_core.nco_sum_q [15:0] } + { 1'h0, \u_uart.u_reg.u_ctrl_nco.q  };
  assign \$287y  = \u_uart.u_uart_core.tx_uart_idle  & \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_uart_core.u_uart_txfifo.rready_i  = \$287y  & \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wdata_i  = \u_uart.u_reg.u_wdata.q  | \u_uart.u_uart_core.tx_data_i ;
  assign \$29y  = \u_uart.u_reg.reg_error  || \u_uart.u_reg.reg_we ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wvalid_i  = \u_uart.u_reg.u_wdata0_qe.q_o  | \u_uart.u_uart_core.tx_valid_i ;
  assign \$296y  = ~ \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  assign \u_uart.u_uart_core.tx_fifo_wready  = \$296y  & \$294y ;
  assign \$299y  = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \$30y  = \$29y  ? 32'd4294967295 : \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_uart_core.tx_fifo_rvalid  = \$299y  & \$294y ;
  assign \$302y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h7;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  & \$302y ;
  assign \$304y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] == 3'h7;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  & \$304y ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [3] = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3];
  assign \u_uart.u_uart_core.u_uart_txfifo.full_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3], \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] };
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  assign \$311y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3] == \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3];
  assign \$312y  = { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] } - { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] };
  assign \$313y  = 4'h8 - { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] };
  assign \$314y  = \$313y  + { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] };
  assign \$315y  = \$311y  ? \$312y  : \$314y ;
  assign \u_uart.u_uart_core.tx_fifo_depth  = \u_uart.u_uart_core.u_uart_txfifo.full_o  ? 4'h8 : \$315y ;
  assign \$320y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  + 4'h1;
  assign \$327y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  + 4'h1;
  assign \$331y  = \u_uart.u_uart_core.u_uart_txfifo.wvalid_i  & \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  = \$331y  & \$294y ;
  assign \$334y  = \u_uart.u_uart_core.tx_fifo_rvalid  & \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \$294y  = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  = \$334y  & \$294y ;
  assign \$337y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] }) < $signed(5'h08);
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int  = \$337y  ? \$338y  : 8'hxx;
  assign \$341y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] }) < $signed(5'h08);
  assign \$342y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] }) >= $signed(1'h0);
  assign \$343y  = \$342y  && \$341y ;
  assign \$344y  = \$343y  ? 8'hff : 8'h00;
  assign \u_uart.u_uart_core.tx_fifo_data  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty  ? 8'h00 : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  assign \$353y  = { 1'h0, \u_uart.u_uart_core.uart_tx.baud_div_q  } + 5'h01;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  = ~ \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \$361y  = \u_uart.u_reg.u_ctrl_parity_en.q  ? \u_uart.u_uart_core.uart_tx.wr_parity  : 1'h1;
  assign \$363y  = | \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  assign \$364y  = \u_uart.u_uart_core.uart_tx.tick_baud_q  && \$363y ;
  assign \$365y  = \u_uart.u_uart_core.uart_tx.bit_cnt_q  - 4'h1;
  assign \$375y  = ! \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  assign \u_uart.u_uart_core.tx_uart_idle  = \u_uart.u_reg.u_ctrl_tx.q  ? \$375y  : 1'h1;
  assign \$377y  = ^ \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.u_uart_core.uart_tx.wr_parity  = \$377y  ^ \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign cio_tx_o = \u_uart.u_reg.u_ctrl_llpbk.q  ? cio_rx_i : \u_uart.u_uart_core.tx_out_q ;
  assign \$394y  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  & \u_uart.u_uart_core.rx_sync_q1 ;
  assign \$395y  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  & \u_uart.u_uart_core.rx_sync_q2 ;
  assign \$396y  = \$394y  | \$395y ;
  assign \$397y  = \u_uart.u_uart_core.rx_sync_q1  & \u_uart.u_uart_core.rx_sync_q2 ;
  assign \u_uart.u_uart_core.rx_in_maj  = \$396y  | \$397y ;
  assign \u_uart.u_uart_core.rx_in_mx  = \u_uart.u_reg.u_ctrl_nf.q  ? \u_uart.u_uart_core.rx_in_maj  : \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \$400y  = \u_uart.u_reg.u_ctrl_llpbk.q  ? 1'h1 : \u_uart.u_uart_core.rx_in_mx ;
  assign \u_uart.u_uart_core.uart_rx.rx  = \u_uart.u_reg.u_ctrl_slpbk.q  ? \u_uart.u_uart_core.uart_tx.tx_q  : \$400y ;
  assign \$407y  = { 1'h0, \u_uart.u_uart_core.uart_rx.baud_div_q  } + 5'h01;
  assign \$410y  = ! \u_uart.u_uart_core.uart_rx.rx ;
  assign \$411y  = \u_uart.u_uart_core.uart_rx.idle_q  && \$410y ;
  assign \$413y  = ! \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \$414y  = \$413y  && \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \$362y  = \u_uart.u_reg.u_ctrl_parity_en.q  ? 4'hb : 4'ha;
  assign \$416y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  == \$362y ;
  assign \$417y  = \$416y  && \u_uart.u_uart_core.uart_rx.rx ;
  assign \$418y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  - 4'h1;
  assign \$419y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  == 4'h1;
  assign \$440y  = \u_uart.u_uart_core.uart_rx.tick_baud_q  & \$419y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wdata_i  = \u_uart.u_reg.u_ctrl_parity_en.q  ? \u_uart.u_uart_core.uart_rx.sreg_q [8:1] : \u_uart.u_uart_core.uart_rx.sreg_q [9:2];
  assign \$442y  = ~ \u_uart.u_uart_core.uart_rx.sreg_q [10];
  assign \u_uart.u_uart_core.event_rx_frame_err  = \u_uart.u_uart_core.uart_rx.rx_valid_q  & \$442y ;
  assign \$444y  = \u_uart.u_reg.u_ctrl_parity_en.q  & \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \$445y  = ^ { \u_uart.u_uart_core.uart_rx.sreg_q [9:1], \u_uart.u_reg.u_ctrl_parity_odd.q  };
  assign \u_uart.u_uart_core.event_rx_parity_err  = \$444y  & \$445y ;
  assign \$447y  = ~ \u_uart.u_uart_core.event_rx_frame_err ;
  assign \$448y  = \u_uart.u_uart_core.uart_rx.rx_valid_q  & \$447y ;
  assign \$449y  = ~ \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i  = \$448y  & \$449y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rready_i  = \u_uart.u_reg.rdata_re  | \u_uart.u_uart_core.rx_pop_i ;
  assign \$457y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  assign \u_uart.u_uart_core.rx_fifo_wready  = \$457y  & \$455y ;
  assign \$460y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_bridge.rx_valid_i  = \$460y  & \$455y ;
  assign \$463y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hf;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  & \$463y ;
  assign \$465y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] == 4'hf;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  & \$465y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [4] = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_rxfifo.full_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4], \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] };
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  assign \$472y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4] == \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4];
  assign \$473y  = { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] } - { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] };
  assign \$474y  = 5'h10 - { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] };
  assign \$475y  = \$474y  + { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] };
  assign \$476y  = \$472y  ? \$473y  : \$475y ;
  assign \u_uart.u_uart_core.rx_fifo_depth  = \u_uart.u_uart_core.u_uart_rxfifo.full_o  ? 5'h10 : \$476y ;
  assign \$481y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  + 5'h01;
  assign \$488y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  + 5'h01;
  assign \$492y  = \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i  & \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  = \$492y  & \$455y ;
  assign \$495y  = \u_uart.u_bridge.rx_valid_i  & \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  assign \$455y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  = \$495y  & \$455y ;
  assign \$498y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] }) < $signed(6'h10);
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int  = \$498y  ? \$499y  : 8'hxx;
  assign \$502y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] }) < $signed(6'h10);
  assign \$503y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] }) >= $signed(1'h0);
  assign \$504y  = \$503y  && \$502y ;
  assign \$505y  = \$504y  ? 8'hff : 8'h00;
  assign \u_uart.u_bridge.rx_data_i  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty  ? 8'h00 : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  assign \$511y  = | \u_uart.u_bridge.rxf_st_q ;
  assign \u_uart.u_uart_core.rx_pop_i  = \$511y  && \u_uart.u_bridge.rx_valid_i ;
  assign \$517y  = \u_uart.u_bridge.rx_data_i  == 8'ha5;
  assign \$518y  = \u_uart.u_bridge.rx_valid_i  && \$517y ;
  assign \$530y  = \u_uart.u_bridge.idx_q  == 2'h3;
  assign \$523y  = \u_uart.u_bridge.idx_q  + 2'h1;
  assign \$590y  = \u_uart.u_bridge.tx_st_q  == 2'h1;
  assign \$593y  = \u_uart.u_bridge.tx_idx_q  + 4'h1;
  assign \$531y  = $signed(\u_uart.u_bridge.op_q ) == $signed(8'h01);
  assign \$596y  = \$531y  && \$595y ;
  assign \u_uart.u_reg.reg_we  = \u_uart.u_reg.u_reg_if.a_ack  & \$1583y ;
  assign \$564y  = \u_uart.u_bridge.req_q  && \uart_host_adapter.gnt_o ;
  assign \$616y  = \uart_host_adapter.g_multiple_reqs.source_q  + 1'h1;
  assign \u_rv_timer.u_reg.reg_be  = \u_uart.u_bridge.we_q  ? \u_uart.u_bridge.be_q  : 4'hf;
  assign \$622y  = & \u_uart.u_bridge.be_q ;
  assign \$623y  = \$622y  ? 3'h0 : 3'h1;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] = \u_uart.u_bridge.we_q  ? \$623y  : 3'h4;
  assign \$634y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80000;
  assign \$636y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80020;
  assign \$638y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80040;
  assign \$640y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80060;
  assign \$645y  = \xbar.u_s1n_6.tl_t_p [64:62] == 3'h1;
  assign \u_uart.rdata_i  = \$645y  ? \xbar.u_s1n_6.tl_t_p [47:16] : 32'd0;
  assign \xbar.u_s1n_6.accept_t_req  = \u_uart.u_bridge.req_q  & \uart_host_adapter.gnt_o ;
  assign \$653y  = \xbar.u_s1n_6.num_req_outstanding  + 9'h001;
  assign \$655y  = \xbar.u_s1n_6.num_req_outstanding  - 9'h001;
  assign \$659y  = | \xbar.u_s1n_6.num_req_outstanding ;
  assign \$660y  = \xbar.u_s1n_6.dev_select_t  != \xbar.u_s1n_6.dev_select_outstanding ;
  assign \xbar.u_s1n_6.hold_all_requests  = \$659y  & \$660y ;
  assign \xbar.u_s1n_6.gen_u_o[0].dev_select  = \$680y  & \$681y ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[0].dev_select ;
  assign \u_uart.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[0].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[1].dev_select  = \$686y  & \$681y ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[1].dev_select ;
  assign \u_pwm.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[1].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[2].dev_select  = \$692y  & \$681y ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[2].dev_select ;
  assign \u_gpio.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[2].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[3].dev_select  = \$698y  & \$681y ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[3].dev_select ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  = \xbar.u_s1n_6.gen_u_o[3].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \$680y  = ! \xbar.u_s1n_6.dev_select_t ;
  assign \$686y  = \xbar.u_s1n_6.dev_select_t  == 3'h1;
  assign \$692y  = \xbar.u_s1n_6.dev_select_t  == 3'h2;
  assign \$698y  = \xbar.u_s1n_6.dev_select_t  == 3'h3;
  assign \uart_host_adapter.gnt_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.hfifo_reqready ;
  assign \$716y  = ! \xbar.u_s1n_6.dev_select_outstanding ;
  assign \$718y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h1;
  assign \$720y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h2;
  assign \$722y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h3;
  assign \$724y  = \u_uart.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16] = \$724y  ? \u_uart.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$726y  = \u_pwm.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16] = \$726y  ? \u_pwm.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$728y  = \u_gpio.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16] = \$728y  ? \u_gpio.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$730y  = \u_rv_timer.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16] = \$730y  ? \u_rv_timer.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$732y  = \xbar.u_s1n_6.dev_select_t  >= 3'h4;
  assign \$733y  = \u_uart.u_bridge.req_q  & \$732y ;
  assign \$681y  = ~ \xbar.u_s1n_6.hold_all_requests ;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108] = \$733y  & \$681y ;
  assign \$741y  = \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108] && \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0];
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] = ~ \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending ;
  assign \$753y  = 4'h6 == \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type ;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16] = \$753y  ? 32'd0 : 32'd4294967295;
  assign \$756y  = \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  == 3'h4;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62] = \$756y  ? 3'h1 : 3'h0;
  assign \u_pwm.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \u_pwm.u_reg.reg_we  = \u_pwm.u_reg.u_reg_if.a_ack  & \$1583y ;
  assign \u_pwm.u_reg.reg_re  = \u_pwm.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$780y  = \u_pwm.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$788y  = \u_pwm.u_reg.reg_error  || \u_pwm.u_reg.reg_we ;
  assign \$789y  = \$788y  ? 32'd4294967295 : \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \$793y  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  & \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \$794y  = \u_pwm.u_reg.u_reg_if.outstanding_q  | \$793y ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  = ~ \$794y ;
  assign \u_uart.u_reg.reg_re  = \u_uart.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_pwm.u_reg.reg_error  = \u_pwm.u_reg.addrmiss  | \u_pwm.u_reg.wr_err ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_to_src  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q  && \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \$895y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_req  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$912y  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_ack  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._cfg_we , \u_pwm.u_reg.u_cfg_cdc.dst_re_o , \u_pwm.u_reg._cfg_regwen  } = \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  & { \u_pwm.u_reg.u_cfg_cdc.dst_req , \u_pwm.u_reg.u_cfg_cdc.dst_req , \u_pwm.u_reg.u_cfg_cdc.dst_req  };
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  && \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \$950y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_req  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$967y  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_ack  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._pwm_en_we , \u_pwm.u_reg.u_pwm_en_cdc.dst_re_o , \u_pwm.u_reg._pwm_en_regwen  } = \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  & { \u_pwm.u_reg.u_pwm_en_cdc.dst_req , \u_pwm.u_reg.u_pwm_en_cdc.dst_req , \u_pwm.u_reg.u_pwm_en_cdc.dst_req  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  = \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  && \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  assign \$auto$bmuxmap.cc:84:execute$2153 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [15:8] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2153 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [31:24] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2153 [23:16] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [47:40] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2153 [31:24] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [63:56] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2158 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2153 [15:8] : \$auto$bmuxmap.cc:84:execute$2153 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2158 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2153 [31:24] : \$auto$bmuxmap.cc:84:execute$2153 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2161  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2158 [15:8] : \$auto$bmuxmap.cc:84:execute$2158 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2163 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [15:8] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2163 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [31:24] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2163 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [47:40] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2163 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [63:56] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2163 [39:32] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [79:72] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [71:64];
  assign \$auto$bmuxmap.cc:84:execute$2163 [47:40] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [95:88] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [87:80];
  assign \$auto$bmuxmap.cc:84:execute$2163 [55:48] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [111:104] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [103:96];
  assign \$auto$bmuxmap.cc:84:execute$2163 [63:56] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [127:120] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [119:112];
  assign \$auto$bmuxmap.cc:84:execute$2172 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2163 [15:8] : \$auto$bmuxmap.cc:84:execute$2163 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2172 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2163 [31:24] : \$auto$bmuxmap.cc:84:execute$2163 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2172 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2163 [47:40] : \$auto$bmuxmap.cc:84:execute$2163 [39:32];
  assign \$auto$bmuxmap.cc:84:execute$2172 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$2163 [63:56] : \$auto$bmuxmap.cc:84:execute$2163 [55:48];
  assign \$auto$bmuxmap.cc:84:execute$2177 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2172 [15:8] : \$auto$bmuxmap.cc:84:execute$2172 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$2177 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$2172 [31:24] : \$auto$bmuxmap.cc:84:execute$2172 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$2180  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3] ? \$auto$bmuxmap.cc:84:execute$2177 [15:8] : \$auto$bmuxmap.cc:84:execute$2177 [7:0];
  assign \$auto$rtlil.cc:3097:Not$2140  = ~ \$345y ;
  assign \$auto$rtlil.cc:3097:Not$2147  = ~ \$506y ;
  assign \$auto$rtlil.cc:3144:And$2142  = \$345y  & { \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i  };
  assign \$auto$rtlil.cc:3144:And$2149  = \$506y  & { \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i  };
  assign \$auto$rtlil.cc:3144:And$2144  = \$auto$rtlil.cc:3097:Not$2140  & \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage ;
  assign \$auto$rtlil.cc:3144:And$2151  = \$auto$rtlil.cc:3097:Not$2147  & \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage ;
  assign \$347y  = \$auto$rtlil.cc:3144:And$2144  | \$auto$rtlil.cc:3144:And$2142 ;
  assign \$508y  = \$auto$rtlil.cc:3144:And$2151  | \$auto$rtlil.cc:3144:And$2149 ;
  assign \$auto$demuxmap.cc:63:execute$2182  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h0;
  assign \$auto$demuxmap.cc:63:execute$2185  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h1;
  assign \$auto$demuxmap.cc:63:execute$2188  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h2;
  assign \$auto$demuxmap.cc:63:execute$2191  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h3;
  assign \$auto$demuxmap.cc:63:execute$2194  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h4;
  assign \$auto$demuxmap.cc:63:execute$2197  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h5;
  assign \$auto$demuxmap.cc:63:execute$2200  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h6;
  assign \$auto$demuxmap.cc:63:execute$2203  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h7;
  assign \$auto$demuxmap.cc:63:execute$2206  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h0;
  assign \$auto$demuxmap.cc:63:execute$2209  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h1;
  assign \$auto$demuxmap.cc:63:execute$2212  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h2;
  assign \$auto$demuxmap.cc:63:execute$2215  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h3;
  assign \$auto$demuxmap.cc:63:execute$2218  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h4;
  assign \$auto$demuxmap.cc:63:execute$2221  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h5;
  assign \$auto$demuxmap.cc:63:execute$2224  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h6;
  assign \$auto$demuxmap.cc:63:execute$2227  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h7;
  assign \$auto$demuxmap.cc:63:execute$2230  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h8;
  assign \$auto$demuxmap.cc:63:execute$2233  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h9;
  assign \$auto$demuxmap.cc:63:execute$2236  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'ha;
  assign \$auto$demuxmap.cc:63:execute$2239  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hb;
  assign \$auto$demuxmap.cc:63:execute$2242  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hc;
  assign \$auto$demuxmap.cc:63:execute$2245  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hd;
  assign \$auto$demuxmap.cc:63:execute$2248  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'he;
  assign \$auto$demuxmap.cc:63:execute$2251  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hf;
  assign \$345y [7:0] = \$auto$demuxmap.cc:63:execute$2182  ? \$344y  : 8'h00;
  assign \$345y [15:8] = \$auto$demuxmap.cc:63:execute$2185  ? \$344y  : 8'h00;
  assign \$345y [23:16] = \$auto$demuxmap.cc:63:execute$2188  ? \$344y  : 8'h00;
  assign \$345y [31:24] = \$auto$demuxmap.cc:63:execute$2191  ? \$344y  : 8'h00;
  assign \$345y [39:32] = \$auto$demuxmap.cc:63:execute$2194  ? \$344y  : 8'h00;
  assign \$345y [47:40] = \$auto$demuxmap.cc:63:execute$2197  ? \$344y  : 8'h00;
  assign \$345y [55:48] = \$auto$demuxmap.cc:63:execute$2200  ? \$344y  : 8'h00;
  assign \$345y [63:56] = \$auto$demuxmap.cc:63:execute$2203  ? \$344y  : 8'h00;
  assign \$506y [7:0] = \$auto$demuxmap.cc:63:execute$2206  ? \$505y  : 8'h00;
  assign \$506y [15:8] = \$auto$demuxmap.cc:63:execute$2209  ? \$505y  : 8'h00;
  assign \$506y [23:16] = \$auto$demuxmap.cc:63:execute$2212  ? \$505y  : 8'h00;
  assign \$506y [31:24] = \$auto$demuxmap.cc:63:execute$2215  ? \$505y  : 8'h00;
  assign \$506y [39:32] = \$auto$demuxmap.cc:63:execute$2218  ? \$505y  : 8'h00;
  assign \$506y [47:40] = \$auto$demuxmap.cc:63:execute$2221  ? \$505y  : 8'h00;
  assign \$506y [55:48] = \$auto$demuxmap.cc:63:execute$2224  ? \$505y  : 8'h00;
  assign \$506y [63:56] = \$auto$demuxmap.cc:63:execute$2227  ? \$505y  : 8'h00;
  assign \$506y [71:64] = \$auto$demuxmap.cc:63:execute$2230  ? \$505y  : 8'h00;
  assign \$506y [79:72] = \$auto$demuxmap.cc:63:execute$2233  ? \$505y  : 8'h00;
  assign \$506y [87:80] = \$auto$demuxmap.cc:63:execute$2236  ? \$505y  : 8'h00;
  assign \$506y [95:88] = \$auto$demuxmap.cc:63:execute$2239  ? \$505y  : 8'h00;
  assign \$506y [103:96] = \$auto$demuxmap.cc:63:execute$2242  ? \$505y  : 8'h00;
  assign \$506y [111:104] = \$auto$demuxmap.cc:63:execute$2245  ? \$505y  : 8'h00;
  assign \$506y [119:112] = \$auto$demuxmap.cc:63:execute$2248  ? \$505y  : 8'h00;
  assign \$506y [127:120] = \$auto$demuxmap.cc:63:execute$2251  ? \$505y  : 8'h00;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.beat_ctr_q  <= 27'h0000000;
    else if (\u_pwm.u_pwm_core.beat_ctr_en ) \u_pwm.u_pwm_core.beat_ctr_q  <= \u_pwm.u_pwm_core.beat_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.phase_ctr_q  <= 16'h0000;
    else if (\u_pwm.u_pwm_core.phase_ctr_en ) \u_pwm.u_pwm_core.phase_ctr_q  <= \u_pwm.u_pwm_core.phase_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.num_req_outstanding  <= 9'h000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1804 ) \xbar.u_s1n_6.num_req_outstanding  <= \$procmux$502_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_source  <= 8'h00;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1809 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_source  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_size  <= 2'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1809 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_size  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  <= 3'h4;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1809 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  <= \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type  <= 4'h9;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1809 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type  <= 4'h9;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.dev_select_outstanding  <= 3'h0;
    else if (\xbar.u_s1n_6.accept_t_req ) \xbar.u_s1n_6.dev_select_outstanding  <= \xbar.u_s1n_6.dev_select_t ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \uart_host_adapter.g_multiple_reqs.source_q  <= 1'h0;
    else if (\$564y ) \uart_host_adapter.g_multiple_reqs.source_q  <= \$procmux$548_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.tx_q  <= 1'h1;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1833 ) \u_uart.u_uart_core.uart_tx.tx_q  <= \u_uart.u_uart_core.uart_tx.tx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.sreg_q  <= 11'h7ff;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1836 ) \u_uart.u_uart_core.uart_tx.sreg_q  <= \u_uart.u_uart_core.uart_tx.sreg_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.bit_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1836 ) \u_uart.u_uart_core.uart_tx.bit_cnt_q  <= \u_uart.u_uart_core.uart_tx.bit_cnt_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.baud_div_q  <= 4'h0;
    else if (\u_uart.u_uart_core.nco_sum_q [16]) \u_uart.u_uart_core.uart_tx.baud_div_q  <= \$353y [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.sreg_q  <= 11'h000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1847 ) \u_uart.u_uart_core.uart_rx.sreg_q  <= \u_uart.u_uart_core.uart_rx.sreg_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.idle_q  <= 1'h1;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1843 ) \u_uart.u_uart_core.uart_rx.idle_q  <= \u_uart.u_uart_core.uart_rx.idle_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.bit_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1843 ) \u_uart.u_uart_core.uart_rx.bit_cnt_q  <= \u_uart.u_uart_core.uart_rx.bit_cnt_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.baud_div_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1856 ) \u_uart.u_uart_core.uart_rx.baud_div_q  <= \u_uart.u_uart_core.uart_rx.baud_div_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1859 ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= \$procmux$1515_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1862 ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= \$procmux$1496_Y ;
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [63:56] <= \$347y [63:56];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [55:48] <= \$347y [55:48];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [47:40] <= \$347y [47:40];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [39:32] <= \$347y [39:32];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [31:24] <= \$347y [31:24];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [23:16] <= \$347y [23:16];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [15:8] <= \$347y [15:8];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [7:0] <= \$347y [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= 5'h00;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1873 ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= \$procmux$1255_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= 5'h00;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1876 ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= \$procmux$1236_Y ;
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [79:72] <= \$508y [79:72];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [71:64] <= \$508y [71:64];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [63:56] <= \$508y [63:56];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [55:48] <= \$508y [55:48];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [47:40] <= \$508y [47:40];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [39:32] <= \$508y [39:32];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [31:24] <= \$508y [31:24];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [23:16] <= \$508y [23:16];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [15:8] <= \$508y [15:8];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [127:120] <= \$508y [127:120];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [119:112] <= \$508y [119:112];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [111:104] <= \$508y [111:104];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [103:96] <= \$508y [103:96];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [95:88] <= \$508y [95:88];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [87:80] <= \$508y [87:80];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [7:0] <= \$508y [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_wdata.q  <= 8'h00;
    else if (\u_uart.u_reg.u_wdata0_qe.d_i ) \u_uart.u_reg.u_wdata.q  <= \u_uart.u_reg.reg_wdata [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.rspop_q  <= \$21y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.rdata_q  <= \$30y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.error_q  <= \u_uart.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_txrst.q  <= 1'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_txrst.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_rxrst.q  <= 1'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_rxrst.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_tx.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_tx.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_slpbk.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_slpbk.q  <= \u_uart.u_reg.reg_wdata [4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_rx.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_rx.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_parity_odd.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_parity_odd.q  <= \u_uart.u_reg.reg_wdata [7];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_parity_en.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_parity_en.q  <= \u_uart.u_reg.reg_wdata [6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_nf.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_nf.q  <= \u_uart.u_reg.reg_wdata [2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_nco.q  <= 16'h0970;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_nco.q  <= \u_uart.u_reg.reg_wdata [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_llpbk.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_llpbk.q  <= \u_uart.u_reg.reg_wdata [5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.we_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1923 ) \u_uart.u_bridge.we_q  <= \u_uart.u_bridge.we_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.wdata_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1938 ) \u_uart.u_bridge.wdata_q  <= \u_uart.u_bridge.wdata_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.sh_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1945 ) \u_uart.u_bridge.sh_q  <= \u_uart.u_bridge.sh_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.rxf_st_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1966 ) \u_uart.u_bridge.rxf_st_q  <= \u_uart.u_bridge.rxf_st_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.req_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1973 ) \u_uart.u_bridge.req_q  <= \u_uart.u_bridge.req_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.rdata_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1976 ) \u_uart.u_bridge.rdata_q  <= \u_uart.rdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.op_q  <= 8'h00;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1979 ) \u_uart.u_bridge.op_q  <= \u_uart.u_bridge.rx_data_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.idx_q  <= 2'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1994 ) \u_uart.u_bridge.idx_q  <= \u_uart.u_bridge.idx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.bebyte_q  <= 8'h0f;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1997 ) \u_uart.u_bridge.bebyte_q  <= \u_uart.u_bridge.rx_data_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.be_q  <= 4'hf;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1938 ) \u_uart.u_bridge.be_q  <= \u_uart.u_bridge.be_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.any_err_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1976 ) \u_uart.u_bridge.any_err_q  <= \xbar.u_s1n_6.tl_t_p [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.addr_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2018 ) \u_uart.u_bridge.addr_q  <= { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_timer_v_upper0.q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_timer_v_upper0.qe ) \u_rv_timer.u_reg.u_timer_v_upper0.q  <= \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_timer_v_lower0.q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_timer_v_lower0.qe ) \u_rv_timer.u_reg.u_timer_v_lower0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.rspop_q  <= \$1883y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.rdata_q  <= \$1892y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.error_q  <= \u_rv_timer.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_intr_state0.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.u_intr_state0.qe ) \u_rv_timer.u_reg.u_intr_state0.q  <= \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_intr_enable0.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.intr_enable0_we ) \u_rv_timer.u_reg.u_intr_enable0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_ctrl.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.ctrl_we ) \u_rv_timer.u_reg.u_ctrl.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_upper0_0.q  <= 32'd4294967295;
    else if (\u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ) \u_rv_timer.u_reg.u_compare_upper0_0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_lower0_0.q  <= 32'd4294967295;
    else if (\u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ) \u_rv_timer.u_reg.u_compare_lower0_0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_cfg0_step.q  <= 8'h01;
    else if (\u_rv_timer.u_reg.cfg0_we ) \u_rv_timer.u_reg.u_cfg0_step.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_cfg0_prescale.q  <= 12'h000;
    else if (\u_rv_timer.u_reg.cfg0_we ) \u_rv_timer.u_reg.u_cfg0_prescale.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_regwen.q  <= 1'h1;
    else if (\u_pwm.u_reg.u_regwen.wr_en_data_arb.we ) \u_pwm.u_reg.u_regwen.q  <= \u_pwm.u_reg.u_regwen.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.rspop_q  <= \$780y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.rdata_q  <= \$789y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.error_q  <= \u_pwm.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_pwm_param0_qe.d_i ) \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  <= \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_htbt_en_0.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_param0_qe.d_i ) \u_pwm.u_reg.u_pwm_param_htbt_en_0.q  <= \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2043 ) \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q  <= \$procmux$80_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.src_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2043 ) \u_pwm.u_reg.u_pwm_param_cdc.src_q  <= \$procmux$84_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2049 ) \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  <= \$procmux$93_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_blink_en_0.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_param0_qe.d_i ) \u_pwm.u_reg.u_pwm_param_blink_en_0.q  <= \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2053 ) \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  <= \$procmux$148_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.src_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2053 ) \u_pwm.u_reg.u_pwm_en_cdc.src_q  <= \$procmux$152_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2059 ) \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  <= \$procmux$161_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_pwm_en0_qe.d_i ) \u_pwm.u_reg.u_pwm_en.q  <= \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2063 ) \u_pwm.u_reg.u_duty_cycle_cdc.txn_bits_q  <= \$procmux$1714_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.src_q  <= 32'd2147450879;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2063 ) \u_pwm.u_reg.u_duty_cycle_cdc.src_q  <= \$procmux$1718_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2069 ) \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q  <= \$procmux$1730_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_b_0.q  <= 16'h7fff;
    else if (\u_pwm.u_reg.u_duty_cycle0_qe.d_i ) \u_pwm.u_reg.u_duty_cycle_b_0.q  <= \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_a_0.q  <= 16'h7fff;
    else if (\u_pwm.u_reg.u_duty_cycle0_qe.d_i ) \u_pwm.u_reg.u_duty_cycle_a_0.q  <= \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_dc_resn.q  <= 4'h7;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_dc_resn.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cntr_en.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_cntr_en.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_clk_div.q  <= 27'h0008000;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_clk_div.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2077 ) \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  <= \$procmux$265_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.src_q  <= 32'd939556864;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2077 ) \u_pwm.u_reg.u_cfg_cdc.src_q  <= \$procmux$269_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2083 ) \u_pwm.u_reg.u_cfg_cdc.src_busy_q  <= \$procmux$278_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_y_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_blink_param0_qe.d_i ) \u_pwm.u_reg.u_blink_param_y_0.q  <= \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_x_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg.u_blink_param0_qe.d_i ) \u_pwm.u_reg.u_blink_param_x_0.q  <= \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2088 ) \u_pwm.u_reg.u_blink_param_cdc.txn_bits_q  <= \$procmux$1211_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.src_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2088 ) \u_pwm.u_reg.u_blink_param_cdc.src_q  <= \$procmux$1215_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2094 ) \u_pwm.u_reg.u_blink_param_cdc.src_busy_q  <= \$procmux$1266_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  <= 1'h0;
    else if (!\u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  <= \u_pwm.u_reg.u_pwm_en.q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$2098 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_direction  <= \$procmux$58_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2105 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_ctr_q  <= \$procmux$63_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q  <= 1'h0;
    else if (\$1394y ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_wrap_q  <= \$1457y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2113 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_q  <= \$procmux$6_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  <= 16'h0000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$2120 ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_ctr_q  <= \$procmux$66_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.rspop_q  <= \$1599y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.rdata_q  <= \$1608y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.error_q  <= \u_gpio.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_state.q  <= 2'h0;
    else if (\u_gpio.u_reg.u_intr_state.qe ) \u_gpio.u_reg.u_intr_state.q  <= \u_gpio.u_reg.u_intr_state.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_enable.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_enable_we ) \u_gpio.u_reg.u_intr_enable.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_rising.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_rising.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q  <= \u_gpio.u_reg.reg_wdata [7:6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q  <= \u_gpio.u_reg.reg_wdata [5:4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q  <= \u_gpio.u_reg.reg_wdata [9:8];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_falling.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_falling.q  <= \u_gpio.u_reg.reg_wdata [3:2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_ctrl_en_input_filter.q  <= 4'h0;
    else if (\u_gpio.u_reg.ctrl_en_input_filter_we ) \u_gpio.u_reg.u_ctrl_en_input_filter.q  <= \u_gpio.u_reg.reg_wdata [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[1].u_filter.update_stored_value ) \u_gpio.gen_filter[1].u_filter.stored_value_q  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[0].u_filter.update_stored_value ) \u_gpio.gen_filter[0].u_filter.stored_value_q  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_q  <= 2'h0;
    else if (\u_gpio.u_reg.direct_qe ) \u_gpio.cio_gpio_q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_en_q  <= 2'h0;
    else if (\u_gpio.u_reg.direct_qe ) \u_gpio.cio_gpio_en_q  <= \u_gpio.u_reg.reg_wdata [3:2];
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1800  = | { \xbar.u_s1n_6.tl_t_p [65], \xbar.u_s1n_6.accept_t_req  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1802  = { \xbar.u_s1n_6.tl_t_p [65], \xbar.u_s1n_6.accept_t_req  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1829  = { \u_uart.u_uart_core.u_uart_txfifo.rready_i , \u_uart.u_reg.u_ctrl_tx.q  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1831  = { \$364y , \u_uart.u_reg.u_ctrl_tx.q  } != 2'h1;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1836  = { \$364y , \u_uart.u_uart_core.u_uart_txfifo.rready_i , \u_uart.u_reg.u_ctrl_tx.q  } != 3'h1;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1843  = | { \$414y , \$411y  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1845  = { \$417y , \$411y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1856  = | { \$411y , \u_uart.u_uart_core.nco_sum_q [16] };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1859  = | { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set , \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i , \u_uart.u_uart_core.u_uart_txfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1862  = | { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set , \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i , \u_uart.u_uart_core.u_uart_txfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1873  = | { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set , \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i , \u_uart.u_uart_core.u_uart_rxfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1876  = | { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set , \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i , \u_uart.u_uart_core.u_uart_rxfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1911  = { \$procmux$1094_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1913  = { \$procmux$1096_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1915  = { \$procmux$1094_CMP , \$530y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1917  = { \$procmux$1096_CMP , \$530y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1919  = { \$procmux$1096_CMP , \$531y  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1921  = | { \$procmux$1100_CMP , \$procmux$1096_CMP , \$procmux$1094_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1936  = | { \$procmux$1096_CMP , \$procmux$1094_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1941  = { \$auto$opt_reduce.cc:137:opt_pmux$1798 , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1943  = | { \$procmux$1100_CMP , \$auto$opt_reduce.cc:137:opt_pmux$1798  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1948  = { \$procmux$1010_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1954  = { \$procmux$1089_CMP , \xbar.u_s1n_6.tl_t_p [65] } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1956  = { \$procmux$1100_CMP , \$518y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1958  = { \$procmux$1010_CMP , \$522y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1964  = { \$procmux$1091_CMP , \$564y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1971  = | { \$procmux$1092_CMP , \$procmux$1091_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1988  = { \$procmux$1096_CMP , \$531y , \$530y  } != 3'h5;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1990  = { \$procmux$1094_CMP , \$530y  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1992  = | { \$procmux$1100_CMP , \$procmux$1096_CMP , \$procmux$1094_CMP , \$procmux$1010_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2043  = | { \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2049  = | { \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2053  = | { \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2059  = | { \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_en_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2063  = | { \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2069  = | { \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_duty_cycle_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2077  = | { \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_cfg_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2083  = | { \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_cfg_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2088  = | { \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_blink_param_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2094  = | { \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_blink_param_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2098  = | { \$1429y , \$1426y , \$1422y , \$1419y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2101  = | { \$1394y , \$1392y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2103  = | { \$1390y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2109  = | { \$1464y , \$1393y  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2111  = | { \$1464y , \$1394y  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2116  = | { \$1373y , \$1371y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$2118  = | { \$1369y , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1804  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1800 , \$auto$opt_dff.cc:247:make_patterns_logic$1802  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1809  = & { \$741y , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1833  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1829 , \$auto$opt_dff.cc:247:make_patterns_logic$1831  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1847  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1843 , \$auto$opt_dff.cc:247:make_patterns_logic$1845  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1923  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1911 , \$auto$opt_dff.cc:247:make_patterns_logic$1913 , \$auto$opt_dff.cc:247:make_patterns_logic$1915 , \$auto$opt_dff.cc:247:make_patterns_logic$1917 , \$auto$opt_dff.cc:247:make_patterns_logic$1919 , \$auto$opt_dff.cc:247:make_patterns_logic$1921  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1938  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1911 , \$auto$opt_dff.cc:247:make_patterns_logic$1913 , \$auto$opt_dff.cc:247:make_patterns_logic$1915 , \$auto$opt_dff.cc:247:make_patterns_logic$1917 , \$auto$opt_dff.cc:247:make_patterns_logic$1919 , \$auto$opt_dff.cc:247:make_patterns_logic$1936  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1945  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1941 , \$auto$opt_dff.cc:247:make_patterns_logic$1943  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1966  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1911 , \$auto$opt_dff.cc:247:make_patterns_logic$1913 , \$auto$opt_dff.cc:247:make_patterns_logic$1915 , \$auto$opt_dff.cc:247:make_patterns_logic$1917 , \$auto$opt_dff.cc:247:make_patterns_logic$1948 , \$auto$opt_dff.cc:247:make_patterns_logic$1954 , \$auto$opt_dff.cc:247:make_patterns_logic$1956 , \$auto$opt_dff.cc:247:make_patterns_logic$1958 , \$auto$opt_dff.cc:247:make_patterns_logic$1964  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1973  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1964 , \$auto$opt_dff.cc:247:make_patterns_logic$1971  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1976  = & { \$procmux$1089_CMP , \xbar.u_s1n_6.tl_t_p [65] };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1979  = & { \$procmux$1042_CMP , \$procmux$1010_CMP , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1994  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1911 , \$auto$opt_dff.cc:247:make_patterns_logic$1913 , \$auto$opt_dff.cc:247:make_patterns_logic$1948 , \$auto$opt_dff.cc:247:make_patterns_logic$1988 , \$auto$opt_dff.cc:247:make_patterns_logic$1990 , \$auto$opt_dff.cc:247:make_patterns_logic$1992  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1997  = & { \$procmux$1010_CMP , \$522y , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2018  = & { \$procmux$1096_CMP , \$530y , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2105  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2101 , \$auto$opt_dff.cc:247:make_patterns_logic$2103  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2113  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2109 , \$auto$opt_dff.cc:247:make_patterns_logic$2111  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$2120  = & { \$auto$opt_dff.cc:247:make_patterns_logic$2116 , \$auto$opt_dff.cc:247:make_patterns_logic$2118  };
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4] = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3] = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1766  = | { \u_gpio.u_reg.addr_hit [2], \u_gpio.u_reg.addr_hit [0] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$1768  = | { \u_gpio.u_reg.addr_hit [4:3], \u_gpio.u_reg.addr_hit [0] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$1770  = | \u_rv_timer.u_reg.addr_hit [3:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1764  = | \u_rv_timer.u_reg.addr_hit [4:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1778  = | { \u_gpio.u_reg.addr_hit [5:3], \u_gpio.u_reg.addr_hit [1] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$1780  = | \u_gpio.u_reg.addr_hit [5:3];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1782  = | \u_gpio.u_reg.addr_hit [5:1];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1784  = | { \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [4:0] };
  assign \$1277y  = | \u_gpio.u_reg.addr_hit [5:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1788  = | \u_gpio.u_reg.addr_hit [4:1];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1790  = | \u_gpio.u_reg.addr_hit [3:0];
  assign \$1773y  = | \u_gpio.u_reg.addr_hit ;
  assign \$auto$opt_reduce.cc:137:opt_pmux$1776  = | \u_gpio.u_reg.addr_hit [4:3];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1798  = | { \$procmux$1096_CMP , \$procmux$1094_CMP  };
  always @(posedge clk_i)
    \u_gpio.data_in_q  <= { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.diff_ctr_q  <= 2'h0;
    else \u_gpio.gen_filter[0].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[0].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.filter_q  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.diff_ctr_q  <= 2'h0;
    else \u_gpio.gen_filter[1].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[1].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.filter_q  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_data_in.q  <= 2'h0;
    else \u_gpio.u_reg.u_data_in.q  <= { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_gpio.u_reg.u_reg_if.outstanding_q  <= \$procmux$492_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q  <= 1'h0;
    else \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end_q  <= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_htbt_end ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q  <= 1'h0;
    else \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q  <= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param0_qe.q_o  <= \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1132y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level  <= \$1115y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg0_qe.q_o  <= \u_pwm.u_reg.u_cfg0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$912y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  <= \$895y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle0_qe.q_o  <= \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1077y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level  <= \$1060y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en0_qe.q_o  <= \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$967y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  <= \$950y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param0_qe.q_o  <= \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1022y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level  <= \$1005y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_pwm.u_reg.u_reg_if.outstanding_q  <= \$procmux$407_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.gen_harts[0].u_core.tick_count  <= 12'h000;
    else \u_rv_timer.gen_harts[0].u_core.tick_count  <= \$procmux$1602_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o  <= 1'h0;
    else \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o  <= \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  <= 1'h0;
    else \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  <= \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_rv_timer.u_reg.u_reg_if.outstanding_q  <= \$procmux$1592_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.tx_idx_q  <= 4'h0;
    else \u_uart.u_bridge.tx_idx_q  <= \u_uart.u_bridge.tx_idx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.tx_st_q  <= 2'h0;
    else \u_uart.u_bridge.tx_st_q  <= \u_uart.u_bridge.tx_st_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  <= 1'h0;
    else \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  <= \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_uart.u_reg.u_reg_if.outstanding_q  <= \$procmux$1755_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_wdata0_qe.q_o  <= 1'h0;
    else \u_uart.u_reg.u_wdata0_qe.q_o  <= \u_uart.u_reg.u_wdata0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.nco_sum_q  <= 17'h00000;
    else \u_uart.u_uart_core.nco_sum_q  <= \$285y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_sync_q1  <= 1'h1;
    else \u_uart.u_uart_core.rx_sync_q1  <= \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_sync_q2  <= 1'h1;
    else \u_uart.u_uart_core.rx_sync_q2  <= \u_uart.u_uart_core.rx_sync_q1 ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.sync_rx.u_sync_1.q_o  <= 1'h1;
    else \u_uart.u_uart_core.sync_rx.u_sync_1.q_o  <= cio_rx_i;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  <= 1'h1;
    else \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  <= \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.tx_out_q  <= 1'h1;
    else \u_uart.u_uart_core.tx_out_q  <= \$procmux$1406_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  <= 1'h1;
    else \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  <= \$procmux$1257_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  <= 1'h1;
    else \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  <= \$procmux$1517_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.rx_valid_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_rx.rx_valid_q  <= \$440y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.tick_baud_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_rx.tick_baud_q  <= \u_uart.u_uart_core.uart_rx.tick_baud_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.tick_baud_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_tx.tick_baud_q  <= \$procmux$1472_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  <= 1'h0;
    else \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  <= \$procmux$442_Y ;
  function [0:0] \$procmux$100 ;
    input [0:0] a;
    input [4:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$100  = b[0:0];
      5'b???1?:
        \$procmux$100  = b[1:1];
      5'b??1??:
        \$procmux$100  = b[2:2];
      5'b?1???:
        \$procmux$100  = b[3:3];
      5'b1????:
        \$procmux$100  = b[4:4];
      default:
        \$procmux$100  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.busy_i  = \$procmux$100 (1'h0, { \u_pwm.u_reg.u_cfg_cdc.src_busy_q , \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q , \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q , \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q , \u_pwm.u_reg.u_blink_param_cdc.src_busy_q  }, { \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \u_gpio.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5] });
  assign \$procmux$1005_Y  = \$522y  ? 2'h0 : \$523y ;
  assign \$procmux$1010_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h1;
  assign \$procmux$1018_Y  = \$522y  ? 3'h2 : 3'hx;
  assign \$522y  = \u_uart.u_bridge.idx_q  == 2'h2;
  assign \$procmux$1042_CMP  = \u_uart.u_bridge.idx_q  == 2'h1;
  function [30:0] \$procmux$107 ;
    input [30:0] a;
    input [154:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$107  = b[30:0];
      5'b???1?:
        \$procmux$107  = b[61:31];
      5'b??1??:
        \$procmux$107  = b[92:62];
      5'b?1???:
        \$procmux$107  = b[123:93];
      5'b1????:
        \$procmux$107  = b[154:124];
      default:
        \$procmux$107  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.rdata_i [31:1] = \$procmux$107 (31'h7fffffff, { \u_pwm.u_reg.u_cfg_cdc.src_q [31:1], 31'h00000000, \u_pwm.u_reg.u_pwm_param_cdc.src_q [31:1], \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:1], \u_pwm.u_reg.u_blink_param_cdc.src_q [31:1] }, { \u_gpio.u_reg.addr_hit [1], \$auto$opt_reduce.cc:137:opt_pmux$1766 , \u_gpio.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5] });
  assign \$procmux$1073_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$1005_Y  : 2'hx;
  assign \$procmux$1083_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$1018_Y  : 3'hx;
  function [2:0] \$procmux$1088 ;
    input [2:0] a;
    input [20:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        \$procmux$1088  = b[2:0];
      7'b?????1?:
        \$procmux$1088  = b[5:3];
      7'b????1??:
        \$procmux$1088  = b[8:6];
      7'b???1???:
        \$procmux$1088  = b[11:9];
      7'b??1????:
        \$procmux$1088  = b[14:12];
      7'b?1?????:
        \$procmux$1088  = b[17:15];
      7'b1??????:
        \$procmux$1088  = b[20:18];
      default:
        \$procmux$1088  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.rxf_st_d  = \$procmux$1088 (3'hx, { \$procmux$1107_Y , \$procmux$1083_Y , \$procmux$995_Y , \$procmux$790_Y , 3'h5, \$procmux$692_Y , \$procmux$682_Y  }, { \$procmux$1100_CMP , \$procmux$1010_CMP , \$procmux$1096_CMP , \$procmux$1094_CMP , \$procmux$1092_CMP , \$procmux$1091_CMP , \$procmux$1089_CMP  });
  assign \$procmux$1092_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h4;
  assign \$procmux$1100_CMP  = ! \u_uart.u_bridge.rxf_st_q ;
  assign \$procmux$1107_Y  = \$518y  ? 3'h1 : 3'hx;
  assign \$procmux$1112_Y  = \$procmux$1089_CMP  ? \$procmux$662_Y  : \u_uart.u_bridge.tx_idx_q ;
  assign \$procmux$1115_Y  = \$procmux$1089_CMP  ? \$procmux$667_Y  : \u_uart.u_bridge.tx_st_q ;
  function [0:0] \$procmux$1125 ;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1125  = b[0:0];
      2'b1?:
        \$procmux$1125  = b[1:1];
      default:
        \$procmux$1125  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.req_d  = \$procmux$1125 (1'hx, { 1'h1, \$procmux$687_Y  }, { \$procmux$1092_CMP , \$procmux$1091_CMP  });
  function [0:0] \$procmux$1132 ;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1132  = b[0:0];
      3'b?1?:
        \$procmux$1132  = b[1:1];
      3'b1??:
        \$procmux$1132  = b[2:2];
      default:
        \$procmux$1132  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.we_d  = \$procmux$1132 (1'hx, { 1'h0, \$procmux$941_Y , \$procmux$750_Y  }, { \$procmux$1100_CMP , \$procmux$1096_CMP , \$procmux$1094_CMP  });
  function [3:0] \$procmux$1142 ;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1142  = b[3:0];
      2'b1?:
        \$procmux$1142  = b[7:4];
      default:
        \$procmux$1142  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.be_d  = \$procmux$1142 (4'hx, { \$procmux$950_Y , \$procmux$758_Y  }, { \$procmux$1096_CMP , \$procmux$1094_CMP  });
  function [0:0] \$procmux$115 ;
    input [0:0] a;
    input [5:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$115  = b[0:0];
      6'b????1?:
        \$procmux$115  = b[1:1];
      6'b???1??:
        \$procmux$115  = b[2:2];
      6'b??1???:
        \$procmux$115  = b[3:3];
      6'b?1????:
        \$procmux$115  = b[4:4];
      6'b1?????:
        \$procmux$115  = b[5:5];
      default:
        \$procmux$115  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.rdata_i [0] = \$procmux$115 (1'h1, { \u_pwm.u_reg.u_regwen.q , \u_pwm.u_reg.u_cfg_cdc.src_q [0], \u_pwm.u_reg.u_pwm_en_cdc.src_q , \u_pwm.u_reg.u_pwm_param_cdc.src_q [0], \u_pwm.u_reg.u_duty_cycle_cdc.src_q [0], \u_pwm.u_reg.u_blink_param_cdc.src_q [0] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \u_gpio.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5] });
  function [31:0] \$procmux$1150 ;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1150  = b[31:0];
      2'b1?:
        \$procmux$1150  = b[63:32];
      default:
        \$procmux$1150  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.wdata_d  = \$procmux$1150 (32'hxxxxxxxx, { \$procmux$959_Y , \$procmux$766_Y  }, { \$procmux$1096_CMP , \$procmux$1094_CMP  });
  function [31:0] \$procmux$1181 ;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1181  = b[31:0];
      2'b1?:
        \$procmux$1181  = b[63:32];
      default:
        \$procmux$1181  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.sh_d  = \$procmux$1181 (32'hxxxxxxxx, { 32'h00000000, \$procmux$774_Y  }, { \$procmux$1100_CMP , \$auto$opt_reduce.cc:137:opt_pmux$1798  });
  function [1:0] \$procmux$1191 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1191  = b[1:0];
      4'b??1?:
        \$procmux$1191  = b[3:2];
      4'b?1??:
        \$procmux$1191  = b[5:4];
      4'b1???:
        \$procmux$1191  = b[7:6];
      default:
        \$procmux$1191  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.idx_d  = \$procmux$1191 (2'hx, { 2'h0, \$procmux$1073_Y , \$procmux$986_Y , \$procmux$782_Y  }, { \$procmux$1100_CMP , \$procmux$1010_CMP , \$procmux$1096_CMP , \$procmux$1094_CMP  });
  assign \$procmux$1199_Y  = \u_pwm.u_reg.u_blink_param_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$12_Y  = \$1429y  ? 1'h1 : 1'hx;
  assign \$procmux$1204_Y  = \u_pwm.u_reg.u_blink_param_cdc.dst_to_src  ? { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$1211_Y  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$1199_Y ;
  assign \$procmux$1215_Y  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$1204_Y ;
  assign \$procmux$1219_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  ? \$488y  : 5'hxx;
  assign \$procmux$1229_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4], 4'h0 } : \$procmux$1219_Y ;
  assign \$procmux$1236_Y  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i  ? 5'h00 : \$procmux$1229_Y ;
  assign \$procmux$1238_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  ? \$481y  : 5'hxx;
  assign \$procmux$1248_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [4], 4'h0 } : \$procmux$1238_Y ;
  assign \$procmux$1255_Y  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i  ? 5'h00 : \$procmux$1248_Y ;
  assign \$procmux$1257_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  ? \$455y  : 1'h0;
  assign \$procmux$1259_Y  = \u_pwm.u_reg.u_blink_param_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$1266_Y  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$1259_Y ;
  assign \$procmux$1269_Y  = \$417y  ? 1'h1 : \$419y ;
  assign \$procmux$1280_Y  = \$417y  ? 4'h0 : \$418y ;
  assign \$procmux$1291_Y  = \$417y  ? 11'hxxx : { \u_uart.u_uart_core.uart_rx.rx , \u_uart.u_uart_core.uart_rx.sreg_q [10:1] };
  assign \$procmux$1302_Y  = \$414y  ? \$procmux$1269_Y  : 1'hx;
  assign \$procmux$1311_Y  = \$414y  ? \$procmux$1280_Y  : 4'hx;
  assign \$procmux$1320_Y  = \$414y  ? \$procmux$1291_Y  : 11'hxxx;
  assign \u_uart.u_uart_core.uart_rx.idle_d  = \$411y  ? 1'h0 : \$procmux$1302_Y ;
  assign \u_uart.u_uart_core.uart_rx.bit_cnt_d  = \$411y  ? \$362y  : \$procmux$1311_Y ;
  assign \u_uart.u_uart_core.uart_rx.sreg_d  = \$411y  ? 11'h000 : \$procmux$1320_Y ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud_d  = \$411y  ? 1'h0 : \$procmux$1363_Y ;
  assign \u_uart.u_uart_core.uart_rx.baud_div_d  = \$411y  ? 4'h8 : \$procmux$1368_Y ;
  assign \$procmux$136_Y  = \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$1363_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$407y [4] : 1'h0;
  assign \$procmux$1368_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$407y [3:0] : 4'hx;
  assign \$procmux$1406_Y  = \u_uart.u_reg.u_ctrl_slpbk.q  ? 1'h1 : \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \$procmux$1408_Y  = \$364y  ? \u_uart.u_uart_core.uart_tx.sreg_q [0] : 1'hx;
  assign \$procmux$141_Y  = \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  ? \u_pwm.u_reg.u_pwm_en.q  : 1'hx;
  assign \$procmux$1416_Y  = \$364y  ? { 1'h1, \u_uart.u_uart_core.uart_tx.sreg_q [10:1] } : 11'hxxx;
  assign \$procmux$1424_Y  = \$364y  ? \$365y  : 4'hx;
  assign \$procmux$1434_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? { 1'h1, \$361y , \u_uart.u_uart_core.tx_fifo_data , 1'h0 } : \$procmux$1416_Y ;
  assign \$procmux$1441_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? \$362y  : \$procmux$1424_Y ;
  assign \$procmux$1448_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? 1'hx : \$procmux$1408_Y ;
  assign \u_uart.u_uart_core.uart_tx.tx_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1448_Y  : 1'h1;
  assign \u_uart.u_uart_core.uart_tx.sreg_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1434_Y  : 11'h7ff;
  assign \u_uart.u_uart_core.uart_tx.bit_cnt_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1441_Y  : 4'h0;
  assign \$procmux$1472_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$353y [4] : 1'h0;
  assign \$procmux$1479_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  ? \$327y  : 4'hx;
  assign \$procmux$148_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$136_Y ;
  assign \$procmux$1489_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3], 3'h0 } : \$procmux$1479_Y ;
  assign \$procmux$1496_Y  = \u_uart.u_uart_core.u_uart_txfifo.clr_i  ? 4'h0 : \$procmux$1489_Y ;
  assign \$procmux$1498_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  ? \$320y  : 4'hx;
  assign \$procmux$1508_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [3], 3'h0 } : \$procmux$1498_Y ;
  assign \$procmux$1515_Y  = \u_uart.u_uart_core.u_uart_txfifo.clr_i  ? 4'h0 : \$procmux$1508_Y ;
  assign \$procmux$1517_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  ? \$294y  : 1'h0;
  assign \$procmux$152_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata [0] : \$procmux$141_Y ;
  function [7:0] \$procmux$1522 ;
    input [7:0] a;
    input [15:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1522  = b[7:0];
      2'b1?:
        \$procmux$1522  = b[15:8];
      default:
        \$procmux$1522  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [31:24] = \$procmux$1522 (8'hff, { \u_uart.u_reg.u_ctrl_nco.q [15:8], 8'h00 }, { \u_gpio.u_reg.addr_hit [0], \$auto$opt_reduce.cc:137:opt_pmux$1782  });
  assign \u_uart.u_reg.u_reg_if.rdata_i [15:8] = \$1277y  ? 8'h00 : 8'hff;
  function [7:0] \$procmux$1538 ;
    input [7:0] a;
    input [23:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1538  = b[7:0];
      3'b?1?:
        \$procmux$1538  = b[15:8];
      3'b1??:
        \$procmux$1538  = b[23:16];
      default:
        \$procmux$1538  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [23:16] = \$procmux$1538 (8'hff, { \u_uart.u_reg.u_ctrl_nco.q [7:0], 11'h000, \u_uart.u_uart_core.rx_fifo_depth  }, { \u_gpio.u_reg.addr_hit [0], \$auto$opt_reduce.cc:137:opt_pmux$1788 , \u_gpio.u_reg.addr_hit [5] });
  assign \$procmux$154_Y  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack  ? 1'h0 : 1'hx;
  function [1:0] \$procmux$1546 ;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1546  = b[1:0];
      3'b?1?:
        \$procmux$1546  = b[3:2];
      3'b1??:
        \$procmux$1546  = b[5:4];
      default:
        \$procmux$1546  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [7:6] = \$procmux$1546 (2'h3, { \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_bridge.rx_data_i [7:6], 2'h0 }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1778  });
  function [0:0] \$procmux$1554 ;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1554  = b[0:0];
      4'b??1?:
        \$procmux$1554  = b[1:1];
      4'b?1??:
        \$procmux$1554  = b[2:2];
      4'b1???:
        \$procmux$1554  = b[3:3];
      default:
        \$procmux$1554  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [3] = \$procmux$1554 (1'h1, { \u_uart.u_reg.status_txidle_qs , \u_uart.u_bridge.rx_data_i [3], 1'h0, \u_uart.u_uart_core.tx_fifo_depth [3] }, { \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1768 , \u_gpio.u_reg.addr_hit [5] });
  function [0:0] \$procmux$1562 ;
    input [0:0] a;
    input [4:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1562  = b[0:0];
      5'b???1?:
        \$procmux$1562  = b[1:1];
      5'b??1??:
        \$procmux$1562  = b[2:2];
      5'b?1???:
        \$procmux$1562  = b[3:3];
      5'b1????:
        \$procmux$1562  = b[4:4];
      default:
        \$procmux$1562  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [2] = \$procmux$1562 (1'h1, { \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.status_txempty_qs , \u_uart.u_bridge.rx_data_i [2], 1'h0, \u_uart.u_uart_core.tx_fifo_depth [2] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1776 , \u_gpio.u_reg.addr_hit [5] });
  function [1:0] \$procmux$1570 ;
    input [1:0] a;
    input [9:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1570  = b[1:0];
      5'b???1?:
        \$procmux$1570  = b[3:2];
      5'b??1??:
        \$procmux$1570  = b[5:4];
      5'b?1???:
        \$procmux$1570  = b[7:6];
      5'b1????:
        \$procmux$1570  = b[9:8];
      default:
        \$procmux$1570  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [1:0] = \$procmux$1570 (2'h3, { \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txfull_qs , \u_uart.u_bridge.rx_data_i [1:0], 2'h0, \u_uart.u_uart_core.tx_fifo_depth [1:0] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1776 , \u_gpio.u_reg.addr_hit [5] });
  function [1:0] \$procmux$1578 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1578  = b[1:0];
      4'b??1?:
        \$procmux$1578  = b[3:2];
      4'b?1??:
        \$procmux$1578  = b[5:4];
      4'b1???:
        \$procmux$1578  = b[7:6];
      default:
        \$procmux$1578  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [5:4] = \$procmux$1578 (2'h3, { \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_bridge.rx_data_i [5:4], 2'h0 }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1780  });
  assign \$procmux$1592_Y  = \u_rv_timer.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$1595_Y  = \$1853y  ? 12'h000 : \$1854y ;
  assign \$procmux$1602_Y  = \u_rv_timer.u_reg.u_ctrl.q  ? \$procmux$1595_Y  : 12'h000;
  assign \$procmux$161_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$154_Y ;
  assign \u_gpio.u_reg.u_reg_if.rdata_i [31:10] = \$1773y  ? 22'h000000 : 22'h3fffff;
  function [1:0] \$procmux$1676 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1676  = b[1:0];
      4'b??1?:
        \$procmux$1676  = b[3:2];
      4'b?1??:
        \$procmux$1676  = b[5:4];
      4'b1???:
        \$procmux$1676  = b[7:6];
      default:
        \$procmux$1676  = a;
    endcase
  endfunction
  assign \u_gpio.u_reg.u_reg_if.rdata_i [3:2] = \$procmux$1676 (2'h3, { 2'h0, \u_gpio.cio_gpio_en_q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q [3:2] }, { \$auto$opt_reduce.cc:137:opt_pmux$1790 , \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6] });
  function [5:0] \$procmux$1685 ;
    input [5:0] a;
    input [11:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1685  = b[5:0];
      2'b1?:
        \$procmux$1685  = b[11:6];
      default:
        \$procmux$1685  = a;
    endcase
  endfunction
  assign \u_gpio.u_reg.u_reg_if.rdata_i [9:4] = \$procmux$1685 (6'h3f, { \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , 6'h00 }, { \u_gpio.u_reg.addr_hit [5], \$auto$opt_reduce.cc:137:opt_pmux$1784  });
  function [1:0] \$procmux$1694 ;
    input [1:0] a;
    input [13:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        \$procmux$1694  = b[1:0];
      7'b?????1?:
        \$procmux$1694  = b[3:2];
      7'b????1??:
        \$procmux$1694  = b[5:4];
      7'b???1???:
        \$procmux$1694  = b[7:6];
      7'b??1????:
        \$procmux$1694  = b[9:8];
      7'b?1?????:
        \$procmux$1694  = b[11:10];
      7'b1??????:
        \$procmux$1694  = b[13:12];
      default:
        \$procmux$1694  = a;
    endcase
  endfunction
  assign \u_gpio.u_reg.u_reg_if.rdata_i [1:0] = \$procmux$1694 (2'h3, { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , 2'h0, \u_gpio.u_reg.u_data_in.q , \u_gpio.cio_gpio_q , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q [1:0] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \u_gpio.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6] });
  assign \$procmux$1702_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$1707_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_to_src  ? { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$1714_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$1702_Y ;
  assign \$procmux$1718_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$1707_Y ;
  assign \$procmux$1723_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$1730_Y  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$1723_Y ;
  assign \$procmux$1755_Y  = \u_uart.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$253_Y  = \u_pwm.u_reg.u_cfg_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$258_Y  = \u_pwm.u_reg.u_cfg_cdc.dst_to_src  ? { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  } : 32'hxxxxxxxx;
  assign \$procmux$265_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$253_Y ;
  assign \$procmux$269_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$258_Y ;
  assign \$procmux$271_Y  = \u_pwm.u_reg.u_cfg_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$278_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$271_Y ;
  assign \$procmux$28_Y  = \$1426y  ? 1'h0 : \$procmux$12_Y ;
  function [7:0] \$procmux$322 ;
    input [7:0] a;
    input [39:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$322  = b[7:0];
      5'b???1?:
        \$procmux$322  = b[15:8];
      5'b??1??:
        \$procmux$322  = b[23:16];
      5'b?1???:
        \$procmux$322  = b[31:24];
      5'b1????:
        \$procmux$322  = b[39:32];
      default:
        \$procmux$322  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [31:24] = \$procmux$322 (8'hff, { 8'h00, \u_rv_timer.u_reg.u_timer_v_lower0.q [31:24], \u_rv_timer.u_reg.u_timer_v_upper0.q [31:24], \u_rv_timer.u_reg.u_compare_lower0_0.q [31:24], \u_rv_timer.u_reg.u_compare_upper0_0.q [31:24] }, { \$auto$opt_reduce.cc:137:opt_pmux$1764 , \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [3:0] \$procmux$333 ;
    input [3:0] a;
    input [19:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$333  = b[3:0];
      5'b???1?:
        \$procmux$333  = b[7:4];
      5'b??1??:
        \$procmux$333  = b[11:8];
      5'b?1???:
        \$procmux$333  = b[15:12];
      5'b1????:
        \$procmux$333  = b[19:16];
      default:
        \$procmux$333  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [15:12] = \$procmux$333 (4'hf, { 4'h0, \u_rv_timer.u_reg.u_timer_v_lower0.q [15:12], \u_rv_timer.u_reg.u_timer_v_upper0.q [15:12], \u_rv_timer.u_reg.u_compare_lower0_0.q [15:12], \u_rv_timer.u_reg.u_compare_upper0_0.q [15:12] }, { \$auto$opt_reduce.cc:137:opt_pmux$1764 , \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [10:0] \$procmux$344 ;
    input [10:0] a;
    input [65:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$344  = b[10:0];
      6'b????1?:
        \$procmux$344  = b[21:11];
      6'b???1??:
        \$procmux$344  = b[32:22];
      6'b??1???:
        \$procmux$344  = b[43:33];
      6'b?1????:
        \$procmux$344  = b[54:44];
      6'b1?????:
        \$procmux$344  = b[65:55];
      default:
        \$procmux$344  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [11:1] = \$procmux$344 (11'h7ff, { 11'h000, \u_rv_timer.u_reg.u_cfg0_prescale.q [11:1], \u_rv_timer.u_reg.u_timer_v_lower0.q [11:1], \u_rv_timer.u_reg.u_timer_v_upper0.q [11:1], \u_rv_timer.u_reg.u_compare_lower0_0.q [11:1], \u_rv_timer.u_reg.u_compare_upper0_0.q [11:1] }, { \$auto$opt_reduce.cc:137:opt_pmux$1770 , \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [0:0] \$procmux$355 ;
    input [0:0] a;
    input [8:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        \$procmux$355  = b[0:0];
      9'b???????1?:
        \$procmux$355  = b[1:1];
      9'b??????1??:
        \$procmux$355  = b[2:2];
      9'b?????1???:
        \$procmux$355  = b[3:3];
      9'b????1????:
        \$procmux$355  = b[4:4];
      9'b???1?????:
        \$procmux$355  = b[5:5];
      9'b??1??????:
        \$procmux$355  = b[6:6];
      9'b?1???????:
        \$procmux$355  = b[7:7];
      9'b1????????:
        \$procmux$355  = b[8:8];
      default:
        \$procmux$355  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [0] = \$procmux$355 (1'h1, { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , 1'h0, \u_rv_timer.u_reg.u_cfg0_prescale.q [0], \u_rv_timer.u_reg.u_timer_v_lower0.q [0], \u_rv_timer.u_reg.u_timer_v_upper0.q [0], \u_rv_timer.u_reg.u_compare_lower0_0.q [0], \u_rv_timer.u_reg.u_compare_upper0_0.q [0] }, { \u_rv_timer.u_reg.addr_hit [0], \u_rv_timer.u_reg.addr_hit [1], \u_rv_timer.u_reg.addr_hit [2], \u_rv_timer.u_reg.addr_hit [3], \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [7:0] \$procmux$366 ;
    input [7:0] a;
    input [47:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$366  = b[7:0];
      6'b????1?:
        \$procmux$366  = b[15:8];
      6'b???1??:
        \$procmux$366  = b[23:16];
      6'b??1???:
        \$procmux$366  = b[31:24];
      6'b?1????:
        \$procmux$366  = b[39:32];
      6'b1?????:
        \$procmux$366  = b[47:40];
      default:
        \$procmux$366  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [23:16] = \$procmux$366 (8'hff, { 8'h00, \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_timer_v_lower0.q [23:16], \u_rv_timer.u_reg.u_timer_v_upper0.q [23:16], \u_rv_timer.u_reg.u_compare_lower0_0.q [23:16], \u_rv_timer.u_reg.u_compare_upper0_0.q [23:16] }, { \$auto$opt_reduce.cc:137:opt_pmux$1770 , \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  assign \$procmux$407_Y  = \u_pwm.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$41_Y  = \$1422y  ? 1'h0 : \$procmux$28_Y ;
  assign \$procmux$420_Y  = \$741y  ? 1'h1 : 1'h0;
  assign \$procmux$442_Y  = \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  ? 1'h0 : \$procmux$420_Y ;
  assign \xbar.u_s1n_6.tl_t_p  = \$722y  ? { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  } : \$procmux$464_Y ;
  assign \$procmux$464_Y  = \$720y  ? { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  } : \$procmux$467_Y ;
  assign \$procmux$467_Y  = \$718y  ? { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  } : \$procmux$469_Y ;
  assign \$procmux$469_Y  = \$716y  ? { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  } : { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.hfifo_reqready  = \xbar.u_s1n_6.hold_all_requests  ? 1'h0 : \$procmux$475_Y ;
  assign \$procmux$475_Y  = \$698y  ? \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  : \$procmux$478_Y ;
  assign \$procmux$478_Y  = \$692y  ? \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  : \$procmux$481_Y ;
  assign \$procmux$481_Y  = \$686y  ? \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  : \$procmux$483_Y ;
  assign \$procmux$483_Y  = \$680y  ? \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  : \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0];
  assign \$procmux$492_Y  = \u_gpio.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$494_Y  = \xbar.u_s1n_6.tl_t_p [65] ? \$655y  : 9'hxxx;
  assign \$procmux$502_Y  = \xbar.u_s1n_6.accept_t_req  ? \$procmux$505_Y  : \$procmux$494_Y ;
  assign \$procmux$505_Y  = \xbar.u_s1n_6.tl_t_p [65] ? 9'hxxx : \$653y ;
  assign \$procmux$51_Y  = \$1419y  ? 1'h1 : \$procmux$41_Y ;
  assign \$procmux$513_Y  = \$640y  ? 3'h3 : 3'h5;
  assign \$procmux$526_Y  = \$638y  ? 3'h2 : \$procmux$513_Y ;
  assign \$procmux$536_Y  = \$636y  ? 3'h1 : \$procmux$526_Y ;
  assign \xbar.u_s1n_6.dev_select_t  = \$634y  ? 3'h0 : \$procmux$536_Y ;
  assign \$procmux$548_Y  = \uart_host_adapter.g_multiple_reqs.source_q  ? 1'h0 : \$616y ;
  assign \$procmux$557_Y  = \$596y  ? 4'h0 : \$593y ;
  assign \$procmux$566_Y  = \$596y  ? 2'h0 : \$procmux$1115_Y ;
  assign \$procmux$577_Y  = \$592y  ? 4'h0 : \$procmux$557_Y ;
  assign \$procmux$58_Y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  ? \$1415y  : \$procmux$51_Y ;
  assign \$procmux$585_Y  = \$592y  ? 2'h0 : \$procmux$566_Y ;
  function [7:0] \$procmux$592 ;
    input [7:0] a;
    input [63:0] b;
    input [7:0] s;
    casez (s) // synopsys parallel_case
      8'b???????1:
        \$procmux$592  = b[7:0];
      8'b??????1?:
        \$procmux$592  = b[15:8];
      8'b?????1??:
        \$procmux$592  = b[23:16];
      8'b????1???:
        \$procmux$592  = b[31:24];
      8'b???1????:
        \$procmux$592  = b[39:32];
      8'b??1?????:
        \$procmux$592  = b[47:40];
      8'b?1??????:
        \$procmux$592  = b[55:48];
      8'b1???????:
        \$procmux$592  = b[63:56];
      default:
        \$procmux$592  = a;
    endcase
  endfunction
  assign \$procmux$592_Y  = \$procmux$592 (8'h00, { 16'h5a01, \u_uart.u_bridge.op_q , 7'h00, \u_uart.u_bridge.any_err_q , \u_uart.u_bridge.rdata_q  }, { \$procmux$600_CMP , \$procmux$599_CMP , \$procmux$598_CMP , \$595y , \$procmux$596_CMP , \$procmux$595_CMP , \$procmux$594_CMP , \$592y  });
  assign \$592y  = \u_uart.u_bridge.tx_idx_q  == 4'h7;
  assign \$procmux$594_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h6;
  assign \$procmux$595_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h5;
  assign \$procmux$596_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h4;
  assign \$595y  = \u_uart.u_bridge.tx_idx_q  == 4'h3;
  assign \$procmux$598_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h2;
  assign \$procmux$599_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h1;
  assign \$procmux$6_Y  = \$1464y  ? \u_pwm.u_reg.u_duty_cycle_a_0.q  : \$1467y ;
  assign \$procmux$600_CMP  = ! \u_uart.u_bridge.tx_idx_q ;
  assign \$procmux$606_Y  = \u_uart.u_uart_core.tx_fifo_wready  ? \$procmux$577_Y  : \$procmux$1112_Y ;
  assign \$procmux$611_Y  = \u_uart.u_uart_core.tx_fifo_wready  ? \$procmux$585_Y  : \$procmux$1115_Y ;
  assign \$procmux$616_Y  = \u_uart.u_uart_core.tx_fifo_wready  ? \$procmux$592_Y  : 8'h00;
  assign \$procmux$621_Y  = \u_uart.u_uart_core.tx_fifo_wready  ? 1'h1 : 1'h0;
  assign \u_uart.u_bridge.tx_idx_d  = \$590y  ? \$procmux$606_Y  : \$procmux$1112_Y ;
  assign \$procmux$63_Y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  ? 16'h0000 : \$1403y ;
  assign \u_uart.u_bridge.tx_st_d  = \$590y  ? \$procmux$611_Y  : \$procmux$1115_Y ;
  assign \u_uart.u_uart_core.tx_data_i  = \$590y  ? \$procmux$616_Y  : 8'h00;
  assign \u_uart.u_uart_core.tx_valid_i  = \$590y  ? \$procmux$621_Y  : 1'h0;
  assign \$procmux$648_Y  = \$531y  ? \u_uart.u_bridge.tx_idx_q  : 4'h0;
  assign \$procmux$655_Y  = \$531y  ? \u_uart.u_bridge.tx_st_q  : 2'h1;
  assign \$procmux$66_Y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i  ? 16'h0000 : \$1383y ;
  assign \$procmux$662_Y  = \xbar.u_s1n_6.tl_t_p [65] ? \$procmux$648_Y  : \u_uart.u_bridge.tx_idx_q ;
  assign \$procmux$667_Y  = \xbar.u_s1n_6.tl_t_p [65] ? \$procmux$655_Y  : \u_uart.u_bridge.tx_st_q ;
  assign \$procmux$68_Y  = \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$1089_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h6;
  assign \$procmux$682_Y  = \xbar.u_s1n_6.tl_t_p [65] ? 3'h0 : 3'hx;
  assign \$procmux$687_Y  = \$564y  ? 1'h0 : 1'hx;
  assign \$procmux$1091_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h5;
  assign \$procmux$692_Y  = \$564y  ? 3'h6 : 3'hx;
  assign \$procmux$700_Y  = \$530y  ? 1'h1 : 1'hx;
  assign \$procmux$1094_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h3;
  assign \$procmux$710_Y  = \$530y  ? \u_uart.u_bridge.bebyte_q [3:0] : 4'hx;
  assign \$procmux$720_Y  = \$530y  ? { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] } : 32'hxxxxxxxx;
  assign \$procmux$73_Y  = \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  ? { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$730_Y  = \$530y  ? 2'hx : \$523y ;
  assign \$procmux$740_Y  = \$530y  ? 3'h4 : 3'hx;
  assign \$procmux$750_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$700_Y  : 1'hx;
  assign \$procmux$758_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$710_Y  : 4'hx;
  assign \$procmux$766_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$720_Y  : 32'hxxxxxxxx;
  assign \$procmux$782_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$730_Y  : 2'hx;
  assign \$procmux$790_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$740_Y  : 3'hx;
  assign \$procmux$80_Y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  ? { 2'h2, \u_pwm.u_reg.u_regwen.q  } : \$procmux$68_Y ;
  assign \$procmux$800_Y  = \$530y  ? \$procmux$868_Y  : \$523y ;
  assign \$procmux$1096_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h2;
  assign \$procmux$812_Y  = \$531y  ? 3'h3 : 3'h4;
  assign \$procmux$826_Y  = \$531y  ? 1'hx : 1'h0;
  assign \$procmux$84_Y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  ? { \u_pwm.u_reg.reg_wdata [31:30], 14'h0000, \u_pwm.u_reg.reg_wdata [15:0] } : \$procmux$73_Y ;
  assign \$procmux$840_Y  = \$531y  ? 4'hx : 4'hf;
  assign \$procmux$854_Y  = \$531y  ? 32'hxxxxxxxx : 32'd0;
  assign \$procmux$86_Y  = \u_pwm.u_reg.u_pwm_param_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$868_Y  = \$531y  ? 2'h0 : 2'hx;
  assign \$procmux$882_Y  = \$530y  ? \$procmux$826_Y  : 1'hx;
  assign \$procmux$894_Y  = \$530y  ? \$procmux$840_Y  : 4'hx;
  assign \$procmux$906_Y  = \$530y  ? \$procmux$854_Y  : 32'hxxxxxxxx;
  assign \$procmux$93_Y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$86_Y ;
  assign \$procmux$930_Y  = \$530y  ? \$procmux$812_Y  : 3'hx;
  assign \$procmux$941_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$882_Y  : 1'hx;
  assign \$procmux$950_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$894_Y  : 4'hx;
  assign \$procmux$959_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$906_Y  : 32'hxxxxxxxx;
  assign \$procmux$774_Y  = \u_uart.u_bridge.rx_valid_i  ? { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] } : 32'hxxxxxxxx;
  assign \$procmux$986_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$800_Y  : 2'hx;
  assign \$procmux$995_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$930_Y  : 3'hx;
  assign cio_gpio_en_o = \u_gpio.cio_gpio_en_q ;
  assign cio_gpio_o = \u_gpio.cio_gpio_q ;
  assign cio_pwm_en_o = 1'h1;
  assign cio_pwm_o = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign cio_tx_en_o = 1'h1;
  assign tl_gpio_d2h = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign { tl_gpio_h2d[108:24], tl_gpio_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , 1'h1 };
  assign tl_pwm_d2h = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign { tl_pwm_h2d[108:24], tl_pwm_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , 1'h1 };
  assign tl_rv_timer_d2h = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign { tl_rv_timer_h2d[108:24], tl_rv_timer_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , 1'h1 };
  assign tl_uart_d2h = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign { tl_uart_h2d[108:24], tl_uart_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , 1'h1 };
  assign tl_uart_host_d2h = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign tl_uart_host_h2d = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \u_gpio.cio_gpio_en_o  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.cio_gpio_i  = cio_gpio_i;
  assign \u_gpio.cio_gpio_o  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.clk_i  = clk_i;
  assign \u_gpio.data_in_d  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_combined  = \u_gpio.intr_hw.event_intr_i ;
  assign \u_gpio.gen_filter[0].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [0];
  assign \u_gpio.gen_filter[0].u_filter.filter_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.filter_synced  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[0].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.thresh_i  = 2'h3;
  assign \u_gpio.gen_filter[1].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [1];
  assign \u_gpio.gen_filter[1].u_filter.filter_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.filter_synced  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[1].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.thresh_i  = 2'h3;
  assign \u_gpio.hw2reg  = { \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d , \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o , 1'h1, \u_gpio.cio_gpio_q , \u_gpio.cio_gpio_en_q  };
  assign \u_gpio.intr_hw.clk_i  = clk_i;
  assign \u_gpio.intr_hw.hw2reg_intr_state_d_o  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  assign \u_gpio.intr_hw.hw2reg_intr_state_de_o  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \u_gpio.intr_hw.reg2hw_intr_enable_q_i  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.intr_hw.reg2hw_intr_state_q_i  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.intr_hw.reg2hw_intr_test_q_i  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.intr_hw.rst_ni  = rst_ni;
  assign \u_gpio.intr_hw.status  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.reg2hw  = { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  };
  assign \u_gpio.rst_ni  = rst_ni;
  assign \u_gpio.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.clk_i  = clk_i;
  assign \u_gpio.u_reg.ctrl_en_input_filter_qs  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.ctrl_en_input_filter_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.data_in_qs  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.devmode_i  = 1'h1;
  assign \u_gpio.u_reg.direct_flds_we  = { \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.direct_qe  };
  assign \u_gpio.u_reg.direct_gpio_o_qs  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.direct_gpio_o_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.direct_gpio_oe_qs  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.direct_gpio_oe_wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.direct_we  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.hw2reg  = { \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d , \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o , 1'h1, \u_gpio.cio_gpio_q , \u_gpio.cio_gpio_en_q  };
  assign \u_gpio.u_reg.intr_ctrl_en_falling_qs  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_falling_wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.intr_ctrl_en_input_filter_qs  = \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_input_filter_wd  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_wd  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_wd  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.intr_ctrl_en_rising_qs  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_rising_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_enable_qs  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.intr_enable_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_state_qs  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.intr_state_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_state_we  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  assign \u_gpio.u_reg.intr_test_flds_we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.intr_test_qe  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.intr_test_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_test_we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.reg2hw  = { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  };
  assign \u_gpio.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_gpio.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_gpio.u_reg.reg_busy  = 1'h0;
  assign \u_gpio.u_reg.reg_rdata  = \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \u_gpio.u_reg.reg_rdata_next  = \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \u_gpio.u_reg.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.shadow_busy  = 1'h0;
  assign \u_gpio.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_o_pre  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_reg_d2h  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.d  = 4'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.de  = 1'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.qe  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.qs  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.we  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.d  = 4'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.q  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.we  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_en  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_data_in.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_data_in.d  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.de  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.ds  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.qe  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.qs  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_data_in.wd  = 2'h0;
  assign \u_gpio.u_reg.u_data_in.we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_data  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.d  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.de  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_q  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_wd  = 2'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.q  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wd  = 2'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_data  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_en  = 1'h1;
  assign \u_gpio.u_reg.u_direct_gpio_o.d  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_gpio_o.ds  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_gpio_o.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_direct_gpio_o.qe  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.u_direct_gpio_o.qs  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_gpio_o.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_direct_gpio_o.we  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.d  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.ds  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.q  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_direct_gpio_oe.qe  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.qs  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_direct_gpio_oe.we  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.qs  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_data  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.qs  = \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wd  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_data  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wd  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_data  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wd  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_data  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.qs  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_enable.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_enable.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_enable.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_enable.qe  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.qs  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_enable.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.we  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.we  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_state.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_state.d  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  assign \u_gpio.u_reg.u_intr_state.de  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \u_gpio.u_reg.u_intr_state.qs  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.u_intr_state.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_state.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_state.we  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  assign \u_gpio.u_reg.u_intr_state.wr_en  = \u_gpio.u_reg.u_intr_state.qe ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_data  = \u_gpio.u_reg.u_intr_state.wr_data ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_en  = \u_gpio.u_reg.u_intr_state.qe ;
  assign \u_gpio.u_reg.u_intr_test.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_test.ds  = 2'h0;
  assign \u_gpio.u_reg.u_intr_test.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_test.qe  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.u_intr_test.qre  = 1'h0;
  assign \u_gpio.u_reg.u_intr_test.qs  = 2'h0;
  assign \u_gpio.u_reg.u_intr_test.re  = 1'h0;
  assign \u_gpio.u_reg.u_intr_test.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_test.we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_gpio.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_gpio.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_reg_if.d_ack  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_gpio.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.error  = \u_gpio.u_reg.u_reg_if.error_q ;
  assign \u_gpio.u_reg.u_reg_if.error_i  = \u_gpio.u_reg.reg_error ;
  assign \u_gpio.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.rd_req  = \u_gpio.u_reg.reg_re ;
  assign \u_gpio.u_reg.u_reg_if.rdata  = \u_gpio.u_reg.u_reg_if.rdata_q ;
  assign \u_gpio.u_reg.u_reg_if.re_o  = \u_gpio.u_reg.reg_re ;
  assign \u_gpio.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_reg_if.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.tl_o_pre  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_gpio.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.wdata_o  = \u_gpio.u_reg.reg_wdata ;
  assign \u_gpio.u_reg.u_reg_if.we_o  = \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_reg_if.wr_req  = \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_rsp_intg_gen.tl_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_rsp_intg_gen.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_pwm.cio_pwm_en_o  = 1'h1;
  assign \u_pwm.cio_pwm_o  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign \u_pwm.clk_i  = clk_i;
  assign \u_pwm.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_a_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o , \u_pwm.u_reg.u_blink_param_x_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o  };
  assign \u_pwm.rst_ni  = rst_ni;
  assign \u_pwm.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_pwm_core.clk_core_i  = clk_i;
  assign \u_pwm.u_pwm_core.clk_div  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_pwm_core.clr_blink_cntr  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clr_blink_cntr_i ;
  assign \u_pwm.u_pwm_core.clr_phase_cntr  = \u_pwm.u_reg.u_cfg0_qe.q_o ;
  assign \u_pwm.u_pwm_core.cntr_en  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_pwm_core.cycle_end  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.cycle_end_i ;
  assign \u_pwm.u_pwm_core.dc_resn  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_en_i  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_x_i  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.blink_param_y_i  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clk_i  = clk_i;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_resn_i  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_a_i  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_b_i  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.htbt_en_i  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_ctr_i  = \u_pwm.u_pwm_core.phase_ctr_q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_i  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_masked  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_i  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.rst_ni  = rst_ni;
  assign \u_pwm.u_pwm_core.pwm_o  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign \u_pwm.u_pwm_core.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_a_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o , \u_pwm.u_reg.u_blink_param_x_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o  };
  assign \u_pwm.u_pwm_core.rst_core_ni  = rst_ni;
  assign \u_pwm.u_reg._blink_param_gated_we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg._blink_param_qs  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg._blink_param_wdata  = \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  assign \u_pwm.u_reg._blink_param_x_0_qs_int  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_reg._blink_param_y_0_qs_int  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_reg._cfg_clk_div_qs_int  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg._cfg_cntr_en_qs_int  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg._cfg_dc_resn_qs_int  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg._cfg_gated_we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg._cfg_qs  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg._cfg_wdata  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg._duty_cycle_a_0_qs_int  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_reg._duty_cycle_b_0_qs_int  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_reg._duty_cycle_gated_we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg._duty_cycle_qs  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg._duty_cycle_wdata  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  assign \u_pwm.u_reg._pwm_en_gated_we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg._pwm_en_qs  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg._pwm_en_qs_int  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg._pwm_en_wdata  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg._pwm_param_blink_en_0_qs_int  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_reg._pwm_param_gated_we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg._pwm_param_htbt_en_0_qs_int  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_reg._pwm_param_phase_delay_0_qs_int  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg._pwm_param_qs  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg._pwm_param_wdata  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.addr_hit  = \u_gpio.u_reg.addr_hit [5:0];
  assign \u_pwm.u_reg.blink_param_busy  = \u_pwm.u_reg.u_blink_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.blink_param_flds_we  = { \u_pwm.u_reg.u_blink_param0_qe.d_i , \u_pwm.u_reg.u_blink_param0_qe.d_i  };
  assign \u_pwm.u_reg.blink_param_qe  = \u_pwm.u_reg.u_blink_param0_qe.q_o ;
  assign \u_pwm.u_reg.blink_param_qs  = \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  assign \u_pwm.u_reg.blink_param_we  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.cfg_busy  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  assign \u_pwm.u_reg.cfg_flds_we  = { \u_pwm.u_reg.u_cfg0_qe.d_i , \u_pwm.u_reg.u_cfg0_qe.d_i , \u_pwm.u_reg.u_cfg0_qe.d_i  };
  assign \u_pwm.u_reg.cfg_qe  = \u_pwm.u_reg.u_cfg0_qe.q_o ;
  assign \u_pwm.u_reg.cfg_qs  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.cfg_we  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.clk_i  = clk_i;
  assign \u_pwm.u_reg.devmode_i  = 1'h1;
  assign \u_pwm.u_reg.duty_cycle_busy  = \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q ;
  assign \u_pwm.u_reg.duty_cycle_flds_we  = { \u_pwm.u_reg.u_duty_cycle0_qe.d_i , \u_pwm.u_reg.u_duty_cycle0_qe.d_i  };
  assign \u_pwm.u_reg.duty_cycle_qe  = \u_pwm.u_reg.u_duty_cycle0_qe.q_o ;
  assign \u_pwm.u_reg.duty_cycle_qs  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  assign \u_pwm.u_reg.duty_cycle_we  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.pwm_en_busy  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  assign \u_pwm.u_reg.pwm_en_flds_we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.pwm_en_qe  = \u_pwm.u_reg.u_pwm_en0_qe.q_o ;
  assign \u_pwm.u_reg.pwm_en_qs  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.pwm_en_we  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.pwm_param_busy  = \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.pwm_param_flds_we  = { \u_pwm.u_reg.u_pwm_param0_qe.d_i , \u_pwm.u_reg.u_pwm_param0_qe.d_i , \u_pwm.u_reg.u_pwm_param0_qe.d_i  };
  assign \u_pwm.u_reg.pwm_param_qe  = \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  assign \u_pwm.u_reg.pwm_param_qs  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.pwm_param_we  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en.q , \u_pwm.u_reg.u_pwm_en0_qe.q_o , \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q , \u_pwm.u_reg.u_pwm_param0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_duty_cycle_a_0.q , \u_pwm.u_reg.u_duty_cycle0_qe.q_o , \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o , \u_pwm.u_reg.u_blink_param_x_0.q , \u_pwm.u_reg.u_blink_param0_qe.q_o  };
  assign \u_pwm.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_pwm.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_pwm.u_reg.reg_busy  = \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \u_pwm.u_reg.reg_busy_sel  = \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \u_pwm.u_reg.reg_rdata  = \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \u_pwm.u_reg.reg_rdata_next  = \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \u_pwm.u_reg.regwen_qs  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.regwen_wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.regwen_we  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.shadow_busy  = 1'h0;
  assign \u_pwm.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_o_pre  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_reg_d2h  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_blink_param0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_qs  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_qs_i  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_regwen_o  = \u_pwm.u_reg._blink_param_regwen ;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_req_from_src  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_wd_o  = \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_blink_param_cdc.dst_we_o  = \u_pwm.u_reg._blink_param_we ;
  assign \u_pwm.u_reg.u_blink_param_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_busy_o  = \u_pwm.u_reg.u_blink_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_qs_o  = \u_pwm.u_reg.u_blink_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_req  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_blink_param_cdc.src_we_i  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_blink_param_y_0.q , \u_pwm.u_reg.u_blink_param_x_0.q  };
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_blink_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_blink_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_blink_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_x_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_x_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_x_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_x_0.qe  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_x_0.qs  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_reg.u_blink_param_x_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_x_0.wd  = \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_x_0.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_data  = \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_blink_param_x_0.q ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_blink_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_blink_param_x_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_blink_param_y_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_y_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_y_0.qe  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.qs  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_reg.u_blink_param_y_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_blink_param_y_0.wd  = \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_y_0.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_data  = \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_blink_param_y_0.q ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_blink_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_blink_param_y_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_blink_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_qs  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.dst_qs_i  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.dst_regwen_o  = \u_pwm.u_reg._cfg_regwen ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_req_from_src  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_wd_o  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_we_o  = \u_pwm.u_reg._cfg_we ;
  assign \u_pwm.u_reg.u_cfg_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.src_busy_o  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_qs_o  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_req  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_we_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_clk_div.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_clk_div.d  = 27'h0000000;
  assign \u_pwm.u_reg.u_cfg_clk_div.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_clk_div.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.qs  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_clk_div.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.d  = 27'h0000000;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cntr_en.d  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.qs  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_dc_resn.d  = 4'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.qs  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.d  = 4'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.qe  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.qs  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wd  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_a_0.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_data  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_duty_cycle_a_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_duty_cycle_a_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.qe  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.qs  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wd  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_b_0.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_data  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_duty_cycle_b_0.q ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_duty_cycle_b_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_duty_cycle0_qe.d_i ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_qs  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_qs_i  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_regwen_o  = \u_pwm.u_reg._duty_cycle_regwen ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_req_from_src  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_wd_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.dst_we_o  = \u_pwm.u_reg._duty_cycle_we ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_qs_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_q ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_req  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.src_we_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_duty_cycle_b_0.q , \u_pwm.u_reg.u_duty_cycle_a_0.q  };
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_ack ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_duty_cycle_cdc.src_ack ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_duty_cycle_cdc.dst_req ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_duty_cycle_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.qe  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en.qs  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_ds_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_qs  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_qs_i  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_regwen_o  = \u_pwm.u_reg._pwm_en_regwen ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_req_from_src  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_wd_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_we_o  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_busy_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_qs_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_req  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_we_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_ds_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_i  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_o  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.unused_wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_pwm_param0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.qe  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.qs  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_blink_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31];
  assign \u_pwm.u_reg.u_pwm_param_blink_en_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_qs  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_regwen_o  = \u_pwm.u_reg._pwm_param_regwen ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_req_from_src  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_wd_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_we_o  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_busy_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_qs_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_regwen_i  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_req  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_we_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_pwm_param_blink_en_0.q , \u_pwm.u_reg.u_pwm_param_htbt_en_0.q , 14'h0000, \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.qe  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.qs  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_htbt_en_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [30];
  assign \u_pwm.u_reg.u_pwm_param_htbt_en_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.qe  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.qs  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.we  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  assign \u_pwm.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_pwm.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_pwm.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_reg_if.d_ack  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \u_pwm.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_pwm.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.error  = \u_pwm.u_reg.u_reg_if.error_q ;
  assign \u_pwm.u_reg.u_reg_if.error_i  = \u_pwm.u_reg.reg_error ;
  assign \u_pwm.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.rd_req  = \u_pwm.u_reg.reg_re ;
  assign \u_pwm.u_reg.u_reg_if.rdata  = \u_pwm.u_reg.u_reg_if.rdata_q ;
  assign \u_pwm.u_reg.u_reg_if.re_o  = \u_pwm.u_reg.reg_re ;
  assign \u_pwm.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_reg_if.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.tl_o_pre  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_pwm.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.wdata_o  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_reg_if.we_o  = \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_reg_if.wr_req  = \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_regwen.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_regwen.d  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.de  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.qe  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_regwen.qs  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_regwen.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_regwen.wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_regwen.we  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_regwen.wr_en  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.q  = \u_pwm.u_reg.u_regwen.q ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_regwen.wr_data ;
  assign \u_pwm.u_reg.u_regwen.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_regwen.wr_en_data_arb.we ;
  assign \u_pwm.u_reg.u_rsp_intg_gen.tl_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_rsp_intg_gen.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.unused__pwm_en_wdata  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_rv_timer.active  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_core.active  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.gen_harts[0].u_core.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_core.intr  = \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.gen_harts[0].u_core.mtime  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  };
  assign \u_rv_timer.gen_harts[0].u_core.mtimecmp  = { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.gen_harts[0].u_core.prescaler  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.gen_harts[0].u_core.rst_ni  = rst_ni;
  assign \u_rv_timer.gen_harts[0].u_core.step  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.gen_harts[0].u_core.tick  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_d_o  = \u_rv_timer.intr_timer_state_d ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_de_o  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_enable_q_i  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_state_q_i  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_q_i  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.gen_harts[0].u_intr_hw.rst_ni  = rst_ni;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.status  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.hw2reg  = { \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d , \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  };
  assign \u_rv_timer.intr_timer_en  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.intr_timer_set  = \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.intr_timer_state_de  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  assign \u_rv_timer.intr_timer_state_q  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.intr_timer_test_q  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.intr_timer_test_qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.mtime  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  };
  assign \u_rv_timer.mtime_d  = \u_rv_timer.gen_harts[0].u_core.mtime_d ;
  assign \u_rv_timer.mtimecmp  = { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.prescaler  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.reg2hw  = { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0], \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i , \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_cfg0_prescale.q , \u_rv_timer.u_reg.u_timer_v_lower0.q , \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q , \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o , \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  };
  assign \u_rv_timer.rst_ni  = rst_ni;
  assign \u_rv_timer.step  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.tick  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.cfg0_prescale_qs  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.cfg0_prescale_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.cfg0_step_qs  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.cfg0_step_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.compare_lower0_0_flds_we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_lower0_0_qe  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.compare_lower0_0_qs  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.compare_lower0_0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.compare_lower0_0_we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_upper0_0_flds_we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_upper0_0_qe  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.compare_upper0_0_qs  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.compare_upper0_0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.compare_upper0_0_we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.ctrl_qs  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.ctrl_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.devmode_i  = 1'h1;
  assign \u_rv_timer.u_reg.hw2reg  = { \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d , \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  };
  assign \u_rv_timer.u_reg.intr_enable0_qs  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.intr_enable0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_state0_qs  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.intr_state0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_state0_we  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.intr_test0_flds_we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.intr_test0_qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.intr_test0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_test0_we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.reg2hw  = { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0], \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i , \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_cfg0_prescale.q , \u_rv_timer.u_reg.u_timer_v_lower0.q , \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q , \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o , \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  };
  assign \u_rv_timer.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.reg_busy  = 1'h0;
  assign \u_rv_timer.u_reg.reg_rdata  = \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \u_rv_timer.u_reg.reg_rdata_next  = \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \u_rv_timer.u_reg.reg_wdata  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.shadow_busy  = 1'h0;
  assign \u_rv_timer.u_reg.timer_v_lower0_qs  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.timer_v_lower0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.timer_v_lower0_we  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.timer_v_upper0_qs  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.timer_v_upper0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.timer_v_upper0_we  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_o_pre  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_reg_d2h  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_cfg0_prescale.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.d  = 12'h000;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.qe  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.qs  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.d  = 12'h000;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_cfg0_step.d  = 8'h00;
  assign \u_rv_timer.u_reg.u_cfg0_step.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_step.qe  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.qs  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_cfg0_step.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.d  = 8'h00;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.qe  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.qs  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.qe  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.qs  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_ctrl.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_ctrl.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.qe  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.qs  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_ctrl.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.we  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.we  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_intr_enable0.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.qe  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.qs  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_intr_enable0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.we  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.we  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_state0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_intr_state0.d  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d ;
  assign \u_rv_timer.u_reg.u_intr_state0.de  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_intr_state0.qs  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.u_intr_state0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_intr_state0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_state0.we  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en  = \u_rv_timer.u_reg.u_intr_state0.qe ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_intr_state0.qe ;
  assign \u_rv_timer.u_reg.u_intr_test0.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.ds  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.q  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_test0.qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.u_intr_test0.qre  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.qs  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.re  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_test0.we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_rv_timer.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_reg_if.d_ack  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \u_rv_timer.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_rv_timer.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.error  = \u_rv_timer.u_reg.u_reg_if.error_q ;
  assign \u_rv_timer.u_reg.u_reg_if.error_i  = \u_rv_timer.u_reg.reg_error ;
  assign \u_rv_timer.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.rd_req  = \u_rv_timer.u_reg.reg_re ;
  assign \u_rv_timer.u_reg.u_reg_if.rdata  = \u_rv_timer.u_reg.u_reg_if.rdata_q ;
  assign \u_rv_timer.u_reg.u_reg_if.re_o  = \u_rv_timer.u_reg.reg_re ;
  assign \u_rv_timer.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_reg_if.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.tl_o_pre  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [108], \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [104:0] } = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.wdata_o  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_reg_if.we_o  = \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_reg_if.wr_req  = \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_rsp_intg_gen.tl_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_rsp_intg_gen.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_timer_v_lower0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_lower0.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.qs  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.we  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en  = \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.qs  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.we  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en  = \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  assign \u_uart.addr_o  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \u_uart.be_o  = \u_uart.u_bridge.be_q ;
  assign \u_uart.cio_rx_i  = cio_rx_i;
  assign \u_uart.cio_tx_en_o  = 1'h1;
  assign \u_uart.cio_tx_o  = cio_tx_o;
  assign \u_uart.clk_i  = clk_i;
  assign \u_uart.err_i  = \xbar.u_s1n_6.tl_t_p [1];
  assign \u_uart.gnt_i  = \uart_host_adapter.gnt_o ;
  assign \u_uart.hw2reg  = { \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 4'h0, \u_uart.u_uart_core.tx_fifo_depth , 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign { \u_uart.reg2hw [56:33], \u_uart.reg2hw [31:0] } = { \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 2'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  };
  assign \u_uart.req_o  = \u_uart.u_bridge.req_q ;
  assign \u_uart.rst_ni  = rst_ni;
  assign \u_uart.rx_data  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.rx_pop  = \u_uart.u_uart_core.rx_pop_i ;
  assign \u_uart.rx_valid  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.tx_data  = \u_uart.u_uart_core.tx_data_i ;
  assign \u_uart.tx_ready  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.tx_valid  = \u_uart.u_uart_core.tx_valid_i ;
  assign \u_uart.u_bridge.addr_o  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \u_uart.u_bridge.be_o  = \u_uart.u_bridge.be_q ;
  assign \u_uart.u_bridge.clk_i  = clk_i;
  assign \u_uart.u_bridge.err_i  = \xbar.u_s1n_6.tl_t_p [1];
  assign \u_uart.u_bridge.gnt_i  = \uart_host_adapter.gnt_o ;
  assign \u_uart.u_bridge.rdata_i  = \u_uart.rdata_i ;
  assign \u_uart.u_bridge.req_o  = \u_uart.u_bridge.req_q ;
  assign \u_uart.u_bridge.rst_ni  = rst_ni;
  assign \u_uart.u_bridge.rx_pop_o  = \u_uart.u_uart_core.rx_pop_i ;
  assign \u_uart.u_bridge.tx_data_o  = \u_uart.u_uart_core.tx_data_i ;
  assign \u_uart.u_bridge.tx_ready_i  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_bridge.tx_valid_o  = \u_uart.u_uart_core.tx_valid_i ;
  assign \u_uart.u_bridge.valid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \u_uart.u_bridge.wdata_o  = \u_uart.u_bridge.wdata_q ;
  assign \u_uart.u_bridge.we_o  = \u_uart.u_bridge.we_q ;
  assign \u_uart.u_reg.addr_hit  = \u_gpio.u_reg.addr_hit [5:0];
  assign \u_uart.u_reg.clk_i  = clk_i;
  assign \u_uart.u_reg.ctrl_llpbk_qs  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.ctrl_llpbk_wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.ctrl_nco_qs  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.ctrl_nco_wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.ctrl_nf_qs  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.ctrl_nf_wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.ctrl_parity_en_qs  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.ctrl_parity_en_wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.ctrl_parity_odd_qs  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.ctrl_parity_odd_wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.ctrl_rx_qs  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.ctrl_rx_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.ctrl_slpbk_qs  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.ctrl_slpbk_wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.ctrl_tx_qs  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.ctrl_tx_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.devmode_i  = 1'h1;
  assign \u_uart.u_reg.fifo_ctrl_flds_we  = { \u_uart.u_reg.u_fifo_ctrl0_qe.d_i , \u_uart.u_reg.u_fifo_ctrl0_qe.d_i  };
  assign \u_uart.u_reg.fifo_ctrl_qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_reg.fifo_ctrl_rxrst_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.fifo_ctrl_txrst_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.fifo_ctrl_we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.fifo_status_rxlvl_qs  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.fifo_status_txlvl_qs  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.hw2reg  = { \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 4'h0, \u_uart.u_uart_core.tx_fifo_depth , 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.rdata_qs  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.reg2hw  = { \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  };
  assign \u_uart.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_uart.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_uart.u_reg.reg_busy  = 1'h0;
  assign \u_uart.u_reg.reg_rdata  = \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_reg.reg_rdata_next  = \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_reg.rst_ni  = rst_ni;
  assign \u_uart.u_reg.shadow_busy  = 1'h0;
  assign \u_uart.u_reg.status_re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.status_rxidle_qs  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_o_pre  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_reg_d2h  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_ctrl_llpbk.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_llpbk.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.qs  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_llpbk.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_nco.d  = 16'h0000;
  assign \u_uart.u_reg.u_ctrl_nco.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nco.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.qs  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_nco.wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_data  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.d  = 16'h0000;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_nf.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.qs  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_nf.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_parity_en.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.qs  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_parity_en.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_parity_odd.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.qs  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_rx.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.qs  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_rx.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_slpbk.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.qs  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_slpbk.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_tx.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.qs  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_tx.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.qs  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.qs  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.d  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.ds  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.q  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.qe  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.qs  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.wd  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.we  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_txlvl.d  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.ds  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.q  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_txlvl.qe  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_txlvl.qs  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.wd  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_txlvl.we  = 1'h0;
  assign \u_uart.u_reg.u_rdata.d  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.ds  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.q  = 8'h00;
  assign \u_uart.u_reg.u_rdata.qe  = 1'h0;
  assign \u_uart.u_reg.u_rdata.qre  = \u_uart.u_reg.rdata_re ;
  assign \u_uart.u_reg.u_rdata.qs  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.re  = \u_uart.u_reg.rdata_re ;
  assign \u_uart.u_reg.u_rdata.wd  = 8'h00;
  assign \u_uart.u_reg.u_rdata.we  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_uart.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_uart.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_uart.u_reg.u_reg_if.d_ack  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \u_uart.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_uart.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.error  = \u_uart.u_reg.u_reg_if.error_q ;
  assign \u_uart.u_reg.u_reg_if.error_i  = \u_uart.u_reg.reg_error ;
  assign \u_uart.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.rd_req  = \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.u_reg_if.rdata  = \u_uart.u_reg.u_reg_if.rdata_q ;
  assign \u_uart.u_reg.u_reg_if.re_o  = \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_reg_if.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.tl_o_pre  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_uart.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_uart.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_uart.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_uart.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.wdata_o  = \u_uart.u_reg.reg_wdata ;
  assign \u_uart.u_reg.u_reg_if.we_o  = \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_reg_if.wr_req  = \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_rsp_intg_gen.tl_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_rsp_intg_gen.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_status_rxempty.d  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.ds  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxempty.qs  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxempty.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.we  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.d  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.ds  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxfull.qs  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxfull.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.we  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.d  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.ds  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxidle.qs  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxidle.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.d  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.ds  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txempty.qs  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txempty.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.d  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.ds  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txfull.qs  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txfull.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.d  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.ds  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txidle.qs  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txidle.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.we  = 1'h0;
  assign \u_uart.u_reg.u_wdata.clk_i  = clk_i;
  assign \u_uart.u_reg.u_wdata.d  = 8'h00;
  assign \u_uart.u_reg.u_wdata.de  = 1'h0;
  assign \u_uart.u_reg.u_wdata.qe  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.qs  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_wdata.wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_data  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.d  = 8'h00;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.q  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata0_qe.clk_i  = clk_i;
  assign \u_uart.u_reg.u_wdata0_qe.rst_ni  = rst_ni;
  assign \u_uart.u_reg.wdata_flds_we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.wdata_qe  = \u_uart.u_reg.u_wdata0_qe.q_o ;
  assign \u_uart.u_reg.wdata_wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.wdata_we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_uart_core.clk_i  = clk_i;
  assign \u_uart.u_uart_core.hw2reg  = { \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 4'h0, \u_uart.u_uart_core.tx_fifo_depth , 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_uart_core.line_loopback  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_uart_core.reg2hw  = { \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  };
  assign \u_uart.u_uart_core.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.rx  = cio_rx_i;
  assign \u_uart.u_uart_core.rx_data_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.rx_enable  = 1'h1;
  assign \u_uart.u_uart_core.rx_fifo_data  = \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  assign \u_uart.u_uart_core.rx_fifo_pop  = \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  assign \u_uart.u_uart_core.rx_fifo_rvalid  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.rx_fifo_wvalid  = \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i ;
  assign \u_uart.u_uart_core.rx_in  = \u_uart.u_uart_core.uart_rx.rx ;
  assign \u_uart.u_uart_core.rx_sync  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \u_uart.u_uart_core.rx_tick_baud  = \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \u_uart.u_uart_core.rx_uart_idle  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_uart_core.rx_valid  = \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \u_uart.u_uart_core.rx_valid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.rxnf_enable  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_uart_core.sync_rx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.d_i  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.d_o  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.intq  = \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  assign \u_uart.u_uart_core.sync_rx.q_o  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \u_uart.u_uart_core.sync_rx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.d_i  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.d_i  = \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.unused_sig  = 1'h1;
  assign \u_uart.u_uart_core.sys_loopback  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_uart_core.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.tx  = cio_tx_o;
  assign \u_uart.u_uart_core.tx_enable  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.tx_fifo_rready  = \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \u_uart.u_uart_core.tx_fifo_wdata  = \u_uart.u_uart_core.u_uart_txfifo.wdata_i ;
  assign \u_uart.u_uart_core.tx_fifo_wvalid  = \u_uart.u_uart_core.u_uart_txfifo.wvalid_i ;
  assign \u_uart.u_uart_core.tx_out  = \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \u_uart.u_uart_core.tx_ready_o  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_rxfifo.depth_o  = \u_uart.u_uart_core.rx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_empty  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_wptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_wptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage_rdata  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clr_i  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.depth_o  = \u_uart.u_uart_core.rx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.empty_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.full_o  = \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3:0] = 4'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [3:0] = 4'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rdata_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rvalid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wready_o  = \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_txfifo.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_txfifo.depth_o  = \u_uart.u_uart_core.tx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_txfifo.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_empty  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_rptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_rptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage_rdata  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clr_i  = \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.depth_o  = \u_uart.u_uart_core.tx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.empty_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.full_o  = \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [2:0] = 3'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [2:0] = 3'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.rdata_o  = \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.u_uart_core.u_uart_txfifo.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_txfifo.rvalid_o  = \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wready_o  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.uart_fifo_rxrst  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  assign \u_uart.u_uart_core.uart_fifo_txrst  = \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  assign \u_uart.u_uart_core.uart_rdata  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.uart_rx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.uart_rx.frame_err  = \u_uart.u_uart_core.event_rx_frame_err ;
  assign \u_uart.u_uart_core.uart_rx.idle  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_uart_core.uart_rx.parity_enable  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_uart_core.uart_rx.parity_odd  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_uart_core.uart_rx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.uart_rx.rx_data  = \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  assign \u_uart.u_uart_core.uart_rx.rx_enable  = 1'h1;
  assign \u_uart.u_uart_core.uart_rx.rx_parity_err  = \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_uart_core.uart_rx.rx_valid  = \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud  = \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.uart_tx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.uart_tx.idle  = \u_uart.u_uart_core.tx_uart_idle ;
  assign \u_uart.u_uart_core.uart_tx.parity_enable  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_uart_core.uart_tx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.uart_tx.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.uart_tx.tx  = \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \u_uart.u_uart_core.uart_tx.tx_enable  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.uart_tx.wr  = \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \u_uart.u_uart_core.uart_tx.wr_data  = \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.valid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \u_uart.wdata_o  = \u_uart.u_bridge.wdata_q ;
  assign \u_uart.we_o  = \u_uart.u_bridge.we_q ;
  assign uart_addr = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign uart_be = \u_uart.u_bridge.be_q ;
  assign uart_err = \xbar.u_s1n_6.tl_t_p [1];
  assign uart_gnt = \uart_host_adapter.gnt_o ;
  assign \uart_host_adapter.addr_i  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \uart_host_adapter.be_i  = \u_uart.u_bridge.be_q ;
  assign \uart_host_adapter.clk_i  = clk_i;
  assign \uart_host_adapter.err_o  = \xbar.u_s1n_6.tl_t_p [1];
  assign \uart_host_adapter.instr_type_i  = 4'h9;
  assign \uart_host_adapter.intg_err  = 1'h0;
  assign \uart_host_adapter.intg_err_o  = 1'h0;
  assign \uart_host_adapter.intg_err_q  = 1'h0;
  assign \uart_host_adapter.rdata_intg_o  = \xbar.u_s1n_6.tl_t_p [8:2];
  assign \uart_host_adapter.rdata_o  = \u_uart.rdata_i ;
  assign \uart_host_adapter.req_i  = \u_uart.u_bridge.req_q ;
  assign \uart_host_adapter.rst_ni  = rst_ni;
  assign \uart_host_adapter.tl_be  = \u_rv_timer.u_reg.reg_be ;
  assign \uart_host_adapter.tl_i  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \uart_host_adapter.tl_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.tl_out  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.tl_source  = { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  assign \uart_host_adapter.u_cmd_intg_gen.cmd_intg  = 7'h00;
  assign \uart_host_adapter.u_cmd_intg_gen.data_final  = \u_uart.u_bridge.wdata_q ;
  assign \uart_host_adapter.u_cmd_intg_gen.data_intg  = 7'h00;
  assign \uart_host_adapter.u_cmd_intg_gen.tl_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.u_cmd_intg_gen.tl_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.unused_addr_bottom_bits  = 1'h0;
  assign \uart_host_adapter.valid_o  = \xbar.u_s1n_6.tl_t_p [65];
  assign \uart_host_adapter.wdata_i  = \u_uart.u_bridge.wdata_q ;
  assign \uart_host_adapter.wdata_intg_i  = 7'h00;
  assign \uart_host_adapter.we_i  = \u_uart.u_bridge.we_q ;
  assign uart_rdata = \u_uart.rdata_i ;
  assign uart_req = \u_uart.u_bridge.req_q ;
  assign uart_rvalid = \xbar.u_s1n_6.tl_t_p [65];
  assign uart_wdata = \u_uart.u_bridge.wdata_q ;
  assign uart_we = \u_uart.u_bridge.we_q ;
  assign \xbar.clk_i  = clk_i;
  assign \xbar.dev_sel_s1n_6  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.rst_ni  = rst_ni;
  assign \xbar.scanmode_i  = 4'h9;
  assign \xbar.tl_gpio_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_gpio_o  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.tl_pwm_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_pwm_o  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.tl_rv_timer_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_rv_timer_o  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.tl_s1n_6_ds_d2h  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_s1n_6_ds_h2d  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.tl_s1n_6_us_d2h  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.tl_s1n_6_us_h2d  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.tl_uart_host_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.tl_uart_host_o  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.tl_uart_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_uart_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.accept_t_rsp  = \xbar.u_s1n_6.tl_t_p [65];
  assign { \xbar.u_s1n_6.blanked_auser [22:14], \xbar.u_s1n_6.blanked_auser [6:0] } = 16'h04d5;
  assign \xbar.u_s1n_6.clk_i  = clk_i;
  assign \xbar.u_s1n_6.dev_select_i  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.full_o  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 23'h024000, \xbar.u_s1n_6.dev_select_t  };
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rready_i  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 23'h024000, \xbar.u_s1n_6.dev_select_t  };
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wready_o  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wvalid_i  = \u_uart.u_bridge.req_q ;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rdata_o  = { \xbar.u_s1n_6.tl_t_p [64:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], 1'h0 };
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rvalid_o  = \xbar.u_s1n_6.tl_t_p [65];
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wdata_i  = { \xbar.u_s1n_6.tl_t_p [64:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], 1'h0 };
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wvalid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \xbar.u_s1n_6.fifo_h.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.spare_req_i  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.spare_req_o  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.tl_d_i  = { \xbar.u_s1n_6.tl_t_p [65:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.fifo_h.tl_d_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.fifo_h.tl_h_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.fifo_h.tl_h_o  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [15:0] } = { \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 15'h0000, \u_uart.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rvalid_o  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wdata_i  = { \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wvalid_i  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [15:0] } = { \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 15'h0000, \u_pwm.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rvalid_o  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wdata_i  = { \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wvalid_i  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [15:0] } = { \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 15'h0000, \u_gpio.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rvalid_o  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wdata_i  = { \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wvalid_i  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [15:0] } = { \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 15'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rvalid_o  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wvalid_i  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [107:0] = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign { \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [65], \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [61:48], \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [15:0] } = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 16'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [65:1] = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001 };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_i  = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_o  = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.tl_d_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.tl_h_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.tl_h_o  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.tl_t_i  = { \xbar.u_s1n_6.tl_t_p [65:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.tl_t_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.tl_u_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o , \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.tl_u_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108], \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.unused_scanmode  = 1'h0;
  assign \$338y  = \$auto$bmuxmap.cc:84:execute$2161 ;
  assign \$499y  = \$auto$bmuxmap.cc:84:execute$2180 ;
endmodule
