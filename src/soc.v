/* Generated by Yosys 0.57+125 (git sha1 5e550ddc3, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module soc(clk_i, rst_ni, cio_rx_i, cio_tx_o, cio_tx_en_o, cio_pwm_o, cio_pwm_en_o, cio_gpio_i, cio_gpio_o, cio_gpio_en_o);
  input clk_i;
  wire clk_i;
  input rst_ni;
  wire rst_ni;
  input cio_rx_i;
  wire cio_rx_i;
  output cio_tx_o;
  wire cio_tx_o;
  output cio_tx_en_o;
  wire cio_tx_en_o;
  output cio_pwm_o;
  wire cio_pwm_o;
  output cio_pwm_en_o;
  wire cio_pwm_en_o;
  input [1:0] cio_gpio_i;
  wire [1:0] cio_gpio_i;
  output [1:0] cio_gpio_o;
  wire [1:0] cio_gpio_o;
  output [1:0] cio_gpio_en_o;
  wire [1:0] cio_gpio_en_o;
  wire \$1005y ;
  wire \$1022y ;
  wire \$1101y ;
  wire \$1102y ;
  wire \$1103y ;
  wire [3:0] \$1106y ;
  wire \$1108y ;
  wire \$1109y ;
  wire \$1113y ;
  wire \$1114y ;
  wire \$1118y ;
  wire \$1119y ;
  wire \$1121y ;
  wire \$1122y ;
  wire \$1124y ;
  wire \$1127y ;
  wire [26:0] \$1140y ;
  wire [26:0] \$1141y ;
  wire [31:0] \$1160y ;
  wire [15:0] \$1162y ;
  wire \$1175y ;
  wire \$1176y ;
  wire \$1178y ;
  wire \$1179y ;
  wire \$1202y ;
  wire \$1203y ;
  wire [1:0] \$1204y ;
  wire [1:0] \$1205y ;
  wire \$1226y ;
  wire \$1227y ;
  wire [1:0] \$1228y ;
  wire [1:0] \$1229y ;
  wire [1:0] \$1241y ;
  wire [1:0] \$1249y ;
  wire [1:0] \$1250y ;
  wire [1:0] \$1252y ;
  wire [1:0] \$1253y ;
  wire [1:0] \$1258y ;
  wire [1:0] \$1259y ;
  wire \$1266y ;
  wire [2:0] \$1282y ;
  wire \$1290y ;
  wire [31:0] \$1291y ;
  wire [1:0] \$1375y ;
  wire [1:0] \$1376y ;
  wire [1:0] \$1377y ;
  wire \$1455y ;
  wire \$1456y ;
  wire \$1457y ;
  wire \$1463y ;
  wire \$1467y ;
  wire \$1468y ;
  wire \$1472y ;
  wire \$1473y ;
  wire \$1477y ;
  wire \$1478y ;
  wire \$1482y ;
  wire \$1483y ;
  wire \$1486y ;
  wire \$1487y ;
  wire \$1488y ;
  wire \$1492y ;
  wire \$1493y ;
  wire \$1495y ;
  wire \$1496y ;
  wire \$1498y ;
  wire \$1501y ;
  wire \$1507y ;
  wire \$1510y ;
  wire \$1513y ;
  wire \$1522y ;
  wire \$1524y ;
  wire \$1536y ;
  wire [11:0] \$1537y ;
  wire \$1540y ;
  wire \$1543y ;
  wire [2:0] \$1566y ;
  wire \$1574y ;
  wire [31:0] \$1575y ;
  wire \$1675y ;
  wire \$1676y ;
  wire \$1677y ;
  wire \$1751y ;
  wire \$1752y ;
  wire \$1753y ;
  wire \$1759y ;
  wire \$1763y ;
  wire \$1764y ;
  wire \$1768y ;
  wire \$1769y ;
  wire \$1773y ;
  wire \$1774y ;
  wire \$1777y ;
  wire \$1778y ;
  wire \$1779y ;
  wire \$1783y ;
  wire \$1784y ;
  wire \$1788y ;
  wire \$1789y ;
  wire \$1793y ;
  wire \$1794y ;
  wire \$1798y ;
  wire \$1799y ;
  wire \$1801y ;
  wire \$1802y ;
  wire \$1804y ;
  wire \$1807y ;
  wire \$1810y ;
  wire \$1813y ;
  wire \$1816y ;
  wire \$1819y ;
  wire \$1822y ;
  wire \$1825y ;
  wire \$216y ;
  wire \$217y ;
  wire \$218y ;
  wire [2:0] \$21y ;
  wire \$224y ;
  wire \$229y ;
  wire \$234y ;
  wire \$239y ;
  wire \$244y ;
  wire \$248y ;
  wire \$249y ;
  wire \$251y ;
  wire \$252y ;
  wire \$257y ;
  wire \$260y ;
  wire \$263y ;
  wire [16:0] \$285y ;
  wire \$287y ;
  wire \$294y ;
  wire \$296y ;
  wire \$299y ;
  wire \$29y ;
  wire \$302y ;
  wire \$304y ;
  wire [31:0] \$30y ;
  wire \$311y ;
  wire [3:0] \$312y ;
  wire [3:0] \$313y ;
  wire [3:0] \$314y ;
  wire [3:0] \$315y ;
  wire [3:0] \$320y ;
  wire [3:0] \$327y ;
  wire \$331y ;
  wire \$334y ;
  wire \$337y ;
  wire [7:0] \$338y ;
  wire \$341y ;
  wire \$342y ;
  wire \$343y ;
  wire [7:0] \$344y ;
  wire [63:0] \$345y ;
  wire [63:0] \$347y ;
  wire [4:0] \$353y ;
  wire \$361y ;
  wire [3:0] \$362y ;
  wire \$363y ;
  wire \$364y ;
  wire [3:0] \$365y ;
  wire \$375y ;
  wire \$377y ;
  wire \$394y ;
  wire \$395y ;
  wire \$396y ;
  wire \$397y ;
  wire \$400y ;
  wire [4:0] \$407y ;
  wire \$410y ;
  wire \$411y ;
  wire \$413y ;
  wire \$414y ;
  wire \$416y ;
  wire \$417y ;
  wire [3:0] \$418y ;
  wire \$419y ;
  wire \$440y ;
  wire \$442y ;
  wire \$444y ;
  wire \$445y ;
  wire \$447y ;
  wire \$448y ;
  wire \$449y ;
  wire \$455y ;
  wire \$457y ;
  wire \$460y ;
  wire \$463y ;
  wire \$465y ;
  wire \$472y ;
  wire [4:0] \$473y ;
  wire [4:0] \$474y ;
  wire [4:0] \$475y ;
  wire [4:0] \$476y ;
  wire [4:0] \$481y ;
  wire [4:0] \$488y ;
  wire \$492y ;
  wire \$495y ;
  wire \$498y ;
  wire [7:0] \$499y ;
  wire \$502y ;
  wire \$503y ;
  wire \$504y ;
  wire [7:0] \$505y ;
  wire [127:0] \$506y ;
  wire [127:0] \$508y ;
  wire \$511y ;
  wire \$517y ;
  wire \$518y ;
  wire \$522y ;
  wire [1:0] \$523y ;
  wire \$530y ;
  wire \$531y ;
  wire \$564y ;
  wire \$590y ;
  wire \$592y ;
  wire [3:0] \$593y ;
  wire \$595y ;
  wire \$596y ;
  wire \$616y ;
  wire \$622y ;
  wire [2:0] \$623y ;
  wire \$634y ;
  wire \$636y ;
  wire \$638y ;
  wire \$640y ;
  wire \$645y ;
  wire [8:0] \$653y ;
  wire [8:0] \$655y ;
  wire \$659y ;
  wire \$660y ;
  wire \$680y ;
  wire \$681y ;
  wire \$686y ;
  wire \$692y ;
  wire \$698y ;
  wire \$716y ;
  wire \$718y ;
  wire \$720y ;
  wire \$722y ;
  wire \$724y ;
  wire \$726y ;
  wire \$728y ;
  wire \$730y ;
  wire \$732y ;
  wire \$733y ;
  wire \$741y ;
  wire \$753y ;
  wire \$756y ;
  wire [2:0] \$780y ;
  wire \$788y ;
  wire [31:0] \$789y ;
  wire \$793y ;
  wire \$794y ;
  wire \$895y ;
  wire \$912y ;
  wire \$950y ;
  wire \$967y ;
  wire [31:0] \$auto$bmuxmap.cc:84:execute$1962 ;
  wire [15:0] \$auto$bmuxmap.cc:84:execute$1967 ;
  wire [7:0] \$auto$bmuxmap.cc:84:execute$1970 ;
  wire [63:0] \$auto$bmuxmap.cc:84:execute$1972 ;
  wire [31:0] \$auto$bmuxmap.cc:84:execute$1981 ;
  wire [15:0] \$auto$bmuxmap.cc:84:execute$1986 ;
  wire [7:0] \$auto$bmuxmap.cc:84:execute$1989 ;
  wire \$auto$demuxmap.cc:63:execute$1991 ;
  wire \$auto$demuxmap.cc:63:execute$1994 ;
  wire \$auto$demuxmap.cc:63:execute$1997 ;
  wire \$auto$demuxmap.cc:63:execute$2000 ;
  wire \$auto$demuxmap.cc:63:execute$2003 ;
  wire \$auto$demuxmap.cc:63:execute$2006 ;
  wire \$auto$demuxmap.cc:63:execute$2009 ;
  wire \$auto$demuxmap.cc:63:execute$2012 ;
  wire \$auto$demuxmap.cc:63:execute$2015 ;
  wire \$auto$demuxmap.cc:63:execute$2018 ;
  wire \$auto$demuxmap.cc:63:execute$2021 ;
  wire \$auto$demuxmap.cc:63:execute$2024 ;
  wire \$auto$demuxmap.cc:63:execute$2027 ;
  wire \$auto$demuxmap.cc:63:execute$2030 ;
  wire \$auto$demuxmap.cc:63:execute$2033 ;
  wire \$auto$demuxmap.cc:63:execute$2036 ;
  wire \$auto$demuxmap.cc:63:execute$2039 ;
  wire \$auto$demuxmap.cc:63:execute$2042 ;
  wire \$auto$demuxmap.cc:63:execute$2045 ;
  wire \$auto$demuxmap.cc:63:execute$2048 ;
  wire \$auto$demuxmap.cc:63:execute$2051 ;
  wire \$auto$demuxmap.cc:63:execute$2054 ;
  wire \$auto$demuxmap.cc:63:execute$2057 ;
  wire \$auto$demuxmap.cc:63:execute$2060 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1658 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1660 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1687 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1689 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1694 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1701 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1703 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1714 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1717 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1720 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1731 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1734 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1769 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1771 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1773 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1775 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1777 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1779 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1794 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1799 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1801 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1810 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1812 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1814 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1816 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1822 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1829 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1846 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1848 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1850 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1900 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1906 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1909 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1915 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1922 ;
  wire \$auto$opt_dff.cc:247:make_patterns_logic$1928 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1662 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1667 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1691 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1705 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1781 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1796 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1803 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1824 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1831 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1834 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1837 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1852 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1855 ;
  wire \$auto$opt_dff.cc:272:make_patterns_logic$1876 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1626 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1628 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1630 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1632 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1634 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1642 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1644 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1646 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1648 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1652 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$1656 ;
  wire [63:0] \$auto$rtlil.cc:3097:Not$1949 ;
  wire [127:0] \$auto$rtlil.cc:3097:Not$1956 ;
  wire [63:0] \$auto$rtlil.cc:3144:And$1951 ;
  wire [63:0] \$auto$rtlil.cc:3144:And$1953 ;
  wire [127:0] \$auto$rtlil.cc:3144:And$1958 ;
  wire [127:0] \$auto$rtlil.cc:3144:And$1960 ;
  wire \$procmux$1000_CMP ;
  wire [4:0] \$procmux$1005_Y ;
  wire [4:0] \$procmux$1015_Y ;
  wire [4:0] \$procmux$1022_Y ;
  wire [4:0] \$procmux$1024_Y ;
  wire [4:0] \$procmux$1034_Y ;
  wire [4:0] \$procmux$1041_Y ;
  wire \$procmux$1043_Y ;
  wire \$procmux$1082_Y ;
  wire [3:0] \$procmux$1093_Y ;
  wire [10:0] \$procmux$1104_Y ;
  wire \$procmux$1115_Y ;
  wire [3:0] \$procmux$1124_Y ;
  wire [10:0] \$procmux$1133_Y ;
  wire \$procmux$1176_Y ;
  wire [3:0] \$procmux$1181_Y ;
  wire [2:0] \$procmux$120_Y ;
  wire [31:0] \$procmux$125_Y ;
  wire \$procmux$1305_Y ;
  wire \$procmux$1307_Y ;
  wire [10:0] \$procmux$1315_Y ;
  wire [3:0] \$procmux$1323_Y ;
  wire [2:0] \$procmux$132_Y ;
  wire [10:0] \$procmux$1333_Y ;
  wire [3:0] \$procmux$1340_Y ;
  wire \$procmux$1347_Y ;
  wire \$procmux$1368_Y ;
  wire [31:0] \$procmux$136_Y ;
  wire [3:0] \$procmux$1375_Y ;
  wire [3:0] \$procmux$1385_Y ;
  wire \$procmux$138_Y ;
  wire [3:0] \$procmux$1392_Y ;
  wire [3:0] \$procmux$1394_Y ;
  wire [3:0] \$procmux$1404_Y ;
  wire [3:0] \$procmux$1411_Y ;
  wire \$procmux$1413_Y ;
  wire \$procmux$145_Y ;
  wire [2:0] \$procmux$1499_Y ;
  wire [31:0] \$procmux$1504_Y ;
  wire [2:0] \$procmux$1511_Y ;
  wire [31:0] \$procmux$1515_Y ;
  wire \$procmux$1569_Y ;
  wire \$procmux$1576_Y ;
  wire \$procmux$1585_Y ;
  wire \$procmux$1615_Y ;
  wire \$procmux$220_Y ;
  wire \$procmux$229_Y ;
  wire \$procmux$22_Y ;
  wire \$procmux$251_Y ;
  wire [11:0] \$procmux$25_Y ;
  wire [65:0] \$procmux$273_Y ;
  wire [65:0] \$procmux$276_Y ;
  wire [65:0] \$procmux$278_Y ;
  wire \$procmux$284_Y ;
  wire \$procmux$287_Y ;
  wire \$procmux$290_Y ;
  wire \$procmux$292_Y ;
  wire [8:0] \$procmux$296_Y ;
  wire [8:0] \$procmux$304_Y ;
  wire [8:0] \$procmux$307_Y ;
  wire [2:0] \$procmux$315_Y ;
  wire [2:0] \$procmux$328_Y ;
  wire [11:0] \$procmux$32_Y ;
  wire [2:0] \$procmux$338_Y ;
  wire [2:0] \$procmux$34_Y ;
  wire \$procmux$350_Y ;
  wire [3:0] \$procmux$359_Y ;
  wire [1:0] \$procmux$368_Y ;
  wire [3:0] \$procmux$379_Y ;
  wire [1:0] \$procmux$387_Y ;
  wire [7:0] \$procmux$394_Y ;
  wire \$procmux$396_CMP ;
  wire \$procmux$397_CMP ;
  wire \$procmux$398_CMP ;
  wire \$procmux$39_Y ;
  wire \$procmux$400_CMP ;
  wire \$procmux$401_CMP ;
  wire \$procmux$402_CMP ;
  wire [3:0] \$procmux$408_Y ;
  wire [1:0] \$procmux$413_Y ;
  wire [7:0] \$procmux$418_Y ;
  wire \$procmux$423_Y ;
  wire \$procmux$448_CMP ;
  wire [3:0] \$procmux$450_Y ;
  wire [1:0] \$procmux$457_Y ;
  wire [3:0] \$procmux$464_Y ;
  wire [1:0] \$procmux$469_Y ;
  wire [2:0] \$procmux$46_Y ;
  wire [2:0] \$procmux$484_Y ;
  wire \$procmux$489_Y ;
  wire \$procmux$492_CMP ;
  wire [2:0] \$procmux$494_Y ;
  wire \$procmux$502_Y ;
  wire \$procmux$507_CMP ;
  wire \$procmux$50_Y ;
  wire [3:0] \$procmux$512_Y ;
  wire [31:0] \$procmux$522_Y ;
  wire \$procmux$52_Y ;
  wire [1:0] \$procmux$532_Y ;
  wire [2:0] \$procmux$542_Y ;
  wire \$procmux$552_Y ;
  wire [3:0] \$procmux$560_Y ;
  wire [31:0] \$procmux$568_Y ;
  wire [31:0] \$procmux$576_Y ;
  wire [1:0] \$procmux$584_Y ;
  wire [2:0] \$procmux$592_Y ;
  wire \$procmux$59_Y ;
  wire [1:0] \$procmux$602_Y ;
  wire \$procmux$607_CMP ;
  wire [2:0] \$procmux$614_Y ;
  wire \$procmux$628_Y ;
  wire [3:0] \$procmux$642_Y ;
  wire [31:0] \$procmux$656_Y ;
  wire [1:0] \$procmux$670_Y ;
  wire \$procmux$684_Y ;
  wire [3:0] \$procmux$696_Y ;
  wire [31:0] \$procmux$708_Y ;
  wire [2:0] \$procmux$732_Y ;
  wire \$procmux$743_Y ;
  wire [3:0] \$procmux$752_Y ;
  wire [31:0] \$procmux$761_Y ;
  wire [1:0] \$procmux$788_Y ;
  wire [2:0] \$procmux$797_Y ;
  wire [1:0] \$procmux$807_Y ;
  wire \$procmux$812_CMP ;
  wire [2:0] \$procmux$820_Y ;
  wire \$procmux$844_CMP ;
  wire [1:0] \$procmux$875_Y ;
  wire [2:0] \$procmux$885_Y ;
  wire \$procmux$894_CMP ;
  wire [2:0] \$procmux$909_Y ;
  wire [3:0] \$procmux$914_Y ;
  wire [1:0] \$procmux$917_Y ;
  wire [65:0] tl_gpio_d2h;
  wire [108:0] tl_gpio_h2d;
  wire [65:0] tl_pwm_d2h;
  wire [108:0] tl_pwm_h2d;
  wire [65:0] tl_rv_timer_d2h;
  wire [108:0] tl_rv_timer_h2d;
  wire [65:0] tl_uart_d2h;
  wire [108:0] tl_uart_h2d;
  wire [65:0] tl_uart_host_d2h;
  wire [108:0] tl_uart_host_h2d;
  wire [1:0] \u_gpio.cio_gpio_en_o ;
  reg [1:0] \u_gpio.cio_gpio_en_q ;
  wire [1:0] \u_gpio.cio_gpio_i ;
  wire [1:0] \u_gpio.cio_gpio_o ;
  reg [1:0] \u_gpio.cio_gpio_q ;
  wire \u_gpio.clk_i ;
  wire [1:0] \u_gpio.data_in_d ;
  reg [1:0] \u_gpio.data_in_q ;
  wire [1:0] \u_gpio.event_intr_acthigh ;
  wire [1:0] \u_gpio.event_intr_actlow ;
  wire [1:0] \u_gpio.event_intr_combined ;
  wire [1:0] \u_gpio.event_intr_fall ;
  wire [1:0] \u_gpio.event_intr_rise ;
  wire \u_gpio.gen_filter[0].u_filter.clk_i ;
  wire [1:0] \u_gpio.gen_filter[0].u_filter.diff_ctr_d ;
  reg [1:0] \u_gpio.gen_filter[0].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[0].u_filter.enable_i ;
  wire \u_gpio.gen_filter[0].u_filter.filter_i ;
  wire \u_gpio.gen_filter[0].u_filter.filter_o ;
  reg \u_gpio.gen_filter[0].u_filter.filter_q ;
  wire \u_gpio.gen_filter[0].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[0].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[0].u_filter.stored_value_q ;
  wire [1:0] \u_gpio.gen_filter[0].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[0].u_filter.update_stored_value ;
  wire \u_gpio.gen_filter[1].u_filter.clk_i ;
  wire [1:0] \u_gpio.gen_filter[1].u_filter.diff_ctr_d ;
  reg [1:0] \u_gpio.gen_filter[1].u_filter.diff_ctr_q ;
  wire \u_gpio.gen_filter[1].u_filter.enable_i ;
  wire \u_gpio.gen_filter[1].u_filter.filter_i ;
  wire \u_gpio.gen_filter[1].u_filter.filter_o ;
  reg \u_gpio.gen_filter[1].u_filter.filter_q ;
  wire \u_gpio.gen_filter[1].u_filter.filter_synced ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.intq ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.unused_sig ;
  wire \u_gpio.gen_filter[1].u_filter.rst_ni ;
  reg \u_gpio.gen_filter[1].u_filter.stored_value_q ;
  wire [1:0] \u_gpio.gen_filter[1].u_filter.thresh_i ;
  wire \u_gpio.gen_filter[1].u_filter.update_stored_value ;
  wire [9:0] \u_gpio.hw2reg ;
  wire \u_gpio.intr_hw.clk_i ;
  wire [1:0] \u_gpio.intr_hw.event_intr_i ;
  wire [1:0] \u_gpio.intr_hw.g_intr_event.new_event ;
  wire [1:0] \u_gpio.intr_hw.hw2reg_intr_state_d_o ;
  wire \u_gpio.intr_hw.hw2reg_intr_state_de_o ;
  wire [1:0] \u_gpio.intr_hw.reg2hw_intr_enable_q_i ;
  wire [1:0] \u_gpio.intr_hw.reg2hw_intr_state_q_i ;
  wire [1:0] \u_gpio.intr_hw.reg2hw_intr_test_q_i ;
  wire \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  wire \u_gpio.intr_hw.rst_ni ;
  wire [1:0] \u_gpio.intr_hw.status ;
  wire [26:0] \u_gpio.reg2hw ;
  wire \u_gpio.rst_ni ;
  wire [108:0] \u_gpio.tl_i ;
  wire [65:0] \u_gpio.tl_o ;
  wire [6:0] \u_gpio.u_reg.addr_hit ;
  wire \u_gpio.u_reg.addrmiss ;
  wire \u_gpio.u_reg.clk_i ;
  wire [3:0] \u_gpio.u_reg.ctrl_en_input_filter_qs ;
  wire [3:0] \u_gpio.u_reg.ctrl_en_input_filter_wd ;
  wire \u_gpio.u_reg.ctrl_en_input_filter_we ;
  wire [1:0] \u_gpio.u_reg.data_in_qs ;
  wire \u_gpio.u_reg.devmode_i ;
  wire [1:0] \u_gpio.u_reg.direct_flds_we ;
  wire [1:0] \u_gpio.u_reg.direct_gpio_o_qs ;
  wire [1:0] \u_gpio.u_reg.direct_gpio_o_wd ;
  wire [1:0] \u_gpio.u_reg.direct_gpio_oe_qs ;
  wire [1:0] \u_gpio.u_reg.direct_gpio_oe_wd ;
  wire \u_gpio.u_reg.direct_qe ;
  wire \u_gpio.u_reg.direct_we ;
  wire [9:0] \u_gpio.u_reg.hw2reg ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_falling_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_falling_wd ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_input_filter_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_input_filter_wd ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvlhigh_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvlhigh_wd ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvllow_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_lvllow_wd ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_rising_qs ;
  wire [1:0] \u_gpio.u_reg.intr_ctrl_en_rising_wd ;
  wire \u_gpio.u_reg.intr_ctrl_we ;
  wire [1:0] \u_gpio.u_reg.intr_enable_qs ;
  wire [1:0] \u_gpio.u_reg.intr_enable_wd ;
  wire \u_gpio.u_reg.intr_enable_we ;
  wire [1:0] \u_gpio.u_reg.intr_state_qs ;
  wire [1:0] \u_gpio.u_reg.intr_state_wd ;
  wire \u_gpio.u_reg.intr_state_we ;
  wire \u_gpio.u_reg.intr_test_flds_we ;
  wire \u_gpio.u_reg.intr_test_qe ;
  wire [1:0] \u_gpio.u_reg.intr_test_wd ;
  wire \u_gpio.u_reg.intr_test_we ;
  wire [26:0] \u_gpio.u_reg.reg2hw ;
  wire [4:0] \u_gpio.u_reg.reg_addr ;
  wire [3:0] \u_gpio.u_reg.reg_be ;
  wire \u_gpio.u_reg.reg_busy ;
  wire \u_gpio.u_reg.reg_error ;
  wire [31:0] \u_gpio.u_reg.reg_rdata ;
  wire [31:0] \u_gpio.u_reg.reg_rdata_next ;
  wire \u_gpio.u_reg.reg_re ;
  wire [31:0] \u_gpio.u_reg.reg_wdata ;
  wire \u_gpio.u_reg.reg_we ;
  wire \u_gpio.u_reg.rst_ni ;
  wire \u_gpio.u_reg.shadow_busy ;
  wire [108:0] \u_gpio.u_reg.tl_i ;
  wire [65:0] \u_gpio.u_reg.tl_o ;
  wire [65:0] \u_gpio.u_reg.tl_o_pre ;
  wire [65:0] \u_gpio.u_reg.tl_reg_d2h ;
  wire [108:0] \u_gpio.u_reg.tl_reg_h2d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.de ;
  reg [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.qe ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.qs ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.rst_ni ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wd ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.we ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_data ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.de ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.q ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.we ;
  wire [3:0] \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_data_in.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_data_in.d ;
  wire \u_gpio.u_reg.u_data_in.de ;
  wire [1:0] \u_gpio.u_reg.u_data_in.ds ;
  reg [1:0] \u_gpio.u_reg.u_data_in.q ;
  wire \u_gpio.u_reg.u_data_in.qe ;
  wire [1:0] \u_gpio.u_reg.u_data_in.qs ;
  wire \u_gpio.u_reg.u_data_in.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wd ;
  wire \u_gpio.u_reg.u_data_in.we ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_data ;
  wire \u_gpio.u_reg.u_data_in.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_wd ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_we ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.d ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.ds ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.q ;
  wire \u_gpio.u_reg.u_direct_gpio_o.qe ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.qs ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_o.wd ;
  wire \u_gpio.u_reg.u_direct_gpio_o.we ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.d ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.ds ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.q ;
  wire \u_gpio.u_reg.u_direct_gpio_oe.qe ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.qs ;
  wire [1:0] \u_gpio.u_reg.u_direct_gpio_oe.wd ;
  wire \u_gpio.u_reg.u_direct_gpio_oe.we ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.qs ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_enable.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.d ;
  wire \u_gpio.u_reg.u_intr_enable.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_enable.q ;
  wire \u_gpio.u_reg.u_intr_enable.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.qs ;
  wire \u_gpio.u_reg.u_intr_enable.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wd ;
  wire \u_gpio.u_reg.u_intr_enable.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_data ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.gen_w.unused_q ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_en ;
  wire \u_gpio.u_reg.u_intr_state.clk_i ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.d ;
  wire \u_gpio.u_reg.u_intr_state.de ;
  reg [1:0] \u_gpio.u_reg.u_intr_state.q ;
  wire \u_gpio.u_reg.u_intr_state.qe ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.qs ;
  wire \u_gpio.u_reg.u_intr_state.rst_ni ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wd ;
  wire \u_gpio.u_reg.u_intr_state.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_data ;
  wire \u_gpio.u_reg.u_intr_state.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.q ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wd ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  wire [1:0] \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_data ;
  wire \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_en ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.d ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.ds ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.q ;
  wire \u_gpio.u_reg.u_intr_test.qe ;
  wire \u_gpio.u_reg.u_intr_test.qre ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.qs ;
  wire \u_gpio.u_reg.u_intr_test.re ;
  wire [1:0] \u_gpio.u_reg.u_intr_test.wd ;
  wire \u_gpio.u_reg.u_intr_test.we ;
  wire \u_gpio.u_reg.u_reg_if.a_ack ;
  wire \u_gpio.u_reg.u_reg_if.addr_align_err ;
  wire [4:0] \u_gpio.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.be_o ;
  wire \u_gpio.u_reg.u_reg_if.busy_i ;
  wire \u_gpio.u_reg.u_reg_if.clk_i ;
  wire \u_gpio.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_gpio.u_reg.u_reg_if.err_internal ;
  wire \u_gpio.u_reg.u_reg_if.error ;
  wire \u_gpio.u_reg.u_reg_if.error_i ;
  reg \u_gpio.u_reg.u_reg_if.error_q ;
  wire \u_gpio.u_reg.u_reg_if.intg_error ;
  wire \u_gpio.u_reg.u_reg_if.intg_error_o ;
  reg \u_gpio.u_reg.u_reg_if.outstanding_q ;
  wire \u_gpio.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_gpio.u_reg.u_reg_if.rdata_q ;
  wire \u_gpio.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_gpio.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_gpio.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_gpio.u_reg.u_reg_if.rspop_q ;
  wire \u_gpio.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_gpio.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.tl_o_pre ;
  wire \u_gpio.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_gpio.u_reg.u_reg_if.u_err.mask ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  wire \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_gpio.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_gpio.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_gpio.u_reg.u_reg_if.wdata_o ;
  wire \u_gpio.u_reg.u_reg_if.we_o ;
  wire \u_gpio.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_gpio.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_gpio.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_gpio.u_reg.wr_err ;
  wire \u_pwm.cio_pwm_en_o ;
  wire \u_pwm.cio_pwm_o ;
  wire \u_pwm.clk_i ;
  wire [70:0] \u_pwm.reg2hw ;
  wire \u_pwm.rst_ni ;
  wire [108:0] \u_pwm.tl_i ;
  wire [65:0] \u_pwm.tl_o ;
  wire [26:0] \u_pwm.u_pwm_core.beat_ctr_d ;
  wire \u_pwm.u_pwm_core.beat_ctr_en ;
  reg [26:0] \u_pwm.u_pwm_core.beat_ctr_q ;
  wire \u_pwm.u_pwm_core.beat_end ;
  wire \u_pwm.u_pwm_core.clk_core_i ;
  wire [26:0] \u_pwm.u_pwm_core.clk_div ;
  wire \u_pwm.u_pwm_core.clr_phase_cntr ;
  wire \u_pwm.u_pwm_core.cntr_en ;
  wire [3:0] \u_pwm.u_pwm_core.dc_resn ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clk_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask ;
  wire [3:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_resn_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_a_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_ctr_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_i ;
  wire [15:0] \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_masked ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_i ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o ;
  reg \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  wire \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.rst_ni ;
  wire [3:0] \u_pwm.u_pwm_core.lshift ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_d ;
  wire \u_pwm.u_pwm_core.phase_ctr_en ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_incr ;
  wire [15:0] \u_pwm.u_pwm_core.phase_ctr_next ;
  wire \u_pwm.u_pwm_core.phase_ctr_overflow ;
  reg [15:0] \u_pwm.u_pwm_core.phase_ctr_q ;
  wire \u_pwm.u_pwm_core.pwm_o ;
  wire [70:0] \u_pwm.u_pwm_core.reg2hw ;
  wire \u_pwm.u_pwm_core.rst_core_ni ;
  wire [26:0] \u_pwm.u_reg._cfg_clk_div_qs_int ;
  wire \u_pwm.u_reg._cfg_cntr_en_qs_int ;
  wire [3:0] \u_pwm.u_reg._cfg_dc_resn_qs_int ;
  wire [31:0] \u_pwm.u_reg._cfg_qs ;
  wire [31:0] \u_pwm.u_reg._cfg_wdata ;
  wire \u_pwm.u_reg._cfg_we ;
  wire \u_pwm.u_reg._pwm_en_qs ;
  wire \u_pwm.u_reg._pwm_en_qs_int ;
  wire \u_pwm.u_reg._pwm_en_wdata ;
  wire \u_pwm.u_reg._pwm_en_we ;
  wire [15:0] \u_pwm.u_reg._pwm_param_duty_cycle_0_qs_int ;
  wire [15:0] \u_pwm.u_reg._pwm_param_phase_delay_0_qs_int ;
  wire [31:0] \u_pwm.u_reg._pwm_param_qs ;
  wire [31:0] \u_pwm.u_reg._pwm_param_wdata ;
  wire \u_pwm.u_reg._pwm_param_we ;
  wire [2:0] \u_pwm.u_reg.addr_hit ;
  wire \u_pwm.u_reg.addrmiss ;
  wire \u_pwm.u_reg.cfg_busy ;
  wire [2:0] \u_pwm.u_reg.cfg_flds_we ;
  wire \u_pwm.u_reg.cfg_qe ;
  wire [31:0] \u_pwm.u_reg.cfg_qs ;
  wire \u_pwm.u_reg.cfg_we ;
  wire \u_pwm.u_reg.clk_i ;
  wire \u_pwm.u_reg.devmode_i ;
  wire \u_pwm.u_reg.pwm_en_busy ;
  wire \u_pwm.u_reg.pwm_en_flds_we ;
  wire \u_pwm.u_reg.pwm_en_qe ;
  wire \u_pwm.u_reg.pwm_en_qs ;
  wire \u_pwm.u_reg.pwm_en_we ;
  wire \u_pwm.u_reg.pwm_param_busy ;
  wire [1:0] \u_pwm.u_reg.pwm_param_flds_we ;
  wire \u_pwm.u_reg.pwm_param_qe ;
  wire [31:0] \u_pwm.u_reg.pwm_param_qs ;
  wire \u_pwm.u_reg.pwm_param_we ;
  wire [70:0] \u_pwm.u_reg.reg2hw ;
  wire [3:0] \u_pwm.u_reg.reg_addr ;
  wire [3:0] \u_pwm.u_reg.reg_be ;
  wire \u_pwm.u_reg.reg_busy ;
  wire \u_pwm.u_reg.reg_busy_sel ;
  wire \u_pwm.u_reg.reg_error ;
  wire [31:0] \u_pwm.u_reg.reg_rdata ;
  wire [31:0] \u_pwm.u_reg.reg_rdata_next ;
  wire \u_pwm.u_reg.reg_re ;
  wire [31:0] \u_pwm.u_reg.reg_wdata ;
  wire \u_pwm.u_reg.reg_we ;
  wire \u_pwm.u_reg.rst_ni ;
  wire \u_pwm.u_reg.shadow_busy ;
  wire [108:0] \u_pwm.u_reg.tl_i ;
  wire [65:0] \u_pwm.u_reg.tl_o ;
  wire [65:0] \u_pwm.u_reg.tl_o_pre ;
  wire [65:0] \u_pwm.u_reg.tl_reg_d2h ;
  wire [108:0] \u_pwm.u_reg.tl_reg_h2d ;
  wire \u_pwm.u_reg.u_cfg0_qe.clk_i ;
  wire \u_pwm.u_reg.u_cfg0_qe.d_i ;
  reg \u_pwm.u_reg.u_cfg0_qe.q_o ;
  wire \u_pwm.u_reg.u_cfg0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_cfg_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_req ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_cfg_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_cfg_clk_div.clk_i ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.d ;
  wire \u_pwm.u_reg.u_cfg_clk_div.de ;
  reg [26:0] \u_pwm.u_reg.u_cfg_clk_div.q ;
  wire \u_pwm.u_reg.u_cfg_clk_div.qe ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.qs ;
  wire \u_pwm.u_reg.u_cfg_clk_div.rst_ni ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wd ;
  wire \u_pwm.u_reg.u_cfg_clk_div.we ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_data ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.de ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.gen_w.unused_q ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.q ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.we ;
  wire [26:0] \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.clk_i ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.d ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.de ;
  reg \u_pwm.u_reg.u_cfg_cntr_en.q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.qe ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.qs ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.rst_ni ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wd ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.we ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_data ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.clk_i ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.d ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.de ;
  reg [3:0] \u_pwm.u_reg.u_cfg_dc_resn.q ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.qe ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.qs ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.rst_ni ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wd ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.we ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_data ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.de ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.gen_w.unused_q ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.q ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.we ;
  wire [3:0] \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en.d ;
  wire \u_pwm.u_reg.u_pwm_en.de ;
  reg \u_pwm.u_reg.u_pwm_en.q ;
  wire \u_pwm.u_reg.u_pwm_en.qe ;
  wire \u_pwm.u_reg.u_pwm_en.qs ;
  wire \u_pwm.u_reg.u_pwm_en.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en.wd ;
  wire \u_pwm.u_reg.u_pwm_en.we ;
  wire \u_pwm.u_reg.u_pwm_en.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.de ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.q ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.we ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.d_i ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.q_o ;
  wire \u_pwm.u_reg.u_pwm_en0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_ds_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_qs ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_req ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_update ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_ds_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_en_cdc.unused_wd ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.d_i ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.q_o ;
  wire \u_pwm.u_reg.u_pwm_param0_qe.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_qs ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_qs_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_re_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_regwen_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_req_from_src ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_update_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.dst_wd_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.dst_we_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_busy_o ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q ;
  reg [31:0] \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.src_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_re_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_regwen_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_req ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_update ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.src_wd_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.src_we_i ;
  reg [2:0] \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_src_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_ds_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_i ;
  wire [31:0] \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.unused_sigs ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_src_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_ack_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_update_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_dst_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_src_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_pulse_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_dst_ni ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_src_ni ;
  reg \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  wire \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  wire \u_pwm.u_reg.u_pwm_param_duty_cycle_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_duty_cycle_0.de ;
  reg [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_duty_cycle_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_duty_cycle_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_duty_cycle_0.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.clk_i ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.d ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.de ;
  reg [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.qe ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.qs ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.rst_ni ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wd ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.d ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.de ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.q ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wd ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.we ;
  wire [15:0] \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_data ;
  wire \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_en ;
  wire \u_pwm.u_reg.u_reg_if.a_ack ;
  wire \u_pwm.u_reg.u_reg_if.addr_align_err ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.be_o ;
  wire \u_pwm.u_reg.u_reg_if.busy_i ;
  wire \u_pwm.u_reg.u_reg_if.clk_i ;
  wire \u_pwm.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_pwm.u_reg.u_reg_if.err_internal ;
  wire \u_pwm.u_reg.u_reg_if.error ;
  wire \u_pwm.u_reg.u_reg_if.error_i ;
  reg \u_pwm.u_reg.u_reg_if.error_q ;
  wire \u_pwm.u_reg.u_reg_if.intg_error ;
  wire \u_pwm.u_reg.u_reg_if.intg_error_o ;
  reg \u_pwm.u_reg.u_reg_if.outstanding_q ;
  wire \u_pwm.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_pwm.u_reg.u_reg_if.rdata_q ;
  wire \u_pwm.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_pwm.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_pwm.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_pwm.u_reg.u_reg_if.rspop_q ;
  wire \u_pwm.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_pwm.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.tl_o_pre ;
  wire \u_pwm.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_pwm.u_reg.u_reg_if.u_err.mask ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_full ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_get ;
  wire \u_pwm.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_pwm.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_pwm.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_pwm.u_reg.u_reg_if.wdata_o ;
  wire \u_pwm.u_reg.u_reg_if.we_o ;
  wire \u_pwm.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_pwm.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_pwm.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_pwm.u_reg.unused__pwm_en_wdata ;
  wire \u_pwm.u_reg.wr_err ;
  wire \u_rv_timer.active ;
  wire \u_rv_timer.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_core.active ;
  wire \u_rv_timer.gen_harts[0].u_core.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_core.intr ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtime ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtime_d ;
  wire [63:0] \u_rv_timer.gen_harts[0].u_core.mtimecmp ;
  wire [11:0] \u_rv_timer.gen_harts[0].u_core.prescaler ;
  wire \u_rv_timer.gen_harts[0].u_core.rst_ni ;
  wire [7:0] \u_rv_timer.gen_harts[0].u_core.step ;
  wire \u_rv_timer.gen_harts[0].u_core.tick ;
  reg [11:0] \u_rv_timer.gen_harts[0].u_core.tick_count ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.clk_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_d_o ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_de_o ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_enable_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_state_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_q_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.rst_ni ;
  wire \u_rv_timer.gen_harts[0].u_intr_hw.status ;
  wire [67:0] \u_rv_timer.hw2reg ;
  wire \u_rv_timer.intr_timer_en ;
  wire \u_rv_timer.intr_timer_set ;
  wire \u_rv_timer.intr_timer_state_d ;
  wire \u_rv_timer.intr_timer_state_de ;
  wire \u_rv_timer.intr_timer_state_q ;
  wire \u_rv_timer.intr_timer_test_q ;
  wire \u_rv_timer.intr_timer_test_qe ;
  wire [63:0] \u_rv_timer.mtime ;
  wire [63:0] \u_rv_timer.mtime_d ;
  wire [63:0] \u_rv_timer.mtimecmp ;
  wire \u_rv_timer.mtimecmp_update ;
  wire [11:0] \u_rv_timer.prescaler ;
  wire [154:0] \u_rv_timer.reg2hw ;
  wire \u_rv_timer.rst_ni ;
  wire [7:0] \u_rv_timer.step ;
  wire \u_rv_timer.tick ;
  wire [108:0] \u_rv_timer.tl_i ;
  wire [65:0] \u_rv_timer.tl_o ;
  wire [8:0] \u_rv_timer.u_reg.addr_hit ;
  wire \u_rv_timer.u_reg.addrmiss ;
  wire [11:0] \u_rv_timer.u_reg.cfg0_prescale_qs ;
  wire [11:0] \u_rv_timer.u_reg.cfg0_prescale_wd ;
  wire [7:0] \u_rv_timer.u_reg.cfg0_step_qs ;
  wire [7:0] \u_rv_timer.u_reg.cfg0_step_wd ;
  wire \u_rv_timer.u_reg.cfg0_we ;
  wire \u_rv_timer.u_reg.clk_i ;
  wire \u_rv_timer.u_reg.compare_lower0_0_flds_we ;
  wire \u_rv_timer.u_reg.compare_lower0_0_qe ;
  wire [31:0] \u_rv_timer.u_reg.compare_lower0_0_qs ;
  wire [31:0] \u_rv_timer.u_reg.compare_lower0_0_wd ;
  wire \u_rv_timer.u_reg.compare_lower0_0_we ;
  wire \u_rv_timer.u_reg.compare_upper0_0_flds_we ;
  wire \u_rv_timer.u_reg.compare_upper0_0_qe ;
  wire [31:0] \u_rv_timer.u_reg.compare_upper0_0_qs ;
  wire [31:0] \u_rv_timer.u_reg.compare_upper0_0_wd ;
  wire \u_rv_timer.u_reg.compare_upper0_0_we ;
  wire \u_rv_timer.u_reg.ctrl_qs ;
  wire \u_rv_timer.u_reg.ctrl_wd ;
  wire \u_rv_timer.u_reg.ctrl_we ;
  wire \u_rv_timer.u_reg.devmode_i ;
  wire [67:0] \u_rv_timer.u_reg.hw2reg ;
  wire \u_rv_timer.u_reg.intr_enable0_qs ;
  wire \u_rv_timer.u_reg.intr_enable0_wd ;
  wire \u_rv_timer.u_reg.intr_enable0_we ;
  wire \u_rv_timer.u_reg.intr_state0_qs ;
  wire \u_rv_timer.u_reg.intr_state0_wd ;
  wire \u_rv_timer.u_reg.intr_state0_we ;
  wire \u_rv_timer.u_reg.intr_test0_flds_we ;
  wire \u_rv_timer.u_reg.intr_test0_qe ;
  wire \u_rv_timer.u_reg.intr_test0_wd ;
  wire \u_rv_timer.u_reg.intr_test0_we ;
  wire [154:0] \u_rv_timer.u_reg.reg2hw ;
  wire [8:0] \u_rv_timer.u_reg.reg_addr ;
  wire [3:0] \u_rv_timer.u_reg.reg_be ;
  wire \u_rv_timer.u_reg.reg_busy ;
  wire \u_rv_timer.u_reg.reg_error ;
  wire [31:0] \u_rv_timer.u_reg.reg_rdata ;
  wire [31:0] \u_rv_timer.u_reg.reg_rdata_next ;
  wire \u_rv_timer.u_reg.reg_re ;
  wire [31:0] \u_rv_timer.u_reg.reg_wdata ;
  wire \u_rv_timer.u_reg.reg_we ;
  wire \u_rv_timer.u_reg.rst_ni ;
  wire \u_rv_timer.u_reg.shadow_busy ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_lower0_qs ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_lower0_wd ;
  wire \u_rv_timer.u_reg.timer_v_lower0_we ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_upper0_qs ;
  wire [31:0] \u_rv_timer.u_reg.timer_v_upper0_wd ;
  wire \u_rv_timer.u_reg.timer_v_upper0_we ;
  wire [108:0] \u_rv_timer.u_reg.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.tl_o ;
  wire [65:0] \u_rv_timer.u_reg.tl_o_pre ;
  wire [65:0] \u_rv_timer.u_reg.tl_reg_d2h ;
  wire [108:0] \u_rv_timer.u_reg.tl_reg_h2d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.clk_i ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.de ;
  reg [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.qe ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.qs ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.rst_ni ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.we ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.de ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.gen_w.unused_q ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.q ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.we ;
  wire [11:0] \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_cfg0_step.clk_i ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.d ;
  wire \u_rv_timer.u_reg.u_cfg0_step.de ;
  reg [7:0] \u_rv_timer.u_reg.u_cfg0_step.q ;
  wire \u_rv_timer.u_reg.u_cfg0_step.qe ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.qs ;
  wire \u_rv_timer.u_reg.u_cfg0_step.rst_ni ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_step.we ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.de ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.gen_w.unused_q ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.q ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.we ;
  wire [7:0] \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.d ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.qs ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wd ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.clk_i ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  reg \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  wire \u_rv_timer.u_reg.u_compare_lower0_00_qe.rst_ni ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.d ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.qs ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wd ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.clk_i ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  reg \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o ;
  wire \u_rv_timer.u_reg.u_compare_upper0_00_qe.rst_ni ;
  wire \u_rv_timer.u_reg.u_ctrl.clk_i ;
  wire \u_rv_timer.u_reg.u_ctrl.d ;
  wire \u_rv_timer.u_reg.u_ctrl.de ;
  reg \u_rv_timer.u_reg.u_ctrl.q ;
  wire \u_rv_timer.u_reg.u_ctrl.qe ;
  wire \u_rv_timer.u_reg.u_ctrl.qs ;
  wire \u_rv_timer.u_reg.u_ctrl.rst_ni ;
  wire \u_rv_timer.u_reg.u_ctrl.wd ;
  wire \u_rv_timer.u_reg.u_ctrl.we ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_data ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.gen_w.unused_q ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_enable0.clk_i ;
  wire \u_rv_timer.u_reg.u_intr_enable0.d ;
  wire \u_rv_timer.u_reg.u_intr_enable0.de ;
  reg \u_rv_timer.u_reg.u_intr_enable0.q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.qe ;
  wire \u_rv_timer.u_reg.u_intr_enable0.qs ;
  wire \u_rv_timer.u_reg.u_intr_enable0.rst_ni ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wd ;
  wire \u_rv_timer.u_reg.u_intr_enable0.we ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.gen_w.unused_q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_state0.clk_i ;
  wire \u_rv_timer.u_reg.u_intr_state0.d ;
  wire \u_rv_timer.u_reg.u_intr_state0.de ;
  reg \u_rv_timer.u_reg.u_intr_state0.q ;
  wire \u_rv_timer.u_reg.u_intr_state0.qe ;
  wire \u_rv_timer.u_reg.u_intr_state0.qs ;
  wire \u_rv_timer.u_reg.u_intr_state0.rst_ni ;
  wire \u_rv_timer.u_reg.u_intr_state0.wd ;
  wire \u_rv_timer.u_reg.u_intr_state0.we ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.q ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_intr_test0.d ;
  wire \u_rv_timer.u_reg.u_intr_test0.ds ;
  wire \u_rv_timer.u_reg.u_intr_test0.q ;
  wire \u_rv_timer.u_reg.u_intr_test0.qe ;
  wire \u_rv_timer.u_reg.u_intr_test0.qre ;
  wire \u_rv_timer.u_reg.u_intr_test0.qs ;
  wire \u_rv_timer.u_reg.u_intr_test0.re ;
  wire \u_rv_timer.u_reg.u_intr_test0.wd ;
  wire \u_rv_timer.u_reg.u_intr_test0.we ;
  wire \u_rv_timer.u_reg.u_reg_if.a_ack ;
  wire \u_rv_timer.u_reg.u_reg_if.addr_align_err ;
  wire [8:0] \u_rv_timer.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.be_o ;
  wire \u_rv_timer.u_reg.u_reg_if.busy_i ;
  wire \u_rv_timer.u_reg.u_reg_if.clk_i ;
  wire \u_rv_timer.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_rv_timer.u_reg.u_reg_if.err_internal ;
  wire \u_rv_timer.u_reg.u_reg_if.error ;
  wire \u_rv_timer.u_reg.u_reg_if.error_i ;
  reg \u_rv_timer.u_reg.u_reg_if.error_q ;
  wire \u_rv_timer.u_reg.u_reg_if.intg_error ;
  wire \u_rv_timer.u_reg.u_reg_if.intg_error_o ;
  reg \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  wire \u_rv_timer.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_rv_timer.u_reg.u_reg_if.rdata_q ;
  wire \u_rv_timer.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_rv_timer.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_rv_timer.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_rv_timer.u_reg.u_reg_if.rspop_q ;
  wire \u_rv_timer.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_rv_timer.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.tl_o_pre ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_rv_timer.u_reg.u_reg_if.u_err.mask ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_full ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_get ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_rv_timer.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_rv_timer.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_rv_timer.u_reg.u_reg_if.wdata_o ;
  wire \u_rv_timer.u_reg.u_reg_if.we_o ;
  wire \u_rv_timer.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_rv_timer.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_rv_timer.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.d ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.qs ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.clk_i ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.d ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.de ;
  reg [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.qs ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.rst_ni ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.d ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.de ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.gen_w.unused_q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.q ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wd ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  wire [31:0] \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_data ;
  wire \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_en ;
  wire \u_rv_timer.u_reg.wr_err ;
  wire [31:0] \u_uart.addr_o ;
  wire [3:0] \u_uart.be_o ;
  wire \u_uart.cio_rx_i ;
  wire \u_uart.cio_tx_en_o ;
  wire \u_uart.cio_tx_o ;
  wire \u_uart.clk_i ;
  wire \u_uart.err_i ;
  wire \u_uart.gnt_i ;
  wire [29:0] \u_uart.hw2reg ;
  wire [31:0] \u_uart.rdata_i ;
  wire [56:0] \u_uart.reg2hw ;
  wire \u_uart.req_o ;
  wire \u_uart.rst_ni ;
  wire [7:0] \u_uart.rx_data ;
  wire \u_uart.rx_pop ;
  wire \u_uart.rx_valid ;
  wire [108:0] \u_uart.tl_i ;
  wire [65:0] \u_uart.tl_o ;
  wire [7:0] \u_uart.tx_data ;
  wire \u_uart.tx_ready ;
  wire \u_uart.tx_valid ;
  wire [31:0] \u_uart.u_bridge.addr_o ;
  reg [31:0] \u_uart.u_bridge.addr_q ;
  reg \u_uart.u_bridge.any_err_q ;
  wire [3:0] \u_uart.u_bridge.be_d ;
  wire [3:0] \u_uart.u_bridge.be_o ;
  reg [3:0] \u_uart.u_bridge.be_q ;
  wire [7:0] \u_uart.u_bridge.bebyte_d ;
  reg [7:0] \u_uart.u_bridge.bebyte_q  = 8'h00;
  wire \u_uart.u_bridge.clk_i ;
  wire \u_uart.u_bridge.err_i ;
  wire \u_uart.u_bridge.gnt_i ;
  wire [1:0] \u_uart.u_bridge.idx_d ;
  reg [1:0] \u_uart.u_bridge.idx_q ;
  wire [7:0] \u_uart.u_bridge.op_d ;
  reg [7:0] \u_uart.u_bridge.op_q  = 8'h00;
  wire [31:0] \u_uart.u_bridge.rdata_i ;
  reg [31:0] \u_uart.u_bridge.rdata_q ;
  wire \u_uart.u_bridge.req_d ;
  wire \u_uart.u_bridge.req_o ;
  reg \u_uart.u_bridge.req_q ;
  wire \u_uart.u_bridge.rst_ni ;
  wire [7:0] \u_uart.u_bridge.rx_data_i ;
  wire \u_uart.u_bridge.rx_pop_o ;
  wire \u_uart.u_bridge.rx_valid_i ;
  wire [2:0] \u_uart.u_bridge.rxf_st_d ;
  reg [2:0] \u_uart.u_bridge.rxf_st_q ;
  wire [31:0] \u_uart.u_bridge.sh_d ;
  reg [31:0] \u_uart.u_bridge.sh_q ;
  wire [7:0] \u_uart.u_bridge.tx_data_o ;
  wire [3:0] \u_uart.u_bridge.tx_idx_d ;
  reg [3:0] \u_uart.u_bridge.tx_idx_q ;
  wire \u_uart.u_bridge.tx_ready_i ;
  wire [1:0] \u_uart.u_bridge.tx_st_d ;
  reg [1:0] \u_uart.u_bridge.tx_st_q ;
  wire \u_uart.u_bridge.tx_valid_o ;
  wire \u_uart.u_bridge.valid_i ;
  wire [31:0] \u_uart.u_bridge.wdata_d ;
  wire [31:0] \u_uart.u_bridge.wdata_o ;
  reg [31:0] \u_uart.u_bridge.wdata_q ;
  wire \u_uart.u_bridge.we_d ;
  wire \u_uart.u_bridge.we_o ;
  reg \u_uart.u_bridge.we_q ;
  wire [5:0] \u_uart.u_reg.addr_hit ;
  wire \u_uart.u_reg.addrmiss ;
  wire \u_uart.u_reg.clk_i ;
  wire \u_uart.u_reg.ctrl_llpbk_qs ;
  wire \u_uart.u_reg.ctrl_llpbk_wd ;
  wire [15:0] \u_uart.u_reg.ctrl_nco_qs ;
  wire [15:0] \u_uart.u_reg.ctrl_nco_wd ;
  wire \u_uart.u_reg.ctrl_nf_qs ;
  wire \u_uart.u_reg.ctrl_nf_wd ;
  wire \u_uart.u_reg.ctrl_parity_en_qs ;
  wire \u_uart.u_reg.ctrl_parity_en_wd ;
  wire \u_uart.u_reg.ctrl_parity_odd_qs ;
  wire \u_uart.u_reg.ctrl_parity_odd_wd ;
  wire \u_uart.u_reg.ctrl_rx_qs ;
  wire \u_uart.u_reg.ctrl_rx_wd ;
  wire \u_uart.u_reg.ctrl_slpbk_qs ;
  wire \u_uart.u_reg.ctrl_slpbk_wd ;
  wire \u_uart.u_reg.ctrl_tx_qs ;
  wire \u_uart.u_reg.ctrl_tx_wd ;
  wire \u_uart.u_reg.ctrl_we ;
  wire \u_uart.u_reg.devmode_i ;
  wire [1:0] \u_uart.u_reg.fifo_ctrl_flds_we ;
  wire \u_uart.u_reg.fifo_ctrl_qe ;
  wire \u_uart.u_reg.fifo_ctrl_rxrst_wd ;
  wire \u_uart.u_reg.fifo_ctrl_txrst_wd ;
  wire \u_uart.u_reg.fifo_ctrl_we ;
  wire [7:0] \u_uart.u_reg.fifo_status_rxlvl_qs ;
  wire [7:0] \u_uart.u_reg.fifo_status_txlvl_qs ;
  wire [29:0] \u_uart.u_reg.hw2reg ;
  wire [7:0] \u_uart.u_reg.rdata_qs ;
  wire \u_uart.u_reg.rdata_re ;
  wire [56:0] \u_uart.u_reg.reg2hw ;
  wire [4:0] \u_uart.u_reg.reg_addr ;
  wire [3:0] \u_uart.u_reg.reg_be ;
  wire \u_uart.u_reg.reg_busy ;
  wire \u_uart.u_reg.reg_error ;
  wire [31:0] \u_uart.u_reg.reg_rdata ;
  wire [31:0] \u_uart.u_reg.reg_rdata_next ;
  wire \u_uart.u_reg.reg_re ;
  wire [31:0] \u_uart.u_reg.reg_wdata ;
  wire \u_uart.u_reg.reg_we ;
  wire \u_uart.u_reg.rst_ni ;
  wire \u_uart.u_reg.shadow_busy ;
  wire \u_uart.u_reg.status_re ;
  wire \u_uart.u_reg.status_rxempty_qs ;
  wire \u_uart.u_reg.status_rxfull_qs ;
  wire \u_uart.u_reg.status_rxidle_qs ;
  wire \u_uart.u_reg.status_txempty_qs ;
  wire \u_uart.u_reg.status_txfull_qs ;
  wire \u_uart.u_reg.status_txidle_qs ;
  wire [108:0] \u_uart.u_reg.tl_i ;
  wire [65:0] \u_uart.u_reg.tl_o ;
  wire [65:0] \u_uart.u_reg.tl_o_pre ;
  wire [65:0] \u_uart.u_reg.tl_reg_d2h ;
  wire [108:0] \u_uart.u_reg.tl_reg_h2d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.clk_i ;
  wire \u_uart.u_reg.u_ctrl_llpbk.d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.de ;
  reg \u_uart.u_reg.u_ctrl_llpbk.q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.qe ;
  wire \u_uart.u_reg.u_ctrl_llpbk.qs ;
  wire \u_uart.u_reg.u_ctrl_llpbk.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wd ;
  wire \u_uart.u_reg.u_ctrl_llpbk.we ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_data ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nco.clk_i ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.d ;
  wire \u_uart.u_reg.u_ctrl_nco.de ;
  reg [15:0] \u_uart.u_reg.u_ctrl_nco.q ;
  wire \u_uart.u_reg.u_ctrl_nco.qe ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.qs ;
  wire \u_uart.u_reg.u_ctrl_nco.rst_ni ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wd ;
  wire \u_uart.u_reg.u_ctrl_nco.we ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.de ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.gen_w.unused_q ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.q ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.we ;
  wire [15:0] \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nf.clk_i ;
  wire \u_uart.u_reg.u_ctrl_nf.d ;
  wire \u_uart.u_reg.u_ctrl_nf.de ;
  reg \u_uart.u_reg.u_ctrl_nf.q ;
  wire \u_uart.u_reg.u_ctrl_nf.qe ;
  wire \u_uart.u_reg.u_ctrl_nf.qs ;
  wire \u_uart.u_reg.u_ctrl_nf.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_nf.wd ;
  wire \u_uart.u_reg.u_ctrl_nf.we ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_en.clk_i ;
  wire \u_uart.u_reg.u_ctrl_parity_en.d ;
  wire \u_uart.u_reg.u_ctrl_parity_en.de ;
  reg \u_uart.u_reg.u_ctrl_parity_en.q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.qe ;
  wire \u_uart.u_reg.u_ctrl_parity_en.qs ;
  wire \u_uart.u_reg.u_ctrl_parity_en.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_en.we ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.clk_i ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.d ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.de ;
  reg \u_uart.u_reg.u_ctrl_parity_odd.q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.qe ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.qs ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.we ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_rx.clk_i ;
  wire \u_uart.u_reg.u_ctrl_rx.d ;
  wire \u_uart.u_reg.u_ctrl_rx.de ;
  reg \u_uart.u_reg.u_ctrl_rx.q ;
  wire \u_uart.u_reg.u_ctrl_rx.qe ;
  wire \u_uart.u_reg.u_ctrl_rx.qs ;
  wire \u_uart.u_reg.u_ctrl_rx.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_rx.wd ;
  wire \u_uart.u_reg.u_ctrl_rx.we ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_slpbk.clk_i ;
  wire \u_uart.u_reg.u_ctrl_slpbk.d ;
  wire \u_uart.u_reg.u_ctrl_slpbk.de ;
  reg \u_uart.u_reg.u_ctrl_slpbk.q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.qe ;
  wire \u_uart.u_reg.u_ctrl_slpbk.qs ;
  wire \u_uart.u_reg.u_ctrl_slpbk.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wd ;
  wire \u_uart.u_reg.u_ctrl_slpbk.we ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_data ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_ctrl_tx.clk_i ;
  wire \u_uart.u_reg.u_ctrl_tx.d ;
  wire \u_uart.u_reg.u_ctrl_tx.de ;
  reg \u_uart.u_reg.u_ctrl_tx.q ;
  wire \u_uart.u_reg.u_ctrl_tx.qe ;
  wire \u_uart.u_reg.u_ctrl_tx.qs ;
  wire \u_uart.u_reg.u_ctrl_tx.rst_ni ;
  wire \u_uart.u_reg.u_ctrl_tx.wd ;
  wire \u_uart.u_reg.u_ctrl_tx.we ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_data ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  reg \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  wire \u_uart.u_reg.u_fifo_ctrl0_qe.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.de ;
  reg \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.qe ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.clk_i ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.de ;
  reg \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.qe ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.qs ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.rst_ni ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.de ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.gen_w.unused_q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.q ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.we ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_en ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.d ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.ds ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.q ;
  wire \u_uart.u_reg.u_fifo_status_rxlvl.qe ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.qs ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_rxlvl.wd ;
  wire \u_uart.u_reg.u_fifo_status_rxlvl.we ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.d ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.ds ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.q ;
  wire \u_uart.u_reg.u_fifo_status_txlvl.qe ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.qs ;
  wire [7:0] \u_uart.u_reg.u_fifo_status_txlvl.wd ;
  wire \u_uart.u_reg.u_fifo_status_txlvl.we ;
  wire [7:0] \u_uart.u_reg.u_rdata.d ;
  wire [7:0] \u_uart.u_reg.u_rdata.ds ;
  wire [7:0] \u_uart.u_reg.u_rdata.q ;
  wire \u_uart.u_reg.u_rdata.qe ;
  wire \u_uart.u_reg.u_rdata.qre ;
  wire [7:0] \u_uart.u_reg.u_rdata.qs ;
  wire \u_uart.u_reg.u_rdata.re ;
  wire [7:0] \u_uart.u_reg.u_rdata.wd ;
  wire \u_uart.u_reg.u_rdata.we ;
  wire \u_uart.u_reg.u_reg_if.a_ack ;
  wire \u_uart.u_reg.u_reg_if.addr_align_err ;
  wire [4:0] \u_uart.u_reg.u_reg_if.addr_o ;
  wire [3:0] \u_uart.u_reg.u_reg_if.be_o ;
  wire \u_uart.u_reg.u_reg_if.busy_i ;
  wire \u_uart.u_reg.u_reg_if.clk_i ;
  wire \u_uart.u_reg.u_reg_if.d_ack ;
  wire [3:0] \u_uart.u_reg.u_reg_if.en_ifetch_i ;
  wire \u_uart.u_reg.u_reg_if.err_internal ;
  wire \u_uart.u_reg.u_reg_if.error ;
  wire \u_uart.u_reg.u_reg_if.error_i ;
  reg \u_uart.u_reg.u_reg_if.error_q ;
  wire \u_uart.u_reg.u_reg_if.intg_error ;
  wire \u_uart.u_reg.u_reg_if.intg_error_o ;
  reg \u_uart.u_reg.u_reg_if.outstanding_q ;
  wire \u_uart.u_reg.u_reg_if.rd_req ;
  wire [31:0] \u_uart.u_reg.u_reg_if.rdata ;
  wire [31:0] \u_uart.u_reg.u_reg_if.rdata_i ;
  reg [31:0] \u_uart.u_reg.u_reg_if.rdata_q ;
  wire \u_uart.u_reg.u_reg_if.re_o ;
  reg [7:0] \u_uart.u_reg.u_reg_if.reqid_q ;
  reg [1:0] \u_uart.u_reg.u_reg_if.reqsz_q ;
  reg [2:0] \u_uart.u_reg.u_reg_if.rspop_q ;
  wire \u_uart.u_reg.u_reg_if.rst_ni ;
  wire [108:0] \u_uart.u_reg.u_reg_if.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.tl_o ;
  wire [65:0] \u_uart.u_reg.u_reg_if.tl_o_pre ;
  wire \u_uart.u_reg.u_reg_if.u_err.clk_i ;
  wire [3:0] \u_uart.u_reg.u_reg_if.u_err.mask ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_full ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_get ;
  wire \u_uart.u_reg.u_reg_if.u_err.op_partial ;
  wire \u_uart.u_reg.u_reg_if.u_err.rst_ni ;
  wire [108:0] \u_uart.u_reg.u_reg_if.u_err.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_o ;
  wire [31:0] \u_uart.u_reg.u_reg_if.wdata_o ;
  wire \u_uart.u_reg.u_reg_if.we_o ;
  wire \u_uart.u_reg.u_reg_if.wr_req ;
  wire [65:0] \u_uart.u_reg.u_rsp_intg_gen.tl_i ;
  wire [65:0] \u_uart.u_reg.u_rsp_intg_gen.tl_o ;
  wire \u_uart.u_reg.u_status_rxempty.d ;
  wire \u_uart.u_reg.u_status_rxempty.ds ;
  wire \u_uart.u_reg.u_status_rxempty.q ;
  wire \u_uart.u_reg.u_status_rxempty.qe ;
  wire \u_uart.u_reg.u_status_rxempty.qre ;
  wire \u_uart.u_reg.u_status_rxempty.qs ;
  wire \u_uart.u_reg.u_status_rxempty.re ;
  wire \u_uart.u_reg.u_status_rxempty.wd ;
  wire \u_uart.u_reg.u_status_rxempty.we ;
  wire \u_uart.u_reg.u_status_rxfull.d ;
  wire \u_uart.u_reg.u_status_rxfull.ds ;
  wire \u_uart.u_reg.u_status_rxfull.q ;
  wire \u_uart.u_reg.u_status_rxfull.qe ;
  wire \u_uart.u_reg.u_status_rxfull.qre ;
  wire \u_uart.u_reg.u_status_rxfull.qs ;
  wire \u_uart.u_reg.u_status_rxfull.re ;
  wire \u_uart.u_reg.u_status_rxfull.wd ;
  wire \u_uart.u_reg.u_status_rxfull.we ;
  wire \u_uart.u_reg.u_status_rxidle.d ;
  wire \u_uart.u_reg.u_status_rxidle.ds ;
  wire \u_uart.u_reg.u_status_rxidle.q ;
  wire \u_uart.u_reg.u_status_rxidle.qe ;
  wire \u_uart.u_reg.u_status_rxidle.qre ;
  wire \u_uart.u_reg.u_status_rxidle.qs ;
  wire \u_uart.u_reg.u_status_rxidle.re ;
  wire \u_uart.u_reg.u_status_rxidle.wd ;
  wire \u_uart.u_reg.u_status_rxidle.we ;
  wire \u_uart.u_reg.u_status_txempty.d ;
  wire \u_uart.u_reg.u_status_txempty.ds ;
  wire \u_uart.u_reg.u_status_txempty.q ;
  wire \u_uart.u_reg.u_status_txempty.qe ;
  wire \u_uart.u_reg.u_status_txempty.qre ;
  wire \u_uart.u_reg.u_status_txempty.qs ;
  wire \u_uart.u_reg.u_status_txempty.re ;
  wire \u_uart.u_reg.u_status_txempty.wd ;
  wire \u_uart.u_reg.u_status_txempty.we ;
  wire \u_uart.u_reg.u_status_txfull.d ;
  wire \u_uart.u_reg.u_status_txfull.ds ;
  wire \u_uart.u_reg.u_status_txfull.q ;
  wire \u_uart.u_reg.u_status_txfull.qe ;
  wire \u_uart.u_reg.u_status_txfull.qre ;
  wire \u_uart.u_reg.u_status_txfull.qs ;
  wire \u_uart.u_reg.u_status_txfull.re ;
  wire \u_uart.u_reg.u_status_txfull.wd ;
  wire \u_uart.u_reg.u_status_txfull.we ;
  wire \u_uart.u_reg.u_status_txidle.d ;
  wire \u_uart.u_reg.u_status_txidle.ds ;
  wire \u_uart.u_reg.u_status_txidle.q ;
  wire \u_uart.u_reg.u_status_txidle.qe ;
  wire \u_uart.u_reg.u_status_txidle.qre ;
  wire \u_uart.u_reg.u_status_txidle.qs ;
  wire \u_uart.u_reg.u_status_txidle.re ;
  wire \u_uart.u_reg.u_status_txidle.wd ;
  wire \u_uart.u_reg.u_status_txidle.we ;
  wire \u_uart.u_reg.u_wdata.clk_i ;
  wire [7:0] \u_uart.u_reg.u_wdata.d ;
  wire \u_uart.u_reg.u_wdata.de ;
  reg [7:0] \u_uart.u_reg.u_wdata.q ;
  wire \u_uart.u_reg.u_wdata.qe ;
  wire [7:0] \u_uart.u_reg.u_wdata.qs ;
  wire \u_uart.u_reg.u_wdata.rst_ni ;
  wire [7:0] \u_uart.u_reg.u_wdata.wd ;
  wire \u_uart.u_reg.u_wdata.we ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_data ;
  wire \u_uart.u_reg.u_wdata.wr_en ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.d ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.de ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.gen_w.unused_q ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.q ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.wd ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.we ;
  wire [7:0] \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_data ;
  wire \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_en ;
  wire \u_uart.u_reg.u_wdata0_qe.clk_i ;
  wire \u_uart.u_reg.u_wdata0_qe.d_i ;
  reg \u_uart.u_reg.u_wdata0_qe.q_o ;
  wire \u_uart.u_reg.u_wdata0_qe.rst_ni ;
  wire \u_uart.u_reg.wdata_flds_we ;
  wire \u_uart.u_reg.wdata_qe ;
  wire [7:0] \u_uart.u_reg.wdata_wd ;
  wire \u_uart.u_reg.wdata_we ;
  wire \u_uart.u_reg.wr_err ;
  wire \u_uart.u_uart_core.clk_i ;
  wire \u_uart.u_uart_core.event_rx_frame_err ;
  wire \u_uart.u_uart_core.event_rx_parity_err ;
  wire [29:0] \u_uart.u_uart_core.hw2reg ;
  wire \u_uart.u_uart_core.line_loopback ;
  reg [16:0] \u_uart.u_uart_core.nco_sum_q ;
  wire [56:0] \u_uart.u_uart_core.reg2hw ;
  wire \u_uart.u_uart_core.rst_ni ;
  wire \u_uart.u_uart_core.rx ;
  wire [7:0] \u_uart.u_uart_core.rx_data_o ;
  wire \u_uart.u_uart_core.rx_enable ;
  wire [7:0] \u_uart.u_uart_core.rx_fifo_data ;
  wire [4:0] \u_uart.u_uart_core.rx_fifo_depth ;
  wire \u_uart.u_uart_core.rx_fifo_pop ;
  wire \u_uart.u_uart_core.rx_fifo_rvalid ;
  wire \u_uart.u_uart_core.rx_fifo_wready ;
  wire \u_uart.u_uart_core.rx_fifo_wvalid ;
  wire \u_uart.u_uart_core.rx_in ;
  wire \u_uart.u_uart_core.rx_in_maj ;
  wire \u_uart.u_uart_core.rx_in_mx ;
  wire \u_uart.u_uart_core.rx_pop_i ;
  wire \u_uart.u_uart_core.rx_sync ;
  reg \u_uart.u_uart_core.rx_sync_q1 ;
  reg \u_uart.u_uart_core.rx_sync_q2 ;
  wire \u_uart.u_uart_core.rx_tick_baud ;
  wire \u_uart.u_uart_core.rx_uart_idle ;
  wire \u_uart.u_uart_core.rx_valid ;
  wire \u_uart.u_uart_core.rx_valid_o ;
  wire \u_uart.u_uart_core.rxnf_enable ;
  wire \u_uart.u_uart_core.sync_rx.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.d_i ;
  wire \u_uart.u_uart_core.sync_rx.d_o ;
  wire \u_uart.u_uart_core.sync_rx.intq ;
  wire \u_uart.u_uart_core.sync_rx.q_o ;
  wire \u_uart.u_uart_core.sync_rx.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.d_i ;
  reg \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_1.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.clk_i ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.d_i ;
  reg \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  wire \u_uart.u_uart_core.sync_rx.u_sync_2.rst_ni ;
  wire \u_uart.u_uart_core.sync_rx.unused_sig ;
  wire \u_uart.u_uart_core.sys_loopback ;
  wire \u_uart.u_uart_core.tick_baud_x16 ;
  wire \u_uart.u_uart_core.tx ;
  wire [7:0] \u_uart.u_uart_core.tx_data_i ;
  wire \u_uart.u_uart_core.tx_enable ;
  wire [7:0] \u_uart.u_uart_core.tx_fifo_data ;
  wire [3:0] \u_uart.u_uart_core.tx_fifo_depth ;
  wire \u_uart.u_uart_core.tx_fifo_rready ;
  wire \u_uart.u_uart_core.tx_fifo_rvalid ;
  wire [7:0] \u_uart.u_uart_core.tx_fifo_wdata ;
  wire \u_uart.u_uart_core.tx_fifo_wready ;
  wire \u_uart.u_uart_core.tx_fifo_wvalid ;
  wire \u_uart.u_uart_core.tx_out ;
  reg \u_uart.u_uart_core.tx_out_q ;
  wire \u_uart.u_uart_core.tx_ready_o ;
  wire \u_uart.u_uart_core.tx_uart_idle ;
  wire \u_uart.u_uart_core.tx_valid_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.clk_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.depth_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.err_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_empty ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_wptr ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_wptr ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  reg [127:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage_rdata ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clk_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clr_i ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.depth_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.empty_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.err_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.full_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_o ;
  reg [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rst_ni ;
  wire [3:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_o ;
  reg [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set ;
  wire [4:0] \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt ;
  reg \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.rdata_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rst_ni ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.rvalid_o ;
  wire [7:0] \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.wready_o ;
  wire \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.clk_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.depth_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.err_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_empty ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_rptr ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_rptr ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  reg [63:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage_rdata ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clk_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clr_i ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.depth_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.empty_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.err_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.full_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_o ;
  reg [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rst_ni ;
  wire [2:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_o ;
  reg [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb ;
  wire \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set ;
  wire [3:0] \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt ;
  reg \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.rdata_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rst_ni ;
  wire \u_uart.u_uart_core.u_uart_txfifo.rvalid_o ;
  wire [7:0] \u_uart.u_uart_core.u_uart_txfifo.wdata_i ;
  wire \u_uart.u_uart_core.u_uart_txfifo.wready_o ;
  wire \u_uart.u_uart_core.u_uart_txfifo.wvalid_i ;
  wire \u_uart.u_uart_core.uart_fifo_rxrst ;
  wire \u_uart.u_uart_core.uart_fifo_txrst ;
  wire [7:0] \u_uart.u_uart_core.uart_rdata ;
  wire [3:0] \u_uart.u_uart_core.uart_rx.baud_div_d ;
  reg [3:0] \u_uart.u_uart_core.uart_rx.baud_div_q ;
  wire [3:0] \u_uart.u_uart_core.uart_rx.bit_cnt_d ;
  reg [3:0] \u_uart.u_uart_core.uart_rx.bit_cnt_q ;
  wire \u_uart.u_uart_core.uart_rx.clk_i ;
  wire \u_uart.u_uart_core.uart_rx.frame_err ;
  wire \u_uart.u_uart_core.uart_rx.idle ;
  wire \u_uart.u_uart_core.uart_rx.idle_d ;
  reg \u_uart.u_uart_core.uart_rx.idle_q ;
  wire \u_uart.u_uart_core.uart_rx.parity_enable ;
  wire \u_uart.u_uart_core.uart_rx.parity_odd ;
  wire \u_uart.u_uart_core.uart_rx.rst_ni ;
  wire \u_uart.u_uart_core.uart_rx.rx ;
  wire [7:0] \u_uart.u_uart_core.uart_rx.rx_data ;
  wire \u_uart.u_uart_core.uart_rx.rx_enable ;
  wire \u_uart.u_uart_core.uart_rx.rx_parity_err ;
  wire \u_uart.u_uart_core.uart_rx.rx_valid ;
  reg \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  wire [10:0] \u_uart.u_uart_core.uart_rx.sreg_d ;
  reg [10:0] \u_uart.u_uart_core.uart_rx.sreg_q ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud_d ;
  reg \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  wire \u_uart.u_uart_core.uart_rx.tick_baud_x16 ;
  reg [3:0] \u_uart.u_uart_core.uart_tx.baud_div_q ;
  wire [3:0] \u_uart.u_uart_core.uart_tx.bit_cnt_d ;
  reg [3:0] \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  wire \u_uart.u_uart_core.uart_tx.clk_i ;
  wire \u_uart.u_uart_core.uart_tx.idle ;
  wire \u_uart.u_uart_core.uart_tx.parity_enable ;
  wire \u_uart.u_uart_core.uart_tx.rst_ni ;
  wire [10:0] \u_uart.u_uart_core.uart_tx.sreg_d ;
  reg [10:0] \u_uart.u_uart_core.uart_tx.sreg_q ;
  reg \u_uart.u_uart_core.uart_tx.tick_baud_q ;
  wire \u_uart.u_uart_core.uart_tx.tick_baud_x16 ;
  wire \u_uart.u_uart_core.uart_tx.tx ;
  wire \u_uart.u_uart_core.uart_tx.tx_d ;
  wire \u_uart.u_uart_core.uart_tx.tx_enable ;
  reg \u_uart.u_uart_core.uart_tx.tx_q ;
  wire \u_uart.u_uart_core.uart_tx.wr ;
  wire [7:0] \u_uart.u_uart_core.uart_tx.wr_data ;
  wire \u_uart.u_uart_core.uart_tx.wr_parity ;
  wire \u_uart.valid_i ;
  wire [31:0] \u_uart.wdata_o ;
  wire \u_uart.we_o ;
  wire [31:0] uart_addr;
  wire [3:0] uart_be;
  wire uart_err;
  wire uart_gnt;
  wire [31:0] \uart_host_adapter.addr_i ;
  wire [3:0] \uart_host_adapter.be_i ;
  wire \uart_host_adapter.clk_i ;
  wire \uart_host_adapter.err_o ;
  reg \uart_host_adapter.g_multiple_reqs.source_q ;
  wire \uart_host_adapter.gnt_o ;
  wire [3:0] \uart_host_adapter.instr_type_i ;
  wire \uart_host_adapter.intg_err ;
  wire \uart_host_adapter.intg_err_o ;
  wire \uart_host_adapter.intg_err_q ;
  wire [6:0] \uart_host_adapter.rdata_intg_o ;
  wire [31:0] \uart_host_adapter.rdata_o ;
  wire \uart_host_adapter.req_i ;
  wire \uart_host_adapter.rst_ni ;
  wire [3:0] \uart_host_adapter.tl_be ;
  wire [65:0] \uart_host_adapter.tl_i ;
  wire [108:0] \uart_host_adapter.tl_o ;
  wire [108:0] \uart_host_adapter.tl_out ;
  wire [7:0] \uart_host_adapter.tl_source ;
  wire [6:0] \uart_host_adapter.u_cmd_intg_gen.cmd_intg ;
  wire [31:0] \uart_host_adapter.u_cmd_intg_gen.data_final ;
  wire [6:0] \uart_host_adapter.u_cmd_intg_gen.data_intg ;
  wire [108:0] \uart_host_adapter.u_cmd_intg_gen.tl_i ;
  wire [108:0] \uart_host_adapter.u_cmd_intg_gen.tl_o ;
  wire \uart_host_adapter.unused_addr_bottom_bits ;
  wire \uart_host_adapter.valid_o ;
  wire [31:0] \uart_host_adapter.wdata_i ;
  wire [6:0] \uart_host_adapter.wdata_intg_i ;
  wire \uart_host_adapter.we_i ;
  wire [31:0] uart_rdata;
  wire uart_req;
  wire uart_rvalid;
  wire [31:0] uart_wdata;
  wire uart_we;
  wire \xbar.clk_i ;
  wire [2:0] \xbar.dev_sel_s1n_6 ;
  wire \xbar.rst_ni ;
  wire [3:0] \xbar.scanmode_i ;
  wire [65:0] \xbar.tl_gpio_i ;
  wire [108:0] \xbar.tl_gpio_o ;
  wire [65:0] \xbar.tl_pwm_i ;
  wire [108:0] \xbar.tl_pwm_o ;
  wire [65:0] \xbar.tl_rv_timer_i ;
  wire [108:0] \xbar.tl_rv_timer_o ;
  wire [263:0] \xbar.tl_s1n_6_ds_d2h ;
  wire [435:0] \xbar.tl_s1n_6_ds_h2d ;
  wire [65:0] \xbar.tl_s1n_6_us_d2h ;
  wire [108:0] \xbar.tl_s1n_6_us_h2d ;
  wire [108:0] \xbar.tl_uart_host_i ;
  wire [65:0] \xbar.tl_uart_host_o ;
  wire [65:0] \xbar.tl_uart_i ;
  wire [108:0] \xbar.tl_uart_o ;
  wire \xbar.u_s1n_6.accept_t_req ;
  wire \xbar.u_s1n_6.accept_t_rsp ;
  wire [22:0] \xbar.u_s1n_6.blanked_auser ;
  wire \xbar.u_s1n_6.clk_i ;
  wire [2:0] \xbar.u_s1n_6.dev_select_i ;
  reg [2:0] \xbar.u_s1n_6.dev_select_outstanding ;
  wire [2:0] \xbar.u_s1n_6.dev_select_t ;
  wire \xbar.u_s1n_6.fifo_h.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.err_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.full_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [109:0] \xbar.u_s1n_6.fifo_h.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.rvalid_o ;
  wire [109:0] \xbar.u_s1n_6.fifo_h.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.fifo_h.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.err_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.full_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.fifo_h.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.fifo_h.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.fifo_h.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.fifo_h.rst_ni ;
  wire [2:0] \xbar.u_s1n_6.fifo_h.spare_req_i ;
  wire [2:0] \xbar.u_s1n_6.fifo_h.spare_req_o ;
  wire \xbar.u_s1n_6.fifo_h.spare_rsp_i ;
  wire \xbar.u_s1n_6.fifo_h.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.fifo_h.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.fifo_h.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.fifo_h.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.fifo_h.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.gen_passthru_fifo.unused_clr ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o ;
  wire [107:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clk_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clr_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.depth_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.err_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.full_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.gen_passthru_fifo.unused_clr ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rready_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rvalid_o ;
  wire [64:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wdata_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wready_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wvalid_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rst_ni ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_o ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_i ;
  wire \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_o ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_i ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_o ;
  wire \xbar.u_s1n_6.gen_err_resp.err_resp.clk_i ;
  reg [3:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type ;
  reg [2:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode ;
  reg \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending ;
  reg [1:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_size ;
  reg [7:0] \xbar.u_s1n_6.gen_err_resp.err_resp.err_source ;
  wire \xbar.u_s1n_6.gen_err_resp.err_resp.rst_ni ;
  wire [108:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_i ;
  wire [65:0] \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_o ;
  wire \xbar.u_s1n_6.gen_u_o[0].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[1].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[2].dev_select ;
  wire \xbar.u_s1n_6.gen_u_o[3].dev_select ;
  wire \xbar.u_s1n_6.hfifo_reqready ;
  wire \xbar.u_s1n_6.hold_all_requests ;
  reg [8:0] \xbar.u_s1n_6.num_req_outstanding ;
  wire \xbar.u_s1n_6.rst_ni ;
  wire [263:0] \xbar.u_s1n_6.tl_d_i ;
  wire [435:0] \xbar.u_s1n_6.tl_d_o ;
  wire [108:0] \xbar.u_s1n_6.tl_h_i ;
  wire [65:0] \xbar.u_s1n_6.tl_h_o ;
  wire [65:0] \xbar.u_s1n_6.tl_t_i ;
  wire [108:0] \xbar.u_s1n_6.tl_t_o ;
  wire [65:0] \xbar.u_s1n_6.tl_t_p ;
  wire [329:0] \xbar.u_s1n_6.tl_u_i ;
  wire [544:0] \xbar.u_s1n_6.tl_u_o ;
  wire \xbar.unused_scanmode ;
  assign \u_uart.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \$1005y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_req  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1022y  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_ack  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._pwm_param_we , \u_pwm.u_reg.u_pwm_param_cdc.dst_re_o , \u_pwm.u_reg.u_pwm_param_cdc.dst_regwen_o  } = \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q  & { \u_pwm.u_reg.u_pwm_param_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_cdc.dst_req , \u_pwm.u_reg.u_pwm_param_cdc.dst_req  };
  assign \u_pwm.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [3:2], 2'h0 };
  assign \u_pwm.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [3:2] == 2'h1;
  assign \u_pwm.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [3:2] == 2'h2;
  assign \$1101y  = \u_pwm.u_reg.reg_re  || \u_pwm.u_reg.reg_we ;
  assign \$1102y  = | \u_pwm.u_reg.addr_hit ;
  assign \$1103y  = ! \$1102y ;
  assign \u_pwm.u_reg.addrmiss  = \$1101y  ? \$1103y  : 1'h0;
  assign \$1109y  = \u_pwm.u_reg.addr_hit [0] & \$1108y ;
  assign \$1113y  = \u_pwm.u_reg.addr_hit [1] & \$1106y [0];
  assign \$1114y  = \$1109y  | \$1113y ;
  assign \$1108y  = | \$1106y ;
  assign \$1118y  = \u_pwm.u_reg.addr_hit [2] & \$1108y ;
  assign \$1119y  = \$1114y  | \$1118y ;
  assign \u_uart.u_reg.reg_error  = \u_uart.u_reg.addrmiss  | \u_uart.u_reg.wr_err ;
  assign \u_pwm.u_reg.wr_err  = \u_pwm.u_reg.reg_we  & \$1119y ;
  assign \$1121y  = \u_pwm.u_reg.addr_hit [0] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  = \$1121y  & \$1122y ;
  assign \$1124y  = \u_pwm.u_reg.addr_hit [1] & \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  = \$1124y  & \$1122y ;
  assign \$1127y  = \u_pwm.u_reg.addr_hit [2] & \u_pwm.u_reg.reg_we ;
  assign \$1122y  = ! \u_pwm.u_reg.reg_error ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  = \$1127y  & \$1122y ;
  assign \$1140y  = \u_pwm.u_pwm_core.beat_ctr_q  + 27'h0000001;
  assign \$1141y  = \u_pwm.u_pwm_core.beat_end  ? 27'h0000000 : \$1140y ;
  assign \u_pwm.u_pwm_core.beat_ctr_d  = \u_pwm.u_reg.u_cfg0_qe.q_o  ? 27'h0000000 : \$1141y ;
  assign \u_pwm.u_pwm_core.beat_end  = \u_pwm.u_pwm_core.beat_ctr_q  == \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_pwm_core.lshift  = 4'hf - \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.beat_ctr_en  = \u_pwm.u_reg.u_cfg0_qe.q_o  | \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_pwm_core.phase_ctr_en  = \u_pwm.u_pwm_core.beat_end  & \u_pwm.u_pwm_core.beat_ctr_en ;
  assign \u_pwm.u_pwm_core.phase_ctr_incr  = 16'h0001 << \u_pwm.u_pwm_core.lshift ;
  assign { \u_pwm.u_pwm_core.phase_ctr_overflow , \u_pwm.u_pwm_core.phase_ctr_next  } = { 1'h0, \u_pwm.u_pwm_core.phase_ctr_q  } + { 1'h0, \u_pwm.u_pwm_core.phase_ctr_incr  };
  assign \u_pwm.u_pwm_core.phase_ctr_d  = \u_pwm.u_reg.u_cfg0_qe.q_o  ? 16'h0000 : \u_pwm.u_pwm_core.phase_ctr_next ;
  assign \$1160y  = { 28'h0000000, \u_pwm.u_reg.u_cfg_dc_resn.q  } + 32'd1;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask  = 16'hffff >> \$1160y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  & \$1162y ;
  assign \$1162y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_mask ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked  = \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q  & \$1162y ;
  assign { \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap , \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase  } = { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase  } + { 1'h0, \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_masked  };
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded  = \u_pwm.u_pwm_core.phase_ctr_q  >= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase ;
  assign \$1176y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  | \$1175y ;
  assign \$1175y  = ~ \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.off_phase_exceeded ;
  assign \$1178y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase_exceeded  & \$1175y ;
  assign \$1179y  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_wrap  ? \$1176y  : \$1178y ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  ? \$1179y  : 1'h0;
  assign \u_gpio.gen_filter[0].u_filter.update_stored_value  = \u_gpio.gen_filter[0].u_filter.diff_ctr_d  == 2'h3;
  assign \$1202y  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[0].u_filter.filter_q ;
  assign \$1203y  = \u_gpio.gen_filter[0].u_filter.diff_ctr_q  >= 2'h3;
  assign \$1204y  = \u_gpio.gen_filter[0].u_filter.diff_ctr_q  + 2'h1;
  assign \$1205y  = \$1203y  ? 2'h3 : \$1204y ;
  assign \u_gpio.gen_filter[0].u_filter.diff_ctr_d  = \$1202y  ? 2'h0 : \$1205y ;
  assign \u_gpio.gen_filter[0].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [0] ? \u_gpio.gen_filter[0].u_filter.stored_value_q  : \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.update_stored_value  = \u_gpio.gen_filter[1].u_filter.diff_ctr_d  == 2'h3;
  assign \$1226y  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  != \u_gpio.gen_filter[1].u_filter.filter_q ;
  assign \$1227y  = \u_gpio.gen_filter[1].u_filter.diff_ctr_q  >= 2'h3;
  assign \$1228y  = \u_gpio.gen_filter[1].u_filter.diff_ctr_q  + 2'h1;
  assign \$1229y  = \$1227y  ? 2'h3 : \$1228y ;
  assign \u_gpio.gen_filter[1].u_filter.diff_ctr_d  = \$1226y  ? 2'h0 : \$1229y ;
  assign \u_gpio.gen_filter[1].u_filter.filter_o  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [1] ? \u_gpio.gen_filter[1].u_filter.stored_value_q  : \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \$1241y  = { \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.intr_hw.reg2hw_intr_test_qe_i  } & \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.intr_hw.g_intr_event.new_event  = \$1241y  | \u_gpio.intr_hw.event_intr_i ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de  = | \u_gpio.intr_hw.g_intr_event.new_event ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d  = \u_gpio.intr_hw.g_intr_event.new_event  | \u_gpio.u_reg.u_intr_state.q ;
  assign \$1249y  = ~ \u_gpio.data_in_q ;
  assign \$1250y  = \$1249y  & { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_rise  = \$1250y  & \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \$1253y  = \u_gpio.data_in_q  & \$1252y ;
  assign \u_gpio.event_intr_fall  = \$1253y  & \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.event_intr_acthigh  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  } & \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \$1252y  = ~ { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_actlow  = \$1252y  & \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \$1258y  = \u_gpio.event_intr_rise  | \u_gpio.event_intr_fall ;
  assign \$1259y  = \$1258y  | \u_gpio.event_intr_actlow ;
  assign \u_gpio.intr_hw.event_intr_i  = \$1259y  | \u_gpio.event_intr_acthigh ;
  assign \u_gpio.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \u_gpio.u_reg.reg_we  = \u_gpio.u_reg.u_reg_if.a_ack  & \$1266y ;
  assign \u_gpio.u_reg.reg_re  = \u_gpio.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$1282y  = \u_gpio.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$1290y  = \u_gpio.u_reg.reg_error  || \u_gpio.u_reg.reg_we ;
  assign \$1291y  = \$1290y  ? 32'd4294967295 : \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  = ~ \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.reg_error  = \u_gpio.u_reg.addrmiss  | \u_gpio.u_reg.wr_err ;
  assign \u_gpio.u_reg.u_intr_state.qe  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  | \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \$1375y  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de  ? \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d  : \u_gpio.u_reg.u_intr_state.q ;
  assign \$1376y  = ~ \u_gpio.u_reg.reg_wdata [1:0];
  assign \$1377y  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  ? \$1376y  : 2'h3;
  assign \u_gpio.u_reg.u_intr_state.wr_data  = \$1375y  & \$1377y ;
  assign \u_gpio.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_gpio.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [4:2] == 3'h1;
  assign \u_gpio.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [4:2] == 3'h2;
  assign \u_gpio.u_reg.addr_hit [3] = \u_uart.u_bridge.addr_q [4:2] == 3'h3;
  assign \u_gpio.u_reg.addr_hit [4] = \u_uart.u_bridge.addr_q [4:2] == 3'h4;
  assign \u_gpio.u_reg.addr_hit [5] = \u_uart.u_bridge.addr_q [4:2] == 3'h5;
  assign \u_gpio.u_reg.addr_hit [6] = \u_uart.u_bridge.addr_q [4:2] == 3'h6;
  assign \$1455y  = \u_gpio.u_reg.reg_re  || \u_gpio.u_reg.reg_we ;
  assign \$1457y  = ! \$1456y ;
  assign \u_gpio.u_reg.addrmiss  = \$1455y  ? \$1457y  : 1'h0;
  assign \$1463y  = \u_gpio.u_reg.addr_hit [0] & \$1106y [0];
  assign \$1467y  = \u_gpio.u_reg.addr_hit [1] & \$1106y [0];
  assign \$1468y  = \$1463y  | \$1467y ;
  assign \$1472y  = \u_gpio.u_reg.addr_hit [2] & \$1106y [0];
  assign \$1473y  = \$1468y  | \$1472y ;
  assign \$1477y  = \u_gpio.u_reg.addr_hit [3] & \$1106y [0];
  assign \$1478y  = \$1473y  | \$1477y ;
  assign \$1482y  = \u_gpio.u_reg.addr_hit [4] & \$1106y [0];
  assign \$1483y  = \$1478y  | \$1482y ;
  assign \$1486y  = | \$1106y [1:0];
  assign \$1487y  = \u_gpio.u_reg.addr_hit [5] & \$1486y ;
  assign \$1488y  = \$1483y  | \$1487y ;
  assign \$1492y  = \u_gpio.u_reg.addr_hit [6] & \$1106y [0];
  assign \$1493y  = \$1488y  | \$1492y ;
  assign \u_gpio.u_reg.wr_err  = \u_gpio.u_reg.reg_we  & \$1493y ;
  assign \$1495y  = \u_gpio.u_reg.addr_hit [0] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we  = \$1495y  & \$1496y ;
  assign \$1498y  = \u_gpio.u_reg.addr_hit [1] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_enable_we  = \$1498y  & \$1496y ;
  assign \$1501y  = \u_gpio.u_reg.addr_hit [2] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.intr_hw.reg2hw_intr_test_qe_i  = \$1501y  & \$1496y ;
  assign \$1507y  = \u_gpio.u_reg.addr_hit [4] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.direct_qe  = \$1507y  & \$1496y ;
  assign \$1510y  = \u_gpio.u_reg.addr_hit [5] & \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.intr_ctrl_we  = \$1510y  & \$1496y ;
  assign \$1513y  = \u_gpio.u_reg.addr_hit [6] & \u_gpio.u_reg.reg_we ;
  assign \$1496y  = ! \u_gpio.u_reg.reg_error ;
  assign \u_gpio.u_reg.ctrl_en_input_filter_we  = \$1513y  & \$1496y ;
  assign \u_rv_timer.mtimecmp_update  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  | \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  | \u_rv_timer.mtimecmp_update ;
  assign \$1522y  = ~ \u_rv_timer.mtimecmp_update ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d  = \u_rv_timer.intr_timer_state_d  & \$1522y ;
  assign \$1524y  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i  & \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  = \$1524y  | \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.intr_timer_state_d  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event  | \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \$1536y  = \u_rv_timer.gen_harts[0].u_core.tick_count  == \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \$1537y  = \u_rv_timer.gen_harts[0].u_core.tick_count  + 12'h001;
  assign \$1540y  = \u_rv_timer.gen_harts[0].u_core.tick_count  >= \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  = \u_rv_timer.u_reg.u_ctrl.q  & \$1540y ;
  assign \u_rv_timer.gen_harts[0].u_core.mtime_d  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  } + { 56'h00000000000000, \u_rv_timer.u_reg.u_cfg0_step.q  };
  assign \$1543y  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  } >= { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i  = \u_rv_timer.u_reg.u_ctrl.q  & \$1543y ;
  assign \u_rv_timer.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \$1266y  = \u_gpio.u_reg.u_reg_if.u_err.op_full  | \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_rv_timer.u_reg.reg_we  = \u_rv_timer.u_reg.u_reg_if.a_ack  & \$1266y ;
  assign \u_rv_timer.u_reg.reg_re  = \u_rv_timer.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$1566y  = \u_rv_timer.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$1574y  = \u_rv_timer.u_reg.reg_error  || \u_rv_timer.u_reg.reg_we ;
  assign \$1575y  = \$1574y  ? 32'd4294967295 : \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  = ~ \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.u_reg_if.u_err.op_full  = ! \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105];
  assign \u_gpio.u_reg.u_reg_if.u_err.op_partial  = \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] == 3'h1;
  assign \u_gpio.u_reg.u_reg_if.u_err.op_get  = \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] == 3'h4;
  assign \u_rv_timer.u_reg.reg_error  = \u_rv_timer.u_reg.addrmiss  | \u_rv_timer.u_reg.wr_err ;
  assign \u_rv_timer.u_reg.u_intr_state0.qe  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  assign \$1675y  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de  ? \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d  : \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \$1676y  = ~ \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \$1677y  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  ? \$1676y  : 1'h1;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_data  = \$1675y  & \$1677y ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.qe  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  ? \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  : \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.qe  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  | \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_data  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  ? \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  : \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.addr_hit [0] = ! { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.addr_hit [1] = \u_uart.u_bridge.addr_q [8:2] == 7'h40;
  assign \u_rv_timer.u_reg.addr_hit [2] = \u_uart.u_bridge.addr_q [8:2] == 7'h41;
  assign \u_rv_timer.u_reg.addr_hit [3] = \u_uart.u_bridge.addr_q [8:2] == 7'h42;
  assign \u_rv_timer.u_reg.addr_hit [4] = \u_uart.u_bridge.addr_q [8:2] == 7'h43;
  assign \u_rv_timer.u_reg.addr_hit [5] = \u_uart.u_bridge.addr_q [8:2] == 7'h44;
  assign \u_rv_timer.u_reg.addr_hit [6] = \u_uart.u_bridge.addr_q [8:2] == 7'h45;
  assign \u_rv_timer.u_reg.addr_hit [7] = \u_uart.u_bridge.addr_q [8:2] == 7'h46;
  assign \u_rv_timer.u_reg.addr_hit [8] = \u_uart.u_bridge.addr_q [8:2] == 7'h47;
  assign \$1751y  = \u_rv_timer.u_reg.reg_re  || \u_rv_timer.u_reg.reg_we ;
  assign \$1752y  = | \u_rv_timer.u_reg.addr_hit ;
  assign \$1753y  = ! \$1752y ;
  assign \u_rv_timer.u_reg.addrmiss  = \$1751y  ? \$1753y  : 1'h0;
  assign \$1759y  = \u_rv_timer.u_reg.addr_hit [0] & \$1106y [0];
  assign \$1763y  = \u_rv_timer.u_reg.addr_hit [1] & \$1106y [0];
  assign \$1764y  = \$1759y  | \$1763y ;
  assign \$1768y  = \u_rv_timer.u_reg.addr_hit [2] & \$1106y [0];
  assign \$1769y  = \$1764y  | \$1768y ;
  assign \$1773y  = \u_rv_timer.u_reg.addr_hit [3] & \$1106y [0];
  assign \$1774y  = \$1769y  | \$1773y ;
  assign \$1777y  = | \$1106y [2:0];
  assign \$1778y  = \u_rv_timer.u_reg.addr_hit [4] & \$1777y ;
  assign \$1779y  = \$1774y  | \$1778y ;
  assign \$1783y  = \u_rv_timer.u_reg.addr_hit [5] & \$1108y ;
  assign \$1784y  = \$1779y  | \$1783y ;
  assign \$1788y  = \u_rv_timer.u_reg.addr_hit [6] & \$1108y ;
  assign \$1789y  = \$1784y  | \$1788y ;
  assign \$1793y  = \u_rv_timer.u_reg.addr_hit [7] & \$1108y ;
  assign \$1794y  = \$1789y  | \$1793y ;
  assign \$1106y  = ~ \u_rv_timer.u_reg.reg_be ;
  assign \$1798y  = \u_rv_timer.u_reg.addr_hit [8] & \$1108y ;
  assign \$1799y  = \$1794y  | \$1798y ;
  assign \u_rv_timer.u_reg.wr_err  = \u_rv_timer.u_reg.reg_we  & \$1799y ;
  assign \$1801y  = \u_rv_timer.u_reg.addr_hit [0] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.ctrl_we  = \$1801y  & \$1802y ;
  assign \$1804y  = \u_rv_timer.u_reg.addr_hit [1] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.intr_enable0_we  = \$1804y  & \$1802y ;
  assign \$1807y  = \u_rv_timer.u_reg.addr_hit [2] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we  = \$1807y  & \$1802y ;
  assign \$1810y  = \u_rv_timer.u_reg.addr_hit [3] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i  = \$1810y  & \$1802y ;
  assign \$1813y  = \u_rv_timer.u_reg.addr_hit [4] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.cfg0_we  = \$1813y  & \$1802y ;
  assign \$1816y  = \u_rv_timer.u_reg.addr_hit [5] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we  = \$1816y  & \$1802y ;
  assign \$1819y  = \u_rv_timer.u_reg.addr_hit [6] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we  = \$1819y  & \$1802y ;
  assign \$1822y  = \u_rv_timer.u_reg.addr_hit [7] & \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i  = \$1822y  & \$1802y ;
  assign \$1825y  = \u_rv_timer.u_reg.addr_hit [8] & \u_rv_timer.u_reg.reg_we ;
  assign \$1802y  = ! \u_rv_timer.u_reg.reg_error ;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i  = \$1825y  & \$1802y ;
  assign \$21y  = \u_uart.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$216y  = \u_uart.u_reg.reg_re  || \u_uart.u_reg.reg_we ;
  assign \$218y  = ! \$217y ;
  assign \u_uart.u_reg.addrmiss  = \$216y  ? \$218y  : 1'h0;
  assign \$224y  = \u_gpio.u_reg.addr_hit [0] & \$1108y ;
  assign \$229y  = \$224y  | \$1467y ;
  assign \$234y  = \$229y  | \$1472y ;
  assign \$239y  = \$234y  | \$1477y ;
  assign \$244y  = \$239y  | \$1482y ;
  assign \$248y  = \u_gpio.u_reg.addr_hit [5] & \$1777y ;
  assign \$249y  = \$244y  | \$248y ;
  assign \u_uart.u_reg.wr_err  = \u_uart.u_reg.reg_we  & \$249y ;
  assign \$251y  = \u_gpio.u_reg.addr_hit [0] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.ctrl_we  = \$251y  & \$252y ;
  assign \$257y  = \u_gpio.u_reg.addr_hit [2] & \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.rdata_re  = \$257y  & \$252y ;
  assign \$260y  = \u_gpio.u_reg.addr_hit [3] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_wdata0_qe.d_i  = \$260y  & \$252y ;
  assign \$263y  = \u_gpio.u_reg.addr_hit [4] & \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.d_i  = \$263y  & \$252y ;
  assign \$252y  = ! \u_uart.u_reg.reg_error ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.clr_i  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q  & \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_uart_core.u_uart_txfifo.clr_i  = \u_uart.u_reg.u_fifo_ctrl_txrst.q  & \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_reg.status_rxempty_qs  = ~ \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_reg.status_txidle_qs  = \u_uart.u_uart_core.tx_uart_idle  & \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.status_txempty_qs  = ~ \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_reg.status_rxfull_qs  = ~ \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_reg.status_txfull_qs  = ~ \u_uart.u_uart_core.tx_fifo_wready ;
  assign \$285y  = { 1'h0, \u_uart.u_uart_core.nco_sum_q [15:0] } + { 1'h0, \u_uart.u_reg.u_ctrl_nco.q  };
  assign \$287y  = \u_uart.u_uart_core.tx_uart_idle  & \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_uart_core.u_uart_txfifo.rready_i  = \$287y  & \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wdata_i  = \u_uart.u_reg.u_wdata.q  | \u_uart.u_uart_core.tx_data_i ;
  assign \$29y  = \u_uart.u_reg.reg_error  || \u_uart.u_reg.reg_we ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wvalid_i  = \u_uart.u_reg.u_wdata0_qe.q_o  | \u_uart.u_uart_core.tx_valid_i ;
  assign \$296y  = ~ \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  assign \u_uart.u_uart_core.tx_fifo_wready  = \$296y  & \$294y ;
  assign \$299y  = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \$30y  = \$29y  ? 32'd4294967295 : \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_uart_core.tx_fifo_rvalid  = \$299y  & \$294y ;
  assign \$302y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h7;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  & \$302y ;
  assign \$304y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] == 3'h7;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  & \$304y ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [3] = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3];
  assign \u_uart.u_uart_core.u_uart_txfifo.full_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3], \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] };
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  assign \$311y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3] == \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3];
  assign \$312y  = { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] } - { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] };
  assign \$313y  = 4'h8 - { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] };
  assign \$314y  = \$313y  + { 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] };
  assign \$315y  = \$311y  ? \$312y  : \$314y ;
  assign \u_uart.u_uart_core.tx_fifo_depth  = \u_uart.u_uart_core.u_uart_txfifo.full_o  ? 4'h8 : \$315y ;
  assign \$320y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  + 4'h1;
  assign \$327y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  + 4'h1;
  assign \$331y  = \u_uart.u_uart_core.u_uart_txfifo.wvalid_i  & \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  = \$331y  & \$294y ;
  assign \$334y  = \u_uart.u_uart_core.tx_fifo_rvalid  & \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \$294y  = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  = \$334y  & \$294y ;
  assign \$337y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0] }) < $signed(5'h08);
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int  = \$337y  ? \$338y  : 8'hxx;
  assign \$341y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] }) < $signed(5'h08);
  assign \$342y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] }) >= $signed(1'h0);
  assign \$343y  = \$342y  && \$341y ;
  assign \$344y  = \$343y  ? 8'hff : 8'h00;
  assign \u_uart.u_uart_core.tx_fifo_data  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty  ? 8'h00 : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  assign \$353y  = { 1'h0, \u_uart.u_uart_core.uart_tx.baud_div_q  } + 5'h01;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  = ~ \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \$361y  = \u_uart.u_reg.u_ctrl_parity_en.q  ? \u_uart.u_uart_core.uart_tx.wr_parity  : 1'h1;
  assign \$363y  = | \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  assign \$364y  = \u_uart.u_uart_core.uart_tx.tick_baud_q  && \$363y ;
  assign \$365y  = \u_uart.u_uart_core.uart_tx.bit_cnt_q  - 4'h1;
  assign \$375y  = ! \u_uart.u_uart_core.uart_tx.bit_cnt_q ;
  assign \u_uart.u_uart_core.tx_uart_idle  = \u_uart.u_reg.u_ctrl_tx.q  ? \$375y  : 1'h1;
  assign \$377y  = ^ \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.u_uart_core.uart_tx.wr_parity  = \$377y  ^ \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign cio_tx_o = \u_uart.u_reg.u_ctrl_llpbk.q  ? cio_rx_i : \u_uart.u_uart_core.tx_out_q ;
  assign \$394y  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  & \u_uart.u_uart_core.rx_sync_q1 ;
  assign \$395y  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  & \u_uart.u_uart_core.rx_sync_q2 ;
  assign \$396y  = \$394y  | \$395y ;
  assign \$397y  = \u_uart.u_uart_core.rx_sync_q1  & \u_uart.u_uart_core.rx_sync_q2 ;
  assign \u_uart.u_uart_core.rx_in_maj  = \$396y  | \$397y ;
  assign \u_uart.u_uart_core.rx_in_mx  = \u_uart.u_reg.u_ctrl_nf.q  ? \u_uart.u_uart_core.rx_in_maj  : \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \$400y  = \u_uart.u_reg.u_ctrl_llpbk.q  ? 1'h1 : \u_uart.u_uart_core.rx_in_mx ;
  assign \u_uart.u_uart_core.uart_rx.rx  = \u_uart.u_reg.u_ctrl_slpbk.q  ? \u_uart.u_uart_core.uart_tx.tx_q  : \$400y ;
  assign \$407y  = { 1'h0, \u_uart.u_uart_core.uart_rx.baud_div_q  } + 5'h01;
  assign \$410y  = ! \u_uart.u_uart_core.uart_rx.rx ;
  assign \$411y  = \u_uart.u_uart_core.uart_rx.idle_q  && \$410y ;
  assign \$413y  = ! \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \$414y  = \$413y  && \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \$362y  = \u_uart.u_reg.u_ctrl_parity_en.q  ? 4'hb : 4'ha;
  assign \$416y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  == \$362y ;
  assign \$417y  = \$416y  && \u_uart.u_uart_core.uart_rx.rx ;
  assign \$418y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  - 4'h1;
  assign \$419y  = \u_uart.u_uart_core.uart_rx.bit_cnt_q  == 4'h1;
  assign \$440y  = \u_uart.u_uart_core.uart_rx.tick_baud_q  & \$419y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wdata_i  = \u_uart.u_reg.u_ctrl_parity_en.q  ? \u_uart.u_uart_core.uart_rx.sreg_q [8:1] : \u_uart.u_uart_core.uart_rx.sreg_q [9:2];
  assign \$442y  = ~ \u_uart.u_uart_core.uart_rx.sreg_q [10];
  assign \u_uart.u_uart_core.event_rx_frame_err  = \u_uart.u_uart_core.uart_rx.rx_valid_q  & \$442y ;
  assign \$444y  = \u_uart.u_reg.u_ctrl_parity_en.q  & \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \$445y  = ^ { \u_uart.u_uart_core.uart_rx.sreg_q [9:1], \u_uart.u_reg.u_ctrl_parity_odd.q  };
  assign \u_uart.u_uart_core.event_rx_parity_err  = \$444y  & \$445y ;
  assign \$447y  = ~ \u_uart.u_uart_core.event_rx_frame_err ;
  assign \$448y  = \u_uart.u_uart_core.uart_rx.rx_valid_q  & \$447y ;
  assign \$449y  = ~ \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i  = \$448y  & \$449y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rready_i  = \u_uart.u_reg.rdata_re  | \u_uart.u_uart_core.rx_pop_i ;
  assign \$457y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  assign \u_uart.u_uart_core.rx_fifo_wready  = \$457y  & \$455y ;
  assign \$460y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_bridge.rx_valid_i  = \$460y  & \$455y ;
  assign \$463y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hf;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  & \$463y ;
  assign \$465y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] == 4'hf;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  & \$465y ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [4] = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_rxfifo.full_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4], \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] };
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  == \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q ;
  assign \$472y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4] == \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4];
  assign \$473y  = { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] } - { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] };
  assign \$474y  = 5'h10 - { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] };
  assign \$475y  = \$474y  + { 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] };
  assign \$476y  = \$472y  ? \$473y  : \$475y ;
  assign \u_uart.u_uart_core.rx_fifo_depth  = \u_uart.u_uart_core.u_uart_rxfifo.full_o  ? 5'h10 : \$476y ;
  assign \$481y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  + 5'h01;
  assign \$488y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  + 5'h01;
  assign \$492y  = \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i  & \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  = \$492y  & \$455y ;
  assign \$495y  = \u_uart.u_bridge.rx_valid_i  & \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  assign \$455y  = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  = \$495y  & \$455y ;
  assign \$498y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0] }) < $signed(6'h10);
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int  = \$498y  ? \$499y  : 8'hxx;
  assign \$502y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] }) < $signed(6'h10);
  assign \$503y  = $signed({ 1'h0, \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] }) >= $signed(1'h0);
  assign \$504y  = \$503y  && \$502y ;
  assign \$505y  = \$504y  ? 8'hff : 8'h00;
  assign \u_uart.u_bridge.rx_data_i  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty  ? 8'h00 : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  assign \$511y  = | \u_uart.u_bridge.rxf_st_q ;
  assign \u_uart.u_uart_core.rx_pop_i  = \$511y  && \u_uart.u_bridge.rx_valid_i ;
  assign \$517y  = \u_uart.u_bridge.rx_data_i  == 8'ha5;
  assign \$518y  = \u_uart.u_bridge.rx_valid_i  && \$517y ;
  assign \$530y  = \u_uart.u_bridge.idx_q  == 2'h3;
  assign \$523y  = \u_uart.u_bridge.idx_q  + 2'h1;
  assign \$590y  = \u_uart.u_bridge.tx_st_q  == 2'h1;
  assign \$592y  = \u_uart.u_bridge.tx_idx_q  == 4'h7;
  assign \$593y  = \u_uart.u_bridge.tx_idx_q  + 4'h1;
  assign \$531y  = $signed(\u_uart.u_bridge.op_q ) == $signed(8'h01);
  assign \$595y  = \u_uart.u_bridge.tx_idx_q  == 4'h3;
  assign \$596y  = \$531y  && \$595y ;
  assign \u_uart.u_reg.reg_we  = \u_uart.u_reg.u_reg_if.a_ack  & \$1266y ;
  assign \$564y  = \u_uart.u_bridge.req_q  && \uart_host_adapter.gnt_o ;
  assign \$616y  = \uart_host_adapter.g_multiple_reqs.source_q  + 1'h1;
  assign \u_rv_timer.u_reg.reg_be  = \u_uart.u_bridge.we_q  ? \u_uart.u_bridge.be_q  : 4'hf;
  assign \$622y  = & \u_uart.u_bridge.be_q ;
  assign \$623y  = \$622y  ? 3'h0 : 3'h1;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105] = \u_uart.u_bridge.we_q  ? \$623y  : 3'h4;
  assign \$634y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80000;
  assign \$636y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80020;
  assign \$638y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80040;
  assign \$640y  = \u_uart.u_bridge.addr_q [31:12] == 20'h80060;
  assign \$645y  = \xbar.u_s1n_6.tl_t_p [64:62] == 3'h1;
  assign \u_uart.rdata_i  = \$645y  ? \xbar.u_s1n_6.tl_t_p [47:16] : 32'd0;
  assign \xbar.u_s1n_6.accept_t_req  = \u_uart.u_bridge.req_q  & \uart_host_adapter.gnt_o ;
  assign \$653y  = \xbar.u_s1n_6.num_req_outstanding  + 9'h001;
  assign \$655y  = \xbar.u_s1n_6.num_req_outstanding  - 9'h001;
  assign \$659y  = | \xbar.u_s1n_6.num_req_outstanding ;
  assign \$660y  = \xbar.u_s1n_6.dev_select_t  != \xbar.u_s1n_6.dev_select_outstanding ;
  assign \xbar.u_s1n_6.hold_all_requests  = \$659y  & \$660y ;
  assign \xbar.u_s1n_6.gen_u_o[0].dev_select  = \$680y  & \$681y ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[0].dev_select ;
  assign \u_uart.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[0].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[1].dev_select  = \$686y  & \$681y ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[1].dev_select ;
  assign \u_pwm.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[1].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[2].dev_select  = \$692y  & \$681y ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[2].dev_select ;
  assign \u_gpio.u_reg.reg_wdata  = \xbar.u_s1n_6.gen_u_o[2].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \xbar.u_s1n_6.gen_u_o[3].dev_select  = \$698y  & \$681y ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.gen_u_o[3].dev_select ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd  = \xbar.u_s1n_6.gen_u_o[3].dev_select  ? \u_uart.u_bridge.wdata_q  : 32'd4294967295;
  assign \$680y  = ! \xbar.u_s1n_6.dev_select_t ;
  assign \$686y  = \xbar.u_s1n_6.dev_select_t  == 3'h1;
  assign \$692y  = \xbar.u_s1n_6.dev_select_t  == 3'h2;
  assign \$698y  = \xbar.u_s1n_6.dev_select_t  == 3'h3;
  assign \uart_host_adapter.gnt_o  = \u_uart.u_bridge.req_q  & \xbar.u_s1n_6.hfifo_reqready ;
  assign \$716y  = ! \xbar.u_s1n_6.dev_select_outstanding ;
  assign \$718y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h1;
  assign \$720y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h2;
  assign \$722y  = \xbar.u_s1n_6.dev_select_outstanding  == 3'h3;
  assign \$724y  = \u_uart.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16] = \$724y  ? \u_uart.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$726y  = \u_pwm.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16] = \$726y  ? \u_pwm.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$728y  = \u_gpio.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16] = \$728y  ? \u_gpio.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$730y  = \u_rv_timer.u_reg.u_reg_if.rspop_q  == 3'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16] = \$730y  ? \u_rv_timer.u_reg.u_reg_if.rdata_q  : 32'd0;
  assign \$732y  = \xbar.u_s1n_6.dev_select_t  >= 3'h4;
  assign \$733y  = \u_uart.u_bridge.req_q  & \$732y ;
  assign \$681y  = ~ \xbar.u_s1n_6.hold_all_requests ;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108] = \$733y  & \$681y ;
  assign \$741y  = \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108] && \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0];
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] = ~ \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending ;
  assign \$753y  = 4'h6 == \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type ;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16] = \$753y  ? 32'd0 : 32'd4294967295;
  assign \$756y  = \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  == 3'h4;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62] = \$756y  ? 3'h1 : 3'h0;
  assign \u_pwm.u_reg.u_reg_if.a_ack  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  & \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \u_pwm.u_reg.reg_we  = \u_pwm.u_reg.u_reg_if.a_ack  & \$1266y ;
  assign \u_pwm.u_reg.reg_re  = \u_pwm.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \$780y  = \u_pwm.u_reg.reg_re  ? 3'h1 : 3'h0;
  assign \$788y  = \u_pwm.u_reg.reg_error  || \u_pwm.u_reg.reg_we ;
  assign \$789y  = \$788y  ? 32'd4294967295 : \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \$793y  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o  & \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \$794y  = \u_pwm.u_reg.u_reg_if.outstanding_q  | \$793y ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  = ~ \$794y ;
  assign \u_uart.u_reg.reg_re  = \u_uart.u_reg.u_reg_if.a_ack  & \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_pwm.u_reg.reg_error  = \u_pwm.u_reg.addrmiss  | \u_pwm.u_reg.wr_err ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_to_src  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q  && \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \$895y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_req  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$912y  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_ack  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg.u_cfg0_qe.d_i , \u_pwm.u_reg.u_cfg_cdc.dst_re_o , \u_pwm.u_reg.u_cfg_cdc.dst_regwen_o  } = \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  & { \u_pwm.u_reg.u_cfg_cdc.dst_req , \u_pwm.u_reg.u_cfg_cdc.dst_req , \u_pwm.u_reg.u_cfg_cdc.dst_req  };
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  && \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \$950y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_req  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \$967y  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  ^ \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_ack  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  ^ \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign { \u_pwm.u_reg._pwm_en_we , \u_pwm.u_reg.u_pwm_en_cdc.dst_re_o , \u_pwm.u_reg.u_pwm_en_cdc.dst_regwen_o  } = \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  & { \u_pwm.u_reg.u_pwm_en_cdc.dst_req , \u_pwm.u_reg.u_pwm_en_cdc.dst_req , \u_pwm.u_reg.u_pwm_en_cdc.dst_req  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  = \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  && \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  assign \$auto$bmuxmap.cc:84:execute$1962 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [15:8] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [7:0];
  assign \$auto$bmuxmap.cc:84:execute$1962 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [31:24] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [23:16];
  assign \$auto$bmuxmap.cc:84:execute$1962 [23:16] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [47:40] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [39:32];
  assign \$auto$bmuxmap.cc:84:execute$1962 [31:24] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [63:56] : \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [55:48];
  assign \$auto$bmuxmap.cc:84:execute$1967 [7:0] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$1962 [15:8] : \$auto$bmuxmap.cc:84:execute$1962 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$1967 [15:8] = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$1962 [31:24] : \$auto$bmuxmap.cc:84:execute$1962 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$1970  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$1967 [15:8] : \$auto$bmuxmap.cc:84:execute$1967 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$1972 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [15:8] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [7:0];
  assign \$auto$bmuxmap.cc:84:execute$1972 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [31:24] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [23:16];
  assign \$auto$bmuxmap.cc:84:execute$1972 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [47:40] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [39:32];
  assign \$auto$bmuxmap.cc:84:execute$1972 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [63:56] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [55:48];
  assign \$auto$bmuxmap.cc:84:execute$1972 [39:32] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [79:72] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [71:64];
  assign \$auto$bmuxmap.cc:84:execute$1972 [47:40] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [95:88] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [87:80];
  assign \$auto$bmuxmap.cc:84:execute$1972 [55:48] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [111:104] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [103:96];
  assign \$auto$bmuxmap.cc:84:execute$1972 [63:56] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [0] ? \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [127:120] : \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [119:112];
  assign \$auto$bmuxmap.cc:84:execute$1981 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$1972 [15:8] : \$auto$bmuxmap.cc:84:execute$1972 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$1981 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$1972 [31:24] : \$auto$bmuxmap.cc:84:execute$1972 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$1981 [23:16] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$1972 [47:40] : \$auto$bmuxmap.cc:84:execute$1972 [39:32];
  assign \$auto$bmuxmap.cc:84:execute$1981 [31:24] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [1] ? \$auto$bmuxmap.cc:84:execute$1972 [63:56] : \$auto$bmuxmap.cc:84:execute$1972 [55:48];
  assign \$auto$bmuxmap.cc:84:execute$1986 [7:0] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$1981 [15:8] : \$auto$bmuxmap.cc:84:execute$1981 [7:0];
  assign \$auto$bmuxmap.cc:84:execute$1986 [15:8] = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2] ? \$auto$bmuxmap.cc:84:execute$1981 [31:24] : \$auto$bmuxmap.cc:84:execute$1981 [23:16];
  assign \$auto$bmuxmap.cc:84:execute$1989  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3] ? \$auto$bmuxmap.cc:84:execute$1986 [15:8] : \$auto$bmuxmap.cc:84:execute$1986 [7:0];
  assign \$auto$rtlil.cc:3097:Not$1949  = ~ \$345y ;
  assign \$auto$rtlil.cc:3097:Not$1956  = ~ \$506y ;
  assign \$auto$rtlil.cc:3144:And$1951  = \$345y  & { \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i , \u_uart.u_uart_core.u_uart_txfifo.wdata_i  };
  assign \$auto$rtlil.cc:3144:And$1958  = \$506y  & { \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i , \u_uart.u_uart_core.u_uart_rxfifo.wdata_i  };
  assign \$auto$rtlil.cc:3144:And$1953  = \$auto$rtlil.cc:3097:Not$1949  & \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage ;
  assign \$auto$rtlil.cc:3144:And$1960  = \$auto$rtlil.cc:3097:Not$1956  & \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage ;
  assign \$347y  = \$auto$rtlil.cc:3144:And$1953  | \$auto$rtlil.cc:3144:And$1951 ;
  assign \$508y  = \$auto$rtlil.cc:3144:And$1960  | \$auto$rtlil.cc:3144:And$1958 ;
  assign \$auto$demuxmap.cc:63:execute$1991  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h0;
  assign \$auto$demuxmap.cc:63:execute$1994  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h1;
  assign \$auto$demuxmap.cc:63:execute$1997  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h2;
  assign \$auto$demuxmap.cc:63:execute$2000  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h3;
  assign \$auto$demuxmap.cc:63:execute$2003  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h4;
  assign \$auto$demuxmap.cc:63:execute$2006  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h5;
  assign \$auto$demuxmap.cc:63:execute$2009  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h6;
  assign \$auto$demuxmap.cc:63:execute$2012  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0] == 3'h7;
  assign \$auto$demuxmap.cc:63:execute$2015  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h0;
  assign \$auto$demuxmap.cc:63:execute$2018  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h1;
  assign \$auto$demuxmap.cc:63:execute$2021  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h2;
  assign \$auto$demuxmap.cc:63:execute$2024  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h3;
  assign \$auto$demuxmap.cc:63:execute$2027  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h4;
  assign \$auto$demuxmap.cc:63:execute$2030  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h5;
  assign \$auto$demuxmap.cc:63:execute$2033  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h6;
  assign \$auto$demuxmap.cc:63:execute$2036  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h7;
  assign \$auto$demuxmap.cc:63:execute$2039  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h8;
  assign \$auto$demuxmap.cc:63:execute$2042  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'h9;
  assign \$auto$demuxmap.cc:63:execute$2045  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'ha;
  assign \$auto$demuxmap.cc:63:execute$2048  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hb;
  assign \$auto$demuxmap.cc:63:execute$2051  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hc;
  assign \$auto$demuxmap.cc:63:execute$2054  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hd;
  assign \$auto$demuxmap.cc:63:execute$2057  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'he;
  assign \$auto$demuxmap.cc:63:execute$2060  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0] == 4'hf;
  assign \$345y [7:0] = \$auto$demuxmap.cc:63:execute$1991  ? \$344y  : 8'h00;
  assign \$345y [15:8] = \$auto$demuxmap.cc:63:execute$1994  ? \$344y  : 8'h00;
  assign \$345y [23:16] = \$auto$demuxmap.cc:63:execute$1997  ? \$344y  : 8'h00;
  assign \$345y [31:24] = \$auto$demuxmap.cc:63:execute$2000  ? \$344y  : 8'h00;
  assign \$345y [39:32] = \$auto$demuxmap.cc:63:execute$2003  ? \$344y  : 8'h00;
  assign \$345y [47:40] = \$auto$demuxmap.cc:63:execute$2006  ? \$344y  : 8'h00;
  assign \$345y [55:48] = \$auto$demuxmap.cc:63:execute$2009  ? \$344y  : 8'h00;
  assign \$345y [63:56] = \$auto$demuxmap.cc:63:execute$2012  ? \$344y  : 8'h00;
  assign \$506y [7:0] = \$auto$demuxmap.cc:63:execute$2015  ? \$505y  : 8'h00;
  assign \$506y [15:8] = \$auto$demuxmap.cc:63:execute$2018  ? \$505y  : 8'h00;
  assign \$506y [23:16] = \$auto$demuxmap.cc:63:execute$2021  ? \$505y  : 8'h00;
  assign \$506y [31:24] = \$auto$demuxmap.cc:63:execute$2024  ? \$505y  : 8'h00;
  assign \$506y [39:32] = \$auto$demuxmap.cc:63:execute$2027  ? \$505y  : 8'h00;
  assign \$506y [47:40] = \$auto$demuxmap.cc:63:execute$2030  ? \$505y  : 8'h00;
  assign \$506y [55:48] = \$auto$demuxmap.cc:63:execute$2033  ? \$505y  : 8'h00;
  assign \$506y [63:56] = \$auto$demuxmap.cc:63:execute$2036  ? \$505y  : 8'h00;
  assign \$506y [71:64] = \$auto$demuxmap.cc:63:execute$2039  ? \$505y  : 8'h00;
  assign \$506y [79:72] = \$auto$demuxmap.cc:63:execute$2042  ? \$505y  : 8'h00;
  assign \$506y [87:80] = \$auto$demuxmap.cc:63:execute$2045  ? \$505y  : 8'h00;
  assign \$506y [95:88] = \$auto$demuxmap.cc:63:execute$2048  ? \$505y  : 8'h00;
  assign \$506y [103:96] = \$auto$demuxmap.cc:63:execute$2051  ? \$505y  : 8'h00;
  assign \$506y [111:104] = \$auto$demuxmap.cc:63:execute$2054  ? \$505y  : 8'h00;
  assign \$506y [119:112] = \$auto$demuxmap.cc:63:execute$2057  ? \$505y  : 8'h00;
  assign \$506y [127:120] = \$auto$demuxmap.cc:63:execute$2060  ? \$505y  : 8'h00;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.beat_ctr_q  <= 27'h0000000;
    else if (\u_pwm.u_pwm_core.beat_ctr_en ) \u_pwm.u_pwm_core.beat_ctr_q  <= \u_pwm.u_pwm_core.beat_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.phase_ctr_q  <= 16'h0000;
    else if (\u_pwm.u_pwm_core.phase_ctr_en ) \u_pwm.u_pwm_core.phase_ctr_q  <= \u_pwm.u_pwm_core.phase_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.num_req_outstanding  <= 9'h000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1662 ) \xbar.u_s1n_6.num_req_outstanding  <= \$procmux$304_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_source  <= 8'h00;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1667 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_source  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_size  <= 2'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1667 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_size  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  <= 3'h4;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1667 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_opcode  <= \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type  <= 4'h9;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1667 ) \xbar.u_s1n_6.gen_err_resp.err_resp.err_instr_type  <= 4'h9;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.dev_select_outstanding  <= 3'h0;
    else if (\xbar.u_s1n_6.accept_t_req ) \xbar.u_s1n_6.dev_select_outstanding  <= \xbar.u_s1n_6.dev_select_t ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \uart_host_adapter.g_multiple_reqs.source_q  <= 1'h0;
    else if (\$564y ) \uart_host_adapter.g_multiple_reqs.source_q  <= \$procmux$350_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.tx_q  <= 1'h1;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1691 ) \u_uart.u_uart_core.uart_tx.tx_q  <= \u_uart.u_uart_core.uart_tx.tx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.sreg_q  <= 11'h7ff;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1694 ) \u_uart.u_uart_core.uart_tx.sreg_q  <= \u_uart.u_uart_core.uart_tx.sreg_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.bit_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1694 ) \u_uart.u_uart_core.uart_tx.bit_cnt_q  <= \u_uart.u_uart_core.uart_tx.bit_cnt_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.baud_div_q  <= 4'h0;
    else if (\u_uart.u_uart_core.nco_sum_q [16]) \u_uart.u_uart_core.uart_tx.baud_div_q  <= \$353y [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.sreg_q  <= 11'h000;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1705 ) \u_uart.u_uart_core.uart_rx.sreg_q  <= \u_uart.u_uart_core.uart_rx.sreg_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.idle_q  <= 1'h1;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1701 ) \u_uart.u_uart_core.uart_rx.idle_q  <= \u_uart.u_uart_core.uart_rx.idle_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.bit_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1701 ) \u_uart.u_uart_core.uart_rx.bit_cnt_q  <= \u_uart.u_uart_core.uart_rx.bit_cnt_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.baud_div_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1714 ) \u_uart.u_uart_core.uart_rx.baud_div_q  <= \u_uart.u_uart_core.uart_rx.baud_div_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1717 ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= \$procmux$1411_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= 4'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1720 ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= \$procmux$1392_Y ;
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [63:56] <= \$347y [63:56];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [55:48] <= \$347y [55:48];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [47:40] <= \$347y [47:40];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [39:32] <= \$347y [39:32];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [31:24] <= \$347y [31:24];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [23:16] <= \$347y [23:16];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [15:8] <= \$347y [15:8];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage [7:0] <= \$347y [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= 5'h00;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1731 ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q  <= \$procmux$1041_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= 5'h00;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1734 ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q  <= \$procmux$1022_Y ;
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [79:72] <= \$508y [79:72];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [71:64] <= \$508y [71:64];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [63:56] <= \$508y [63:56];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [55:48] <= \$508y [55:48];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [47:40] <= \$508y [47:40];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [39:32] <= \$508y [39:32];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [31:24] <= \$508y [31:24];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [23:16] <= \$508y [23:16];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [15:8] <= \$508y [15:8];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [127:120] <= \$508y [127:120];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [119:112] <= \$508y [119:112];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [111:104] <= \$508y [111:104];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [103:96] <= \$508y [103:96];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [95:88] <= \$508y [95:88];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [87:80] <= \$508y [87:80];
  always @(posedge clk_i)
    if (\u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage [7:0] <= \$508y [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_wdata.q  <= 8'h00;
    else if (\u_uart.u_reg.u_wdata0_qe.d_i ) \u_uart.u_reg.u_wdata.q  <= \u_uart.u_reg.reg_wdata [7:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.rspop_q  <= \$21y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.rdata_q  <= \$30y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_uart.u_reg.u_reg_if.a_ack ) \u_uart.u_reg.u_reg_if.error_q  <= \u_uart.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_txrst.q  <= 1'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_txrst.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl_rxrst.q  <= 1'h0;
    else if (\u_uart.u_reg.u_fifo_ctrl0_qe.d_i ) \u_uart.u_reg.u_fifo_ctrl_rxrst.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_tx.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_tx.q  <= \u_uart.u_reg.reg_wdata [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_slpbk.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_slpbk.q  <= \u_uart.u_reg.reg_wdata [4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_rx.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_rx.q  <= \u_uart.u_reg.reg_wdata [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_parity_odd.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_parity_odd.q  <= \u_uart.u_reg.reg_wdata [7];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_parity_en.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_parity_en.q  <= \u_uart.u_reg.reg_wdata [6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_nf.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_nf.q  <= \u_uart.u_reg.reg_wdata [2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_nco.q  <= 16'h0970;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_nco.q  <= \u_uart.u_reg.reg_wdata [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_ctrl_llpbk.q  <= 1'h0;
    else if (\u_uart.u_reg.ctrl_we ) \u_uart.u_reg.u_ctrl_llpbk.q  <= \u_uart.u_reg.reg_wdata [5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.we_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1781 ) \u_uart.u_bridge.we_q  <= \u_uart.u_bridge.we_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.wdata_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1796 ) \u_uart.u_bridge.wdata_q  <= \u_uart.u_bridge.wdata_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.sh_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1803 ) \u_uart.u_bridge.sh_q  <= \u_uart.u_bridge.sh_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.rxf_st_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1824 ) \u_uart.u_bridge.rxf_st_q  <= \u_uart.u_bridge.rxf_st_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.req_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1831 ) \u_uart.u_bridge.req_q  <= \u_uart.u_bridge.req_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.rdata_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1834 ) \u_uart.u_bridge.rdata_q  <= \u_uart.rdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.op_q  <= 8'h00;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1837 ) \u_uart.u_bridge.op_q  <= \u_uart.u_bridge.rx_data_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.idx_q  <= 2'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1852 ) \u_uart.u_bridge.idx_q  <= \u_uart.u_bridge.idx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.bebyte_q  <= 8'h0f;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1855 ) \u_uart.u_bridge.bebyte_q  <= \u_uart.u_bridge.rx_data_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.be_q  <= 4'hf;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1796 ) \u_uart.u_bridge.be_q  <= \u_uart.u_bridge.be_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.any_err_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1834 ) \u_uart.u_bridge.any_err_q  <= \xbar.u_s1n_6.tl_t_p [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.addr_q  <= 32'd0;
    else if (\$auto$opt_dff.cc:272:make_patterns_logic$1876 ) \u_uart.u_bridge.addr_q  <= { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_timer_v_upper0.q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_timer_v_upper0.qe ) \u_rv_timer.u_reg.u_timer_v_upper0.q  <= \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_timer_v_lower0.q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_timer_v_lower0.qe ) \u_rv_timer.u_reg.u_timer_v_lower0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.rspop_q  <= \$1566y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.rdata_q  <= \$1575y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_rv_timer.u_reg.u_reg_if.a_ack ) \u_rv_timer.u_reg.u_reg_if.error_q  <= \u_rv_timer.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_intr_state0.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.u_intr_state0.qe ) \u_rv_timer.u_reg.u_intr_state0.q  <= \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_intr_enable0.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.intr_enable0_we ) \u_rv_timer.u_reg.u_intr_enable0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_ctrl.q  <= 1'h0;
    else if (\u_rv_timer.u_reg.ctrl_we ) \u_rv_timer.u_reg.u_ctrl.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_upper0_0.q  <= 32'd4294967295;
    else if (\u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ) \u_rv_timer.u_reg.u_compare_upper0_0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_lower0_0.q  <= 32'd4294967295;
    else if (\u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ) \u_rv_timer.u_reg.u_compare_lower0_0.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_cfg0_step.q  <= 8'h01;
    else if (\u_rv_timer.u_reg.cfg0_we ) \u_rv_timer.u_reg.u_cfg0_step.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_cfg0_prescale.q  <= 12'h000;
    else if (\u_rv_timer.u_reg.cfg0_we ) \u_rv_timer.u_reg.u_cfg0_prescale.q  <= \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.rspop_q  <= \$780y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.rdata_q  <= \$789y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_pwm.u_reg.u_reg_if.a_ack ) \u_pwm.u_reg.u_reg_if.error_q  <= \u_pwm.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  <= 16'h0000;
    else if (\u_pwm.u_reg._pwm_param_we ) \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  <= \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q  <= 16'h7fff;
    else if (\u_pwm.u_reg._pwm_param_we ) \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q  <= \u_pwm.u_reg.u_pwm_param_cdc.src_q [31:16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1900 ) \u_pwm.u_reg.u_pwm_param_cdc.txn_bits_q  <= \$procmux$1511_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.src_q  <= 32'd2147418112;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1900 ) \u_pwm.u_reg.u_pwm_param_cdc.src_q  <= \$procmux$1515_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1906 ) \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  <= \$procmux$1576_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1909 ) \u_pwm.u_reg.u_pwm_en_cdc.txn_bits_q  <= \$procmux$46_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.src_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1909 ) \u_pwm.u_reg.u_pwm_en_cdc.src_q  <= \$procmux$50_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1915 ) \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q  <= \$procmux$59_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en.q  <= 1'h0;
    else if (\u_pwm.u_reg._pwm_en_we ) \u_pwm.u_reg.u_pwm_en.q  <= \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_dc_resn.q  <= 4'h7;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_dc_resn.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cntr_en.q  <= 1'h0;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_cntr_en.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_clk_div.q  <= 27'h0008000;
    else if (\u_pwm.u_reg.u_cfg0_qe.d_i ) \u_pwm.u_reg.u_cfg_clk_div.q  <= \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  <= 3'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1922 ) \u_pwm.u_reg.u_cfg_cdc.txn_bits_q  <= \$procmux$132_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.src_q  <= 32'd939556864;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1922 ) \u_pwm.u_reg.u_cfg_cdc.src_q  <= \$procmux$136_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.src_busy_q  <= 1'h0;
    else if (\$auto$opt_dff.cc:247:make_patterns_logic$1928 ) \u_pwm.u_reg.u_cfg_cdc.src_busy_q  <= \$procmux$145_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  <= 1'h0;
    else if (!\u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d ) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_q  <= \u_pwm.u_reg.u_pwm_en.q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.rspop_q  <= 3'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.rspop_q  <= \$1282y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.reqsz_q  <= 2'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.reqsz_q  <= 2'h2;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.reqid_q  <= 8'h00;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.reqid_q  <= { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.rdata_q  <= 32'd0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.rdata_q  <= \$1291y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.error_q  <= 1'h0;
    else if (\u_gpio.u_reg.u_reg_if.a_ack ) \u_gpio.u_reg.u_reg_if.error_q  <= \u_gpio.u_reg.reg_error ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_state.q  <= 2'h0;
    else if (\u_gpio.u_reg.u_intr_state.qe ) \u_gpio.u_reg.u_intr_state.q  <= \u_gpio.u_reg.u_intr_state.wr_data ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_enable.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_enable_we ) \u_gpio.u_reg.u_intr_enable.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_rising.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_rising.q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q  <= \u_gpio.u_reg.reg_wdata [7:6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q  <= \u_gpio.u_reg.reg_wdata [5:4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q  <= \u_gpio.u_reg.reg_wdata [9:8];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_intr_ctrl_en_falling.q  <= 2'h0;
    else if (\u_gpio.u_reg.intr_ctrl_we ) \u_gpio.u_reg.u_intr_ctrl_en_falling.q  <= \u_gpio.u_reg.reg_wdata [3:2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_ctrl_en_input_filter.q  <= 4'h0;
    else if (\u_gpio.u_reg.ctrl_en_input_filter_we ) \u_gpio.u_reg.u_ctrl_en_input_filter.q  <= \u_gpio.u_reg.reg_wdata [3:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[1].u_filter.update_stored_value ) \u_gpio.gen_filter[1].u_filter.stored_value_q  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.stored_value_q  <= 1'h0;
    else if (\u_gpio.gen_filter[0].u_filter.update_stored_value ) \u_gpio.gen_filter[0].u_filter.stored_value_q  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_q  <= 2'h0;
    else if (\u_gpio.u_reg.direct_qe ) \u_gpio.cio_gpio_q  <= \u_gpio.u_reg.reg_wdata [1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.cio_gpio_en_q  <= 2'h0;
    else if (\u_gpio.u_reg.direct_qe ) \u_gpio.cio_gpio_en_q  <= \u_gpio.u_reg.reg_wdata [3:2];
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1658  = | { \xbar.u_s1n_6.tl_t_p [65], \xbar.u_s1n_6.accept_t_req  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1660  = { \xbar.u_s1n_6.tl_t_p [65], \xbar.u_s1n_6.accept_t_req  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1687  = { \u_uart.u_uart_core.u_uart_txfifo.rready_i , \u_uart.u_reg.u_ctrl_tx.q  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1689  = { \$364y , \u_uart.u_reg.u_ctrl_tx.q  } != 2'h1;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1694  = { \$364y , \u_uart.u_uart_core.u_uart_txfifo.rready_i , \u_uart.u_reg.u_ctrl_tx.q  } != 3'h1;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1701  = | { \$414y , \$411y  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1703  = { \$417y , \$411y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1714  = | { \$411y , \u_uart.u_uart_core.nco_sum_q [16] };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1717  = | { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set , \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i , \u_uart.u_uart_core.u_uart_txfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1720  = | { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set , \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i , \u_uart.u_uart_core.u_uart_txfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1731  = | { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set , \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i , \u_uart.u_uart_core.u_uart_rxfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1734  = | { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set , \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i , \u_uart.u_uart_core.u_uart_rxfifo.clr_i  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1769  = { \$procmux$507_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1771  = { \$procmux$607_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1773  = { \$procmux$507_CMP , \$530y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1775  = { \$procmux$607_CMP , \$530y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1777  = { \$procmux$607_CMP , \$531y  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1779  = | { \$procmux$1000_CMP , \$procmux$607_CMP , \$procmux$507_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1794  = | { \$procmux$607_CMP , \$procmux$507_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1799  = { \$auto$opt_reduce.cc:137:opt_pmux$1656 , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1801  = | { \$procmux$1000_CMP , \$auto$opt_reduce.cc:137:opt_pmux$1656  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1810  = { \$procmux$812_CMP , \u_uart.u_bridge.rx_valid_i  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1812  = { \$procmux$448_CMP , \xbar.u_s1n_6.tl_t_p [65] } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1814  = { \$procmux$1000_CMP , \$518y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1816  = { \$procmux$812_CMP , \$522y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1822  = { \$procmux$492_CMP , \$564y  } != 2'h2;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1829  = | { \$procmux$894_CMP , \$procmux$492_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1846  = { \$procmux$607_CMP , \$531y , \$530y  } != 3'h5;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1848  = { \$procmux$507_CMP , \$530y  } != 2'h3;
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1850  = | { \$procmux$1000_CMP , \$procmux$812_CMP , \$procmux$607_CMP , \$procmux$507_CMP  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1900  = | { \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1906  = | { \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_param_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1909  = | { \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1915  = | { \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_pwm_en_cdc.src_ack  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1922  = | { \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_cfg_cdc.dst_to_src  };
  assign \$auto$opt_dff.cc:247:make_patterns_logic$1928  = | { \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i , \u_pwm.u_reg.u_cfg_cdc.src_ack  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1662  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1658 , \$auto$opt_dff.cc:247:make_patterns_logic$1660  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1667  = & { \$741y , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1691  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1687 , \$auto$opt_dff.cc:247:make_patterns_logic$1689  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1705  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1701 , \$auto$opt_dff.cc:247:make_patterns_logic$1703  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1781  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1769 , \$auto$opt_dff.cc:247:make_patterns_logic$1771 , \$auto$opt_dff.cc:247:make_patterns_logic$1773 , \$auto$opt_dff.cc:247:make_patterns_logic$1775 , \$auto$opt_dff.cc:247:make_patterns_logic$1777 , \$auto$opt_dff.cc:247:make_patterns_logic$1779  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1796  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1769 , \$auto$opt_dff.cc:247:make_patterns_logic$1771 , \$auto$opt_dff.cc:247:make_patterns_logic$1773 , \$auto$opt_dff.cc:247:make_patterns_logic$1775 , \$auto$opt_dff.cc:247:make_patterns_logic$1777 , \$auto$opt_dff.cc:247:make_patterns_logic$1794  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1803  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1799 , \$auto$opt_dff.cc:247:make_patterns_logic$1801  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1824  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1769 , \$auto$opt_dff.cc:247:make_patterns_logic$1771 , \$auto$opt_dff.cc:247:make_patterns_logic$1773 , \$auto$opt_dff.cc:247:make_patterns_logic$1775 , \$auto$opt_dff.cc:247:make_patterns_logic$1810 , \$auto$opt_dff.cc:247:make_patterns_logic$1812 , \$auto$opt_dff.cc:247:make_patterns_logic$1814 , \$auto$opt_dff.cc:247:make_patterns_logic$1816 , \$auto$opt_dff.cc:247:make_patterns_logic$1822  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1831  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1822 , \$auto$opt_dff.cc:247:make_patterns_logic$1829  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1834  = & { \$procmux$448_CMP , \xbar.u_s1n_6.tl_t_p [65] };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1837  = & { \$procmux$844_CMP , \$procmux$812_CMP , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1852  = & { \$auto$opt_dff.cc:247:make_patterns_logic$1769 , \$auto$opt_dff.cc:247:make_patterns_logic$1771 , \$auto$opt_dff.cc:247:make_patterns_logic$1810 , \$auto$opt_dff.cc:247:make_patterns_logic$1846 , \$auto$opt_dff.cc:247:make_patterns_logic$1848 , \$auto$opt_dff.cc:247:make_patterns_logic$1850  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1855  = & { \$procmux$812_CMP , \$522y , \u_uart.u_bridge.rx_valid_i  };
  assign \$auto$opt_dff.cc:272:make_patterns_logic$1876  = & { \$procmux$607_CMP , \$530y , \u_uart.u_bridge.rx_valid_i  };
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4] = ~ \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3] = ~ \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3];
  assign \$217y  = | \u_gpio.u_reg.addr_hit [5:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1626  = | { \u_gpio.u_reg.addr_hit [4:3], \u_gpio.u_reg.addr_hit [0] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$1628  = | \u_gpio.u_reg.addr_hit [4:1];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1634  = | \u_gpio.u_reg.addr_hit [4:3];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1630  = | \u_rv_timer.u_reg.addr_hit [3:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1632  = | \u_rv_timer.u_reg.addr_hit [4:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1642  = | { \u_gpio.u_reg.addr_hit [6], \u_gpio.u_reg.addr_hit [4:0] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$1644  = | { \u_gpio.u_reg.addr_hit [5:3], \u_gpio.u_reg.addr_hit [1] };
  assign \$auto$opt_reduce.cc:137:opt_pmux$1646  = | \u_gpio.u_reg.addr_hit [3:0];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1648  = | \u_gpio.u_reg.addr_hit [5:1];
  assign \$1456y  = | \u_gpio.u_reg.addr_hit ;
  assign \$auto$opt_reduce.cc:137:opt_pmux$1652  = | \u_gpio.u_reg.addr_hit [5:3];
  assign \$auto$opt_reduce.cc:137:opt_pmux$1656  = | { \$procmux$607_CMP , \$procmux$507_CMP  };
  always @(posedge clk_i)
    \u_gpio.data_in_q  <= { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.diff_ctr_q  <= 2'h0;
    else \u_gpio.gen_filter[0].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[0].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.filter_q  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.diff_ctr_q  <= 2'h0;
    else \u_gpio.gen_filter[1].u_filter.diff_ctr_q  <= \u_gpio.gen_filter[1].u_filter.diff_ctr_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.filter_q  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.filter_q  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o  <= cio_gpio_i[1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o  <= \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_data_in.q  <= 2'h0;
    else \u_gpio.u_reg.u_data_in.q  <= { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_gpio.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_gpio.u_reg.u_reg_if.outstanding_q  <= \$procmux$1585_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q  <= 1'h0;
    else \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q  <= \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg0_qe.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg0_qe.q_o  <= \u_pwm.u_reg.u_cfg0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$912y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level  <= \$895y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$967y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level  <= \$950y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level  <= \$1022y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level_q  <= \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o  <= \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level  <= 1'h0;
    else \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level  <= \$1005y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_pwm.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_pwm.u_reg.u_reg_if.outstanding_q  <= \$procmux$220_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.gen_harts[0].u_core.tick_count  <= 12'h000;
    else \u_rv_timer.gen_harts[0].u_core.tick_count  <= \$procmux$32_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o  <= 1'h0;
    else \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o  <= \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  <= 1'h0;
    else \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  <= \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_rv_timer.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_rv_timer.u_reg.u_reg_if.outstanding_q  <= \$procmux$22_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.tx_idx_q  <= 4'h0;
    else \u_uart.u_bridge.tx_idx_q  <= \u_uart.u_bridge.tx_idx_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_bridge.tx_st_q  <= 2'h0;
    else \u_uart.u_bridge.tx_st_q  <= \u_uart.u_bridge.tx_st_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  <= 1'h0;
    else \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  <= \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_reg_if.outstanding_q  <= 1'h0;
    else \u_uart.u_reg.u_reg_if.outstanding_q  <= \$procmux$1615_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_reg.u_wdata0_qe.q_o  <= 1'h0;
    else \u_uart.u_reg.u_wdata0_qe.q_o  <= \u_uart.u_reg.u_wdata0_qe.d_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.nco_sum_q  <= 17'h00000;
    else \u_uart.u_uart_core.nco_sum_q  <= \$285y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_sync_q1  <= 1'h1;
    else \u_uart.u_uart_core.rx_sync_q1  <= \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.rx_sync_q2  <= 1'h1;
    else \u_uart.u_uart_core.rx_sync_q2  <= \u_uart.u_uart_core.rx_sync_q1 ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.sync_rx.u_sync_1.q_o  <= 1'h1;
    else \u_uart.u_uart_core.sync_rx.u_sync_1.q_o  <= cio_rx_i;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  <= 1'h1;
    else \u_uart.u_uart_core.sync_rx.u_sync_2.q_o  <= \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.tx_out_q  <= 1'h1;
    else \u_uart.u_uart_core.tx_out_q  <= \$procmux$1305_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  <= 1'h1;
    else \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  <= \$procmux$1043_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  <= 1'h1;
    else \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  <= \$procmux$1413_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.rx_valid_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_rx.rx_valid_q  <= \$440y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_rx.tick_baud_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_rx.tick_baud_q  <= \u_uart.u_uart_core.uart_rx.tick_baud_d ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \u_uart.u_uart_core.uart_tx.tick_baud_q  <= 1'h0;
    else \u_uart.u_uart_core.uart_tx.tick_baud_q  <= \$procmux$1368_Y ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  <= 1'h0;
    else \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  <= \$procmux$251_Y ;
  assign \$procmux$1005_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  ? \$488y  : 5'hxx;
  assign \$procmux$1015_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [4], 4'h0 } : \$procmux$1005_Y ;
  assign \$procmux$1022_Y  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i  ? 5'h00 : \$procmux$1015_Y ;
  assign \$procmux$1024_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  ? \$481y  : 5'hxx;
  assign \$procmux$1034_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [4], 4'h0 } : \$procmux$1024_Y ;
  assign \$procmux$1041_Y  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i  ? 5'h00 : \$procmux$1034_Y ;
  assign \$procmux$1043_Y  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.under_rst  ? \$455y  : 1'h0;
  assign \$procmux$1082_Y  = \$417y  ? 1'h1 : \$419y ;
  assign \$procmux$1093_Y  = \$417y  ? 4'h0 : \$418y ;
  assign \$procmux$1104_Y  = \$417y  ? 11'hxxx : { \u_uart.u_uart_core.uart_rx.rx , \u_uart.u_uart_core.uart_rx.sreg_q [10:1] };
  assign \$procmux$1115_Y  = \$414y  ? \$procmux$1082_Y  : 1'hx;
  assign \$procmux$1124_Y  = \$414y  ? \$procmux$1093_Y  : 4'hx;
  assign \$procmux$1133_Y  = \$414y  ? \$procmux$1104_Y  : 11'hxxx;
  assign \u_uart.u_uart_core.uart_rx.idle_d  = \$411y  ? 1'h0 : \$procmux$1115_Y ;
  assign \u_uart.u_uart_core.uart_rx.bit_cnt_d  = \$411y  ? \$362y  : \$procmux$1124_Y ;
  assign \u_uart.u_uart_core.uart_rx.sreg_d  = \$411y  ? 11'h000 : \$procmux$1133_Y ;
  function [0:0] \$procmux$116 ;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$116  = b[0:0];
      3'b?1?:
        \$procmux$116  = b[1:1];
      3'b1??:
        \$procmux$116  = b[2:2];
      default:
        \$procmux$116  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.busy_i  = \$procmux$116 (1'h0, { \u_pwm.u_reg.u_cfg_cdc.src_busy_q , \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q , \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q  }, { \u_pwm.u_reg.addr_hit [0], \u_pwm.u_reg.addr_hit [1], \u_pwm.u_reg.addr_hit [2] });
  assign \u_uart.u_uart_core.uart_rx.tick_baud_d  = \$411y  ? 1'h0 : \$procmux$1176_Y ;
  assign \u_uart.u_uart_core.uart_rx.baud_div_d  = \$411y  ? 4'h8 : \$procmux$1181_Y ;
  assign \$procmux$1176_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$407y [4] : 1'h0;
  assign \$procmux$1181_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$407y [3:0] : 4'hx;
  assign \$procmux$120_Y  = \u_pwm.u_reg.u_cfg_cdc.dst_to_src  ? 3'h0 : 3'hx;
  function [7:0] \$procmux$1248 ;
    input [7:0] a;
    input [39:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1248  = b[7:0];
      5'b???1?:
        \$procmux$1248  = b[15:8];
      5'b??1??:
        \$procmux$1248  = b[23:16];
      5'b?1???:
        \$procmux$1248  = b[31:24];
      5'b1????:
        \$procmux$1248  = b[39:32];
      default:
        \$procmux$1248  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [31:24] = \$procmux$1248 (8'hff, { 8'h00, \u_rv_timer.u_reg.u_timer_v_lower0.q [31:24], \u_rv_timer.u_reg.u_timer_v_upper0.q [31:24], \u_rv_timer.u_reg.u_compare_lower0_0.q [31:24], \u_rv_timer.u_reg.u_compare_upper0_0.q [31:24] }, { \$auto$opt_reduce.cc:137:opt_pmux$1632 , \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  assign \$procmux$125_Y  = \u_pwm.u_reg.u_cfg_cdc.dst_to_src  ? { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  } : 32'hxxxxxxxx;
  function [3:0] \$procmux$1259 ;
    input [3:0] a;
    input [19:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1259  = b[3:0];
      5'b???1?:
        \$procmux$1259  = b[7:4];
      5'b??1??:
        \$procmux$1259  = b[11:8];
      5'b?1???:
        \$procmux$1259  = b[15:12];
      5'b1????:
        \$procmux$1259  = b[19:16];
      default:
        \$procmux$1259  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [15:12] = \$procmux$1259 (4'hf, { 4'h0, \u_rv_timer.u_reg.u_timer_v_lower0.q [15:12], \u_rv_timer.u_reg.u_timer_v_upper0.q [15:12], \u_rv_timer.u_reg.u_compare_lower0_0.q [15:12], \u_rv_timer.u_reg.u_compare_upper0_0.q [15:12] }, { \$auto$opt_reduce.cc:137:opt_pmux$1632 , \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [10:0] \$procmux$1270 ;
    input [10:0] a;
    input [65:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$1270  = b[10:0];
      6'b????1?:
        \$procmux$1270  = b[21:11];
      6'b???1??:
        \$procmux$1270  = b[32:22];
      6'b??1???:
        \$procmux$1270  = b[43:33];
      6'b?1????:
        \$procmux$1270  = b[54:44];
      6'b1?????:
        \$procmux$1270  = b[65:55];
      default:
        \$procmux$1270  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [11:1] = \$procmux$1270 (11'h7ff, { 11'h000, \u_rv_timer.u_reg.u_cfg0_prescale.q [11:1], \u_rv_timer.u_reg.u_timer_v_lower0.q [11:1], \u_rv_timer.u_reg.u_timer_v_upper0.q [11:1], \u_rv_timer.u_reg.u_compare_lower0_0.q [11:1], \u_rv_timer.u_reg.u_compare_upper0_0.q [11:1] }, { \$auto$opt_reduce.cc:137:opt_pmux$1630 , \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [0:0] \$procmux$1281 ;
    input [0:0] a;
    input [8:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        \$procmux$1281  = b[0:0];
      9'b???????1?:
        \$procmux$1281  = b[1:1];
      9'b??????1??:
        \$procmux$1281  = b[2:2];
      9'b?????1???:
        \$procmux$1281  = b[3:3];
      9'b????1????:
        \$procmux$1281  = b[4:4];
      9'b???1?????:
        \$procmux$1281  = b[5:5];
      9'b??1??????:
        \$procmux$1281  = b[6:6];
      9'b?1???????:
        \$procmux$1281  = b[7:7];
      9'b1????????:
        \$procmux$1281  = b[8:8];
      default:
        \$procmux$1281  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [0] = \$procmux$1281 (1'h1, { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , 1'h0, \u_rv_timer.u_reg.u_cfg0_prescale.q [0], \u_rv_timer.u_reg.u_timer_v_lower0.q [0], \u_rv_timer.u_reg.u_timer_v_upper0.q [0], \u_rv_timer.u_reg.u_compare_lower0_0.q [0], \u_rv_timer.u_reg.u_compare_upper0_0.q [0] }, { \u_rv_timer.u_reg.addr_hit [0], \u_rv_timer.u_reg.addr_hit [1], \u_rv_timer.u_reg.addr_hit [2], \u_rv_timer.u_reg.addr_hit [3], \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  function [7:0] \$procmux$1292 ;
    input [7:0] a;
    input [47:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        \$procmux$1292  = b[7:0];
      6'b????1?:
        \$procmux$1292  = b[15:8];
      6'b???1??:
        \$procmux$1292  = b[23:16];
      6'b??1???:
        \$procmux$1292  = b[31:24];
      6'b?1????:
        \$procmux$1292  = b[39:32];
      6'b1?????:
        \$procmux$1292  = b[47:40];
      default:
        \$procmux$1292  = a;
    endcase
  endfunction
  assign \u_rv_timer.u_reg.u_reg_if.rdata_i [23:16] = \$procmux$1292 (8'hff, { 8'h00, \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_timer_v_lower0.q [23:16], \u_rv_timer.u_reg.u_timer_v_upper0.q [23:16], \u_rv_timer.u_reg.u_compare_lower0_0.q [23:16], \u_rv_timer.u_reg.u_compare_upper0_0.q [23:16] }, { \$auto$opt_reduce.cc:137:opt_pmux$1630 , \u_rv_timer.u_reg.addr_hit [4], \u_rv_timer.u_reg.addr_hit [5], \u_rv_timer.u_reg.addr_hit [6], \u_rv_timer.u_reg.addr_hit [7], \u_rv_timer.u_reg.addr_hit [8] });
  assign \$procmux$1305_Y  = \u_uart.u_reg.u_ctrl_slpbk.q  ? 1'h1 : \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \$procmux$1307_Y  = \$364y  ? \u_uart.u_uart_core.uart_tx.sreg_q [0] : 1'hx;
  assign \$procmux$1315_Y  = \$364y  ? { 1'h1, \u_uart.u_uart_core.uart_tx.sreg_q [10:1] } : 11'hxxx;
  assign \$procmux$132_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? 3'h4 : \$procmux$120_Y ;
  assign \$procmux$1323_Y  = \$364y  ? \$365y  : 4'hx;
  assign \$procmux$1333_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? { 1'h1, \$361y , \u_uart.u_uart_core.tx_fifo_data , 1'h0 } : \$procmux$1315_Y ;
  assign \$procmux$1340_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? \$362y  : \$procmux$1323_Y ;
  assign \$procmux$1347_Y  = \u_uart.u_uart_core.u_uart_txfifo.rready_i  ? 1'hx : \$procmux$1307_Y ;
  assign \u_uart.u_uart_core.uart_tx.tx_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1347_Y  : 1'h1;
  assign \u_uart.u_uart_core.uart_tx.sreg_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1333_Y  : 11'h7ff;
  assign \$procmux$136_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$125_Y ;
  assign \u_uart.u_uart_core.uart_tx.bit_cnt_d  = \u_uart.u_reg.u_ctrl_tx.q  ? \$procmux$1340_Y  : 4'h0;
  assign \$procmux$1368_Y  = \u_uart.u_uart_core.nco_sum_q [16] ? \$353y [4] : 1'h0;
  assign \$procmux$1375_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i  ? \$327y  : 4'hx;
  assign \$procmux$138_Y  = \u_pwm.u_reg.u_cfg_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$1385_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3], 3'h0 } : \$procmux$1375_Y ;
  assign \$procmux$1392_Y  = \u_uart.u_uart_core.u_uart_txfifo.clr_i  ? 4'h0 : \$procmux$1385_Y ;
  assign \$procmux$1394_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i  ? \$320y  : 4'hx;
  assign \$procmux$1404_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set  ? { \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [3], 3'h0 } : \$procmux$1394_Y ;
  assign \$procmux$1411_Y  = \u_uart.u_uart_core.u_uart_txfifo.clr_i  ? 4'h0 : \$procmux$1404_Y ;
  assign \$procmux$1413_Y  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.under_rst  ? \$294y  : 1'h0;
  function [7:0] \$procmux$1418 ;
    input [7:0] a;
    input [15:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$1418  = b[7:0];
      2'b1?:
        \$procmux$1418  = b[15:8];
      default:
        \$procmux$1418  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [31:24] = \$procmux$1418 (8'hff, { \u_uart.u_reg.u_ctrl_nco.q [15:8], 8'h00 }, { \u_gpio.u_reg.addr_hit [0], \$auto$opt_reduce.cc:137:opt_pmux$1648  });
  assign \u_uart.u_reg.u_reg_if.rdata_i [15:8] = \$217y  ? 8'h00 : 8'hff;
  function [7:0] \$procmux$1434 ;
    input [7:0] a;
    input [23:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1434  = b[7:0];
      3'b?1?:
        \$procmux$1434  = b[15:8];
      3'b1??:
        \$procmux$1434  = b[23:16];
      default:
        \$procmux$1434  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [23:16] = \$procmux$1434 (8'hff, { \u_uart.u_reg.u_ctrl_nco.q [7:0], 11'h000, \u_uart.u_uart_core.rx_fifo_depth  }, { \u_gpio.u_reg.addr_hit [0], \$auto$opt_reduce.cc:137:opt_pmux$1628 , \u_gpio.u_reg.addr_hit [5] });
  function [1:0] \$procmux$1442 ;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$1442  = b[1:0];
      3'b?1?:
        \$procmux$1442  = b[3:2];
      3'b1??:
        \$procmux$1442  = b[5:4];
      default:
        \$procmux$1442  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [7:6] = \$procmux$1442 (2'h3, { \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_bridge.rx_data_i [7:6], 2'h0 }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1644  });
  assign \$procmux$145_Y  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$138_Y ;
  function [0:0] \$procmux$1450 ;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1450  = b[0:0];
      4'b??1?:
        \$procmux$1450  = b[1:1];
      4'b?1??:
        \$procmux$1450  = b[2:2];
      4'b1???:
        \$procmux$1450  = b[3:3];
      default:
        \$procmux$1450  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [3] = \$procmux$1450 (1'h1, { \u_uart.u_reg.status_txidle_qs , \u_uart.u_bridge.rx_data_i [3], 1'h0, \u_uart.u_uart_core.tx_fifo_depth [3] }, { \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1626 , \u_gpio.u_reg.addr_hit [5] });
  function [0:0] \$procmux$1458 ;
    input [0:0] a;
    input [4:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1458  = b[0:0];
      5'b???1?:
        \$procmux$1458  = b[1:1];
      5'b??1??:
        \$procmux$1458  = b[2:2];
      5'b?1???:
        \$procmux$1458  = b[3:3];
      5'b1????:
        \$procmux$1458  = b[4:4];
      default:
        \$procmux$1458  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [2] = \$procmux$1458 (1'h1, { \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.status_txempty_qs , \u_uart.u_bridge.rx_data_i [2], 1'h0, \u_uart.u_uart_core.tx_fifo_depth [2] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1634 , \u_gpio.u_reg.addr_hit [5] });
  function [1:0] \$procmux$1466 ;
    input [1:0] a;
    input [9:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \$procmux$1466  = b[1:0];
      5'b???1?:
        \$procmux$1466  = b[3:2];
      5'b??1??:
        \$procmux$1466  = b[5:4];
      5'b?1???:
        \$procmux$1466  = b[7:6];
      5'b1????:
        \$procmux$1466  = b[9:8];
      default:
        \$procmux$1466  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [1:0] = \$procmux$1466 (2'h3, { \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txfull_qs , \u_uart.u_bridge.rx_data_i [1:0], 2'h0, \u_uart.u_uart_core.tx_fifo_depth [1:0] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1634 , \u_gpio.u_reg.addr_hit [5] });
  function [1:0] \$procmux$1474 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$1474  = b[1:0];
      4'b??1?:
        \$procmux$1474  = b[3:2];
      4'b?1??:
        \$procmux$1474  = b[5:4];
      4'b1???:
        \$procmux$1474  = b[7:6];
      default:
        \$procmux$1474  = a;
    endcase
  endfunction
  assign \u_uart.u_reg.u_reg_if.rdata_i [5:4] = \$procmux$1474 (2'h3, { \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_bridge.rx_data_i [5:4], 2'h0 }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \$auto$opt_reduce.cc:137:opt_pmux$1652  });
  function [31:0] \$procmux$148 ;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$148  = b[31:0];
      3'b?1?:
        \$procmux$148  = b[63:32];
      3'b1??:
        \$procmux$148  = b[95:64];
      default:
        \$procmux$148  = a;
    endcase
  endfunction
  assign \u_pwm.u_reg.u_reg_if.rdata_i  = \$procmux$148 (32'd4294967295, { \u_pwm.u_reg.u_cfg_cdc.src_q , 31'h00000000, \u_pwm.u_reg.u_pwm_en_cdc.src_q , \u_pwm.u_reg.u_pwm_param_cdc.src_q  }, { \u_pwm.u_reg.addr_hit [0], \u_pwm.u_reg.addr_hit [1], \u_pwm.u_reg.addr_hit [2] });
  assign \$procmux$1499_Y  = \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \$procmux$1504_Y  = \u_pwm.u_reg.u_pwm_param_cdc.dst_to_src  ? { \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  } : 32'hxxxxxxxx;
  assign \$procmux$1511_Y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  ? 3'h4 : \$procmux$1499_Y ;
  assign \$procmux$1515_Y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata  : \$procmux$1504_Y ;
  assign \$procmux$1569_Y  = \u_pwm.u_reg.u_pwm_param_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$1576_Y  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$1569_Y ;
  assign \$procmux$1585_Y  = \u_gpio.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$1615_Y  = \u_uart.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$22_Y  = \u_rv_timer.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$220_Y  = \u_pwm.u_reg.u_reg_if.a_ack  ? 1'h1 : 1'h0;
  assign \$procmux$229_Y  = \$741y  ? 1'h1 : 1'h0;
  assign \$procmux$25_Y  = \$1536y  ? 12'h000 : \$1537y ;
  assign \$procmux$251_Y  = \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending  ? 1'h0 : \$procmux$229_Y ;
  assign \xbar.u_s1n_6.tl_t_p  = \$722y  ? { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  } : \$procmux$273_Y ;
  assign \$procmux$273_Y  = \$720y  ? { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  } : \$procmux$276_Y ;
  assign \$procmux$276_Y  = \$718y  ? { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  } : \$procmux$278_Y ;
  assign \$procmux$278_Y  = \$716y  ? { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  } : { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.hfifo_reqready  = \xbar.u_s1n_6.hold_all_requests  ? 1'h0 : \$procmux$284_Y ;
  assign \$procmux$284_Y  = \$698y  ? \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  : \$procmux$287_Y ;
  assign \$procmux$287_Y  = \$692y  ? \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  : \$procmux$290_Y ;
  assign \$procmux$290_Y  = \$686y  ? \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  : \$procmux$292_Y ;
  assign \$procmux$292_Y  = \$680y  ? \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  : \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0];
  assign \$procmux$296_Y  = \xbar.u_s1n_6.tl_t_p [65] ? \$655y  : 9'hxxx;
  assign \$procmux$304_Y  = \xbar.u_s1n_6.accept_t_req  ? \$procmux$307_Y  : \$procmux$296_Y ;
  assign \$procmux$307_Y  = \xbar.u_s1n_6.tl_t_p [65] ? 9'hxxx : \$653y ;
  assign \$procmux$315_Y  = \$640y  ? 3'h3 : 3'h5;
  assign \$procmux$32_Y  = \u_rv_timer.u_reg.u_ctrl.q  ? \$procmux$25_Y  : 12'h000;
  assign \$procmux$328_Y  = \$638y  ? 3'h2 : \$procmux$315_Y ;
  assign \$procmux$338_Y  = \$636y  ? 3'h1 : \$procmux$328_Y ;
  assign \$procmux$34_Y  = \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  ? 3'h0 : 3'hx;
  assign \xbar.u_s1n_6.dev_select_t  = \$634y  ? 3'h0 : \$procmux$338_Y ;
  assign \$procmux$350_Y  = \uart_host_adapter.g_multiple_reqs.source_q  ? 1'h0 : \$616y ;
  assign \$procmux$359_Y  = \$596y  ? 4'h0 : \$593y ;
  assign \$procmux$368_Y  = \$596y  ? 2'h0 : \$procmux$917_Y ;
  assign \$procmux$379_Y  = \$592y  ? 4'h0 : \$procmux$359_Y ;
  assign \$procmux$387_Y  = \$592y  ? 2'h0 : \$procmux$368_Y ;
  assign \$procmux$39_Y  = \u_pwm.u_reg.u_pwm_en_cdc.dst_to_src  ? \u_pwm.u_reg.u_pwm_en.q  : 1'hx;
  function [7:0] \$procmux$394 ;
    input [7:0] a;
    input [63:0] b;
    input [7:0] s;
    casez (s) // synopsys parallel_case
      8'b???????1:
        \$procmux$394  = b[7:0];
      8'b??????1?:
        \$procmux$394  = b[15:8];
      8'b?????1??:
        \$procmux$394  = b[23:16];
      8'b????1???:
        \$procmux$394  = b[31:24];
      8'b???1????:
        \$procmux$394  = b[39:32];
      8'b??1?????:
        \$procmux$394  = b[47:40];
      8'b?1??????:
        \$procmux$394  = b[55:48];
      8'b1???????:
        \$procmux$394  = b[63:56];
      default:
        \$procmux$394  = a;
    endcase
  endfunction
  assign \$procmux$394_Y  = \$procmux$394 (8'h00, { 16'h5a01, \u_uart.u_bridge.op_q , 7'h00, \u_uart.u_bridge.any_err_q , \u_uart.u_bridge.rdata_q  }, { \$procmux$402_CMP , \$procmux$401_CMP , \$procmux$400_CMP , \$595y , \$procmux$398_CMP , \$procmux$397_CMP , \$procmux$396_CMP , \$592y  });
  assign \$procmux$396_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h6;
  assign \$procmux$397_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h5;
  assign \$procmux$398_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h4;
  assign \$procmux$400_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h2;
  assign \$procmux$401_CMP  = \u_uart.u_bridge.tx_idx_q  == 4'h1;
  assign \$procmux$402_CMP  = ! \u_uart.u_bridge.tx_idx_q ;
  assign \$procmux$408_Y  = \u_uart.u_uart_core.tx_fifo_wready  ? \$procmux$379_Y  : \$procmux$914_Y ;
  assign \$procmux$413_Y  = \u_uart.u_uart_core.tx_fifo_wready  ? \$procmux$387_Y  : \$procmux$917_Y ;
  assign \$procmux$418_Y  = \u_uart.u_uart_core.tx_fifo_wready  ? \$procmux$394_Y  : 8'h00;
  assign \$procmux$423_Y  = \u_uart.u_uart_core.tx_fifo_wready  ? 1'h1 : 1'h0;
  assign \u_uart.u_bridge.tx_idx_d  = \$590y  ? \$procmux$408_Y  : \$procmux$914_Y ;
  assign \u_uart.u_bridge.tx_st_d  = \$590y  ? \$procmux$413_Y  : \$procmux$917_Y ;
  assign \u_uart.u_uart_core.tx_data_i  = \$590y  ? \$procmux$418_Y  : 8'h00;
  assign \u_uart.u_uart_core.tx_valid_i  = \$590y  ? \$procmux$423_Y  : 1'h0;
  assign \$procmux$448_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h6;
  assign \$procmux$450_Y  = \$531y  ? \u_uart.u_bridge.tx_idx_q  : 4'h0;
  assign \$procmux$457_Y  = \$531y  ? \u_uart.u_bridge.tx_st_q  : 2'h1;
  assign \$procmux$46_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? 3'h4 : \$procmux$34_Y ;
  assign \$procmux$464_Y  = \xbar.u_s1n_6.tl_t_p [65] ? \$procmux$450_Y  : \u_uart.u_bridge.tx_idx_q ;
  assign \$procmux$469_Y  = \xbar.u_s1n_6.tl_t_p [65] ? \$procmux$457_Y  : \u_uart.u_bridge.tx_st_q ;
  assign \$procmux$484_Y  = \xbar.u_s1n_6.tl_t_p [65] ? 3'h0 : 3'hx;
  assign \$procmux$489_Y  = \$564y  ? 1'h0 : 1'hx;
  assign \$procmux$492_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h5;
  assign \$procmux$494_Y  = \$564y  ? 3'h6 : 3'hx;
  assign \$procmux$50_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? \u_pwm.u_reg.reg_wdata [0] : \$procmux$39_Y ;
  assign \$procmux$502_Y  = \$530y  ? 1'h1 : 1'hx;
  assign \$procmux$507_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h3;
  assign \$procmux$512_Y  = \$530y  ? \u_uart.u_bridge.bebyte_q [3:0] : 4'hx;
  assign \$procmux$52_Y  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack  ? 1'h0 : 1'hx;
  assign \$procmux$522_Y  = \$530y  ? { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] } : 32'hxxxxxxxx;
  assign \$procmux$532_Y  = \$530y  ? 2'hx : \$523y ;
  assign \$procmux$542_Y  = \$530y  ? 3'h4 : 3'hx;
  assign \$procmux$552_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$502_Y  : 1'hx;
  assign \$procmux$560_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$512_Y  : 4'hx;
  assign \$procmux$568_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$522_Y  : 32'hxxxxxxxx;
  assign \$procmux$576_Y  = \u_uart.u_bridge.rx_valid_i  ? { \u_uart.u_bridge.rx_data_i , \u_uart.u_bridge.sh_q [31:8] } : 32'hxxxxxxxx;
  assign \$procmux$584_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$532_Y  : 2'hx;
  assign \$procmux$59_Y  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i  ? 1'h1 : \$procmux$52_Y ;
  assign \$procmux$592_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$542_Y  : 3'hx;
  assign \$procmux$602_Y  = \$530y  ? \$procmux$670_Y  : \$523y ;
  assign \$procmux$614_Y  = \$531y  ? 3'h3 : 3'h4;
  assign \$procmux$628_Y  = \$531y  ? 1'hx : 1'h0;
  assign \$procmux$642_Y  = \$531y  ? 4'hx : 4'hf;
  assign \$procmux$607_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h2;
  assign \$procmux$656_Y  = \$531y  ? 32'hxxxxxxxx : 32'd0;
  assign \u_gpio.u_reg.u_reg_if.rdata_i [31:10] = \$1456y  ? 22'h000000 : 22'h3fffff;
  assign \$procmux$670_Y  = \$531y  ? 2'h0 : 2'hx;
  assign \$procmux$684_Y  = \$530y  ? \$procmux$628_Y  : 1'hx;
  assign \$procmux$696_Y  = \$530y  ? \$procmux$642_Y  : 4'hx;
  assign \$procmux$708_Y  = \$530y  ? \$procmux$656_Y  : 32'hxxxxxxxx;
  assign \$procmux$732_Y  = \$530y  ? \$procmux$614_Y  : 3'hx;
  assign \$procmux$743_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$684_Y  : 1'hx;
  function [1:0] \$procmux$75 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$75  = b[1:0];
      4'b??1?:
        \$procmux$75  = b[3:2];
      4'b?1??:
        \$procmux$75  = b[5:4];
      4'b1???:
        \$procmux$75  = b[7:6];
      default:
        \$procmux$75  = a;
    endcase
  endfunction
  assign \u_gpio.u_reg.u_reg_if.rdata_i [3:2] = \$procmux$75 (2'h3, { 2'h0, \u_gpio.cio_gpio_en_q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q [3:2] }, { \$auto$opt_reduce.cc:137:opt_pmux$1646 , \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6] });
  assign \$procmux$752_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$696_Y  : 4'hx;
  assign \$procmux$761_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$708_Y  : 32'hxxxxxxxx;
  assign \$procmux$788_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$602_Y  : 2'hx;
  assign \$procmux$797_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$732_Y  : 3'hx;
  assign \$procmux$807_Y  = \$522y  ? 2'h0 : \$523y ;
  assign \$procmux$812_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h1;
  assign \$procmux$820_Y  = \$522y  ? 3'h2 : 3'hx;
  assign \$522y  = \u_uart.u_bridge.idx_q  == 2'h2;
  function [5:0] \$procmux$84 ;
    input [5:0] a;
    input [11:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$84  = b[5:0];
      2'b1?:
        \$procmux$84  = b[11:6];
      default:
        \$procmux$84  = a;
    endcase
  endfunction
  assign \u_gpio.u_reg.u_reg_if.rdata_i [9:4] = \$procmux$84 (6'h3f, { \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , 6'h00 }, { \u_gpio.u_reg.addr_hit [5], \$auto$opt_reduce.cc:137:opt_pmux$1642  });
  assign \$procmux$844_CMP  = \u_uart.u_bridge.idx_q  == 2'h1;
  assign \$procmux$875_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$807_Y  : 2'hx;
  assign \$procmux$885_Y  = \u_uart.u_bridge.rx_valid_i  ? \$procmux$820_Y  : 3'hx;
  function [2:0] \$procmux$890 ;
    input [2:0] a;
    input [20:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        \$procmux$890  = b[2:0];
      7'b?????1?:
        \$procmux$890  = b[5:3];
      7'b????1??:
        \$procmux$890  = b[8:6];
      7'b???1???:
        \$procmux$890  = b[11:9];
      7'b??1????:
        \$procmux$890  = b[14:12];
      7'b?1?????:
        \$procmux$890  = b[17:15];
      7'b1??????:
        \$procmux$890  = b[20:18];
      default:
        \$procmux$890  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.rxf_st_d  = \$procmux$890 (3'hx, { \$procmux$909_Y , \$procmux$885_Y , \$procmux$797_Y , \$procmux$592_Y , 3'h5, \$procmux$494_Y , \$procmux$484_Y  }, { \$procmux$1000_CMP , \$procmux$812_CMP , \$procmux$607_CMP , \$procmux$507_CMP , \$procmux$894_CMP , \$procmux$492_CMP , \$procmux$448_CMP  });
  assign \$procmux$894_CMP  = \u_uart.u_bridge.rxf_st_q  == 3'h4;
  assign \$procmux$1000_CMP  = ! \u_uart.u_bridge.rxf_st_q ;
  assign \$procmux$909_Y  = \$518y  ? 3'h1 : 3'hx;
  assign \$procmux$914_Y  = \$procmux$448_CMP  ? \$procmux$464_Y  : \u_uart.u_bridge.tx_idx_q ;
  assign \$procmux$917_Y  = \$procmux$448_CMP  ? \$procmux$469_Y  : \u_uart.u_bridge.tx_st_q ;
  function [0:0] \$procmux$927 ;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$927  = b[0:0];
      2'b1?:
        \$procmux$927  = b[1:1];
      default:
        \$procmux$927  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.req_d  = \$procmux$927 (1'hx, { 1'h1, \$procmux$489_Y  }, { \$procmux$894_CMP , \$procmux$492_CMP  });
  function [1:0] \$procmux$93 ;
    input [1:0] a;
    input [13:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        \$procmux$93  = b[1:0];
      7'b?????1?:
        \$procmux$93  = b[3:2];
      7'b????1??:
        \$procmux$93  = b[5:4];
      7'b???1???:
        \$procmux$93  = b[7:6];
      7'b??1????:
        \$procmux$93  = b[9:8];
      7'b?1?????:
        \$procmux$93  = b[11:10];
      7'b1??????:
        \$procmux$93  = b[13:12];
      default:
        \$procmux$93  = a;
    endcase
  endfunction
  assign \u_gpio.u_reg.u_reg_if.rdata_i [1:0] = \$procmux$93 (2'h3, { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , 2'h0, \u_gpio.u_reg.u_data_in.q , \u_gpio.cio_gpio_q , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q [1:0] }, { \u_gpio.u_reg.addr_hit [0], \u_gpio.u_reg.addr_hit [1], \u_gpio.u_reg.addr_hit [2], \u_gpio.u_reg.addr_hit [3], \u_gpio.u_reg.addr_hit [4], \u_gpio.u_reg.addr_hit [5], \u_gpio.u_reg.addr_hit [6] });
  function [0:0] \$procmux$934 ;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        \$procmux$934  = b[0:0];
      3'b?1?:
        \$procmux$934  = b[1:1];
      3'b1??:
        \$procmux$934  = b[2:2];
      default:
        \$procmux$934  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.we_d  = \$procmux$934 (1'hx, { 1'h0, \$procmux$743_Y , \$procmux$552_Y  }, { \$procmux$1000_CMP , \$procmux$607_CMP , \$procmux$507_CMP  });
  function [3:0] \$procmux$944 ;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$944  = b[3:0];
      2'b1?:
        \$procmux$944  = b[7:4];
      default:
        \$procmux$944  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.be_d  = \$procmux$944 (4'hx, { \$procmux$752_Y , \$procmux$560_Y  }, { \$procmux$607_CMP , \$procmux$507_CMP  });
  function [31:0] \$procmux$952 ;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$952  = b[31:0];
      2'b1?:
        \$procmux$952  = b[63:32];
      default:
        \$procmux$952  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.wdata_d  = \$procmux$952 (32'hxxxxxxxx, { \$procmux$761_Y , \$procmux$568_Y  }, { \$procmux$607_CMP , \$procmux$507_CMP  });
  function [31:0] \$procmux$983 ;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \$procmux$983  = b[31:0];
      2'b1?:
        \$procmux$983  = b[63:32];
      default:
        \$procmux$983  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.sh_d  = \$procmux$983 (32'hxxxxxxxx, { 32'h00000000, \$procmux$576_Y  }, { \$procmux$1000_CMP , \$auto$opt_reduce.cc:137:opt_pmux$1656  });
  function [1:0] \$procmux$993 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        \$procmux$993  = b[1:0];
      4'b??1?:
        \$procmux$993  = b[3:2];
      4'b?1??:
        \$procmux$993  = b[5:4];
      4'b1???:
        \$procmux$993  = b[7:6];
      default:
        \$procmux$993  = a;
    endcase
  endfunction
  assign \u_uart.u_bridge.idx_d  = \$procmux$993 (2'hx, { 2'h0, \$procmux$875_Y , \$procmux$788_Y , \$procmux$584_Y  }, { \$procmux$1000_CMP , \$procmux$812_CMP , \$procmux$607_CMP , \$procmux$507_CMP  });
  assign cio_gpio_en_o = \u_gpio.cio_gpio_en_q ;
  assign cio_gpio_o = \u_gpio.cio_gpio_q ;
  assign cio_pwm_en_o = 1'h1;
  assign cio_pwm_o = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign cio_tx_en_o = 1'h1;
  assign tl_gpio_d2h = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign { tl_gpio_h2d[108:24], tl_gpio_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , 1'h1 };
  assign tl_pwm_d2h = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign { tl_pwm_h2d[108:24], tl_pwm_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , 1'h1 };
  assign tl_rv_timer_d2h = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign { tl_rv_timer_h2d[108:24], tl_rv_timer_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , 1'h1 };
  assign tl_uart_d2h = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign { tl_uart_h2d[108:24], tl_uart_h2d[0] } = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , 1'h1 };
  assign tl_uart_host_d2h = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign tl_uart_host_h2d = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \u_gpio.cio_gpio_en_o  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.cio_gpio_i  = cio_gpio_i;
  assign \u_gpio.cio_gpio_o  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.clk_i  = clk_i;
  assign \u_gpio.data_in_d  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.event_intr_combined  = \u_gpio.intr_hw.event_intr_i ;
  assign \u_gpio.gen_filter[0].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [0];
  assign \u_gpio.gen_filter[0].u_filter.filter_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.filter_synced  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[0];
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[0].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[0].u_filter.thresh_i  = 2'h3;
  assign \u_gpio.gen_filter[1].u_filter.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.enable_i  = \u_gpio.u_reg.u_ctrl_en_input_filter.q [1];
  assign \u_gpio.gen_filter[1].u_filter.filter_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.filter_synced  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.d_o  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.intq  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.q_o  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.d_i  = cio_gpio_i[1];
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.d_i  = \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.gen_async.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_gpio.gen_filter[1].u_filter.rst_ni  = rst_ni;
  assign \u_gpio.gen_filter[1].u_filter.thresh_i  = 2'h3;
  assign \u_gpio.hw2reg  = { \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d , \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o , 1'h1, \u_gpio.cio_gpio_q , \u_gpio.cio_gpio_en_q  };
  assign \u_gpio.intr_hw.clk_i  = clk_i;
  assign \u_gpio.intr_hw.hw2reg_intr_state_d_o  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  assign \u_gpio.intr_hw.hw2reg_intr_state_de_o  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \u_gpio.intr_hw.reg2hw_intr_enable_q_i  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.intr_hw.reg2hw_intr_state_q_i  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.intr_hw.reg2hw_intr_test_q_i  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.intr_hw.rst_ni  = rst_ni;
  assign \u_gpio.intr_hw.status  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.reg2hw  = { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  };
  assign \u_gpio.rst_ni  = rst_ni;
  assign \u_gpio.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.clk_i  = clk_i;
  assign \u_gpio.u_reg.ctrl_en_input_filter_qs  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.ctrl_en_input_filter_wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.data_in_qs  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.devmode_i  = 1'h1;
  assign \u_gpio.u_reg.direct_flds_we  = { \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.direct_qe  };
  assign \u_gpio.u_reg.direct_gpio_o_qs  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.direct_gpio_o_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.direct_gpio_oe_qs  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.direct_gpio_oe_wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.direct_we  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.hw2reg  = { \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d , \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de , \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o , 1'h1, \u_gpio.cio_gpio_q , \u_gpio.cio_gpio_en_q  };
  assign \u_gpio.u_reg.intr_ctrl_en_falling_qs  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_falling_wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.intr_ctrl_en_input_filter_qs  = \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_input_filter_wd  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvlhigh_wd  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_lvllow_wd  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.intr_ctrl_en_rising_qs  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.intr_ctrl_en_rising_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_enable_qs  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.intr_enable_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_state_qs  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.intr_state_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_state_we  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  assign \u_gpio.u_reg.intr_test_flds_we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.intr_test_qe  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.intr_test_wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.intr_test_we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.reg2hw  = { \u_gpio.u_reg.u_intr_state.q , \u_gpio.u_reg.u_intr_enable.q , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.intr_hw.reg2hw_intr_test_qe_i , \u_gpio.u_reg.reg_wdata [3:2], \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.reg_wdata [1:0], \u_gpio.u_reg.direct_qe , \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q , \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q , \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q , \u_gpio.u_reg.u_intr_ctrl_en_falling.q , \u_gpio.u_reg.u_intr_ctrl_en_rising.q , \u_gpio.u_reg.u_ctrl_en_input_filter.q  };
  assign \u_gpio.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_gpio.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_gpio.u_reg.reg_busy  = 1'h0;
  assign \u_gpio.u_reg.reg_rdata  = \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \u_gpio.u_reg.reg_rdata_next  = \u_gpio.u_reg.u_reg_if.rdata_i ;
  assign \u_gpio.u_reg.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.shadow_busy  = 1'h0;
  assign \u_gpio.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_o_pre  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_reg_d2h  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.d  = 4'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.de  = 1'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.qe  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.qs  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.we  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.d  = 4'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.q  = \u_gpio.u_reg.u_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.we  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:0];
  assign \u_gpio.u_reg.u_ctrl_en_input_filter.wr_en_data_arb.wr_en  = \u_gpio.u_reg.ctrl_en_input_filter_we ;
  assign \u_gpio.u_reg.u_data_in.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_data_in.d  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.de  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.ds  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.qe  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.qs  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_data_in.wd  = 2'h0;
  assign \u_gpio.u_reg.u_data_in.we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_data  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.d  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.de  = 1'h1;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_q  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_wd  = 2'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.gen_ro.unused_we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.q  = \u_gpio.u_reg.u_data_in.q ;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wd  = 2'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.we  = 1'h0;
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_data  = { \u_gpio.gen_filter[1].u_filter.filter_o , \u_gpio.gen_filter[0].u_filter.filter_o  };
  assign \u_gpio.u_reg.u_data_in.wr_en_data_arb.wr_en  = 1'h1;
  assign \u_gpio.u_reg.u_direct_gpio_o.d  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_gpio_o.ds  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_gpio_o.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_direct_gpio_o.qe  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.u_direct_gpio_o.qs  = \u_gpio.cio_gpio_q ;
  assign \u_gpio.u_reg.u_direct_gpio_o.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_direct_gpio_o.we  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.d  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.ds  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.q  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_direct_gpio_oe.qe  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.qs  = \u_gpio.cio_gpio_en_q ;
  assign \u_gpio.u_reg.u_direct_gpio_oe.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_direct_gpio_oe.we  = \u_gpio.u_reg.direct_qe ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.qs  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_data  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_falling.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [3:2];
  assign \u_gpio.u_reg.u_intr_ctrl_en_falling.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.qs  = \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wd  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_data  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_input_filter.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [9:8];
  assign \u_gpio.u_reg.u_intr_ctrl_en_input_filter.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wd  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_data  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [5:4];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvlhigh.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.qs  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wd  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_data  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_lvllow.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [7:6];
  assign \u_gpio.u_reg.u_intr_ctrl_en_lvllow.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.qe  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.qs  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_ctrl_en_rising.q ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.we  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_ctrl_en_rising.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_ctrl_we ;
  assign \u_gpio.u_reg.u_intr_enable.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_enable.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_enable.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_enable.qe  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.qs  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_enable.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.we  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.de  = 1'h0;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.gen_w.unused_q  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_enable.q ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.we  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_data  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_enable.wr_en_data_arb.wr_en  = \u_gpio.u_reg.intr_enable_we ;
  assign \u_gpio.u_reg.u_intr_state.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_intr_state.d  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.d ;
  assign \u_gpio.u_reg.u_intr_state.de  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.de ;
  assign \u_gpio.u_reg.u_intr_state.qs  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.u_intr_state.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_intr_state.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_state.we  = \u_gpio.u_reg.u_intr_state.wr_en_data_arb.we ;
  assign \u_gpio.u_reg.u_intr_state.wr_en  = \u_gpio.u_reg.u_intr_state.qe ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.q  = \u_gpio.u_reg.u_intr_state.q ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_data  = \u_gpio.u_reg.u_intr_state.wr_data ;
  assign \u_gpio.u_reg.u_intr_state.wr_en_data_arb.wr_en  = \u_gpio.u_reg.u_intr_state.qe ;
  assign \u_gpio.u_reg.u_intr_test.d  = 2'h0;
  assign \u_gpio.u_reg.u_intr_test.ds  = 2'h0;
  assign \u_gpio.u_reg.u_intr_test.q  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_test.qe  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.u_intr_test.qre  = 1'h0;
  assign \u_gpio.u_reg.u_intr_test.qs  = 2'h0;
  assign \u_gpio.u_reg.u_intr_test.re  = 1'h0;
  assign \u_gpio.u_reg.u_intr_test.wd  = \u_gpio.u_reg.reg_wdata [1:0];
  assign \u_gpio.u_reg.u_intr_test.we  = \u_gpio.intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_gpio.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_gpio.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_gpio.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_reg_if.d_ack  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \u_gpio.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_gpio.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.error  = \u_gpio.u_reg.u_reg_if.error_q ;
  assign \u_gpio.u_reg.u_reg_if.error_i  = \u_gpio.u_reg.reg_error ;
  assign \u_gpio.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_gpio.u_reg.u_reg_if.rd_req  = \u_gpio.u_reg.reg_re ;
  assign \u_gpio.u_reg.u_reg_if.rdata  = \u_gpio.u_reg.u_reg_if.rdata_q ;
  assign \u_gpio.u_reg.u_reg_if.re_o  = \u_gpio.u_reg.reg_re ;
  assign \u_gpio.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_reg_if.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.tl_o_pre  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_gpio.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_gpio.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_gpio.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_reg_if.wdata_o  = \u_gpio.u_reg.reg_wdata ;
  assign \u_gpio.u_reg.u_reg_if.we_o  = \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_reg_if.wr_req  = \u_gpio.u_reg.reg_we ;
  assign \u_gpio.u_reg.u_rsp_intg_gen.tl_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_gpio.u_reg.u_rsp_intg_gen.tl_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \u_pwm.cio_pwm_en_o  = 1'h1;
  assign \u_pwm.cio_pwm_o  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign \u_pwm.clk_i  = clk_i;
  assign { \u_pwm.reg2hw [70:35], \u_pwm.reg2hw [33:18], \u_pwm.reg2hw [16:0] } = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en.q , \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q , \u_pwm.reg2hw [17] };
  assign \u_pwm.rst_ni  = rst_ni;
  assign \u_pwm.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_pwm_core.clk_core_i  = clk_i;
  assign \u_pwm.u_pwm_core.clk_div  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_pwm_core.clr_phase_cntr  = \u_pwm.u_reg.u_cfg0_qe.q_o ;
  assign \u_pwm.u_pwm_core.cntr_en  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_pwm_core.dc_resn  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.clk_i  = clk_i;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.dc_resn_i  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.duty_cycle_a_i  = \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_ctr_i  = \u_pwm.u_pwm_core.phase_ctr_q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_i  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.phase_delay_masked  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.on_phase ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_en_i  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_o  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.rst_ni  = rst_ni;
  assign \u_pwm.u_pwm_core.pwm_o  = \u_pwm.u_pwm_core.gen_chan_insts[0].u_chan.pwm_q ;
  assign \u_pwm.u_pwm_core.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en.q , \u_pwm.reg2hw [34], \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q , \u_pwm.reg2hw [17], \u_pwm.u_reg.u_pwm_param_phase_delay_0.q , \u_pwm.reg2hw [17] };
  assign \u_pwm.u_pwm_core.rst_core_ni  = rst_ni;
  assign \u_pwm.u_reg._cfg_clk_div_qs_int  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg._cfg_cntr_en_qs_int  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg._cfg_dc_resn_qs_int  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg._cfg_qs  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg._cfg_wdata  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg._cfg_we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg._pwm_en_qs  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg._pwm_en_qs_int  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg._pwm_en_wdata  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg._pwm_param_duty_cycle_0_qs_int  = \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q ;
  assign \u_pwm.u_reg._pwm_param_phase_delay_0_qs_int  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg._pwm_param_qs  = { \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg._pwm_param_wdata  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.cfg_busy  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  assign \u_pwm.u_reg.cfg_flds_we  = { \u_pwm.u_reg.u_cfg0_qe.d_i , \u_pwm.u_reg.u_cfg0_qe.d_i , \u_pwm.u_reg.u_cfg0_qe.d_i  };
  assign \u_pwm.u_reg.cfg_qe  = \u_pwm.u_reg.u_cfg0_qe.q_o ;
  assign \u_pwm.u_reg.cfg_qs  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.cfg_we  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.clk_i  = clk_i;
  assign \u_pwm.u_reg.devmode_i  = 1'h1;
  assign \u_pwm.u_reg.pwm_en_busy  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  assign \u_pwm.u_reg.pwm_en_flds_we  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.pwm_en_qe  = \u_pwm.reg2hw [34];
  assign \u_pwm.u_reg.pwm_en_qs  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.pwm_en_we  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.pwm_param_busy  = \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.pwm_param_flds_we  = { \u_pwm.u_reg._pwm_param_we , \u_pwm.u_reg._pwm_param_we  };
  assign \u_pwm.u_reg.pwm_param_qe  = \u_pwm.reg2hw [17];
  assign \u_pwm.u_reg.pwm_param_qs  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.pwm_param_we  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.reg2hw  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_cfg_clk_div.q , \u_pwm.u_reg.u_cfg0_qe.q_o , \u_pwm.u_reg.u_pwm_en.q , \u_pwm.reg2hw [34], \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q , \u_pwm.reg2hw [17], \u_pwm.u_reg.u_pwm_param_phase_delay_0.q , \u_pwm.reg2hw [17] };
  assign \u_pwm.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [3:2], 2'h0 };
  assign \u_pwm.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_pwm.u_reg.reg_busy  = \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \u_pwm.u_reg.reg_busy_sel  = \u_pwm.u_reg.u_reg_if.busy_i ;
  assign \u_pwm.u_reg.reg_rdata  = \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \u_pwm.u_reg.reg_rdata_next  = \u_pwm.u_reg.u_reg_if.rdata_i ;
  assign \u_pwm.u_reg.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.shadow_busy  = 1'h0;
  assign \u_pwm.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_o_pre  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_reg_d2h  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_cfg0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_qs  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.dst_qs_i  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.dst_req_from_src  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_wd_o  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.dst_we_o  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.src_busy_o  = \u_pwm.u_reg.u_cfg_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_qs_o  = \u_pwm.u_reg.u_cfg_cdc.src_q ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.src_regwen_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.src_req  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_cfg_cdc.src_we_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_cfg_cntr_en.q , \u_pwm.u_reg.u_cfg_dc_resn.q , \u_pwm.u_reg.u_cfg_clk_div.q  };
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_cfg_cdc.src_ack ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_cfg_cdc.dst_req ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_clk_div.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_clk_div.d  = 27'h0000000;
  assign \u_pwm.u_reg.u_cfg_clk_div.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_clk_div.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.qs  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_clk_div.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.d  = 27'h0000000;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_clk_div.q ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [26:0];
  assign \u_pwm.u_reg.u_cfg_clk_div.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_cntr_en.d  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.qs  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_cntr_en.q ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [31];
  assign \u_pwm.u_reg.u_cfg_cntr_en.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_cfg_dc_resn.d  = 4'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.qe  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.qs  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.d  = 4'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.q  = \u_pwm.u_reg.u_cfg_dc_resn.q ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wd  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.we  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_cfg_cdc.src_q [30:27];
  assign \u_pwm.u_reg.u_cfg_dc_resn.wr_en_data_arb.wr_en  = \u_pwm.u_reg.u_cfg0_qe.d_i ;
  assign \u_pwm.u_reg.u_pwm_en.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.qe  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en.qs  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.we  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.d  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.we  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en.wr_en_data_arb.wr_en  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en0_qe.d_i  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en0_qe.q_o  = \u_pwm.reg2hw [34];
  assign \u_pwm.u_reg.u_pwm_en0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_ds_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_qs  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_qs_i  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_req_from_src  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_wd_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.dst_we_o  = \u_pwm.u_reg._pwm_en_we ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_busy_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_qs_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_regwen_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_req  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_pwm_en_cdc.src_we_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_ds_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_i  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_qs_o  = \u_pwm.u_reg.u_pwm_en.q ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_pwm_en_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_pwm_en_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_en_cdc.unused_wd  = \u_pwm.u_reg.reg_wdata [0];
  assign \u_pwm.u_reg.u_pwm_param0_qe.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param0_qe.d_i  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param0_qe.q_o  = \u_pwm.reg2hw [17];
  assign \u_pwm.u_reg.u_pwm_param0_qe.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_qs  = { \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_req_from_src  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_wd_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.dst_we_o  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_busy_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_busy_q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_qs_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_q ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_re_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_regwen_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_req  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_wd_i  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.src_we_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_pulse_i ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_ds_i  = 32'd0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_i  = { \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_qs_o  = { \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q , \u_pwm.u_reg.u_pwm_param_phase_delay_0.q  };
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_i  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_req_o  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.dst_update_i  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_level  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.u_dst_to_src_ack.src_pulse_i  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.gen_passthru.unused_sigs  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_ack_o  = \u_pwm.u_reg.u_pwm_param_cdc.src_ack ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_arb.src_update_o  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_dst_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.clk_src_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_level  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.dst_pulse_o  = \u_pwm.u_reg.u_pwm_param_cdc.dst_req ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.d_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.intq  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.q_o  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.src_level ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.d_i  = \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_1.q_o ;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.u_sync_2.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.prim_flop_2sync.unused_sig  = 1'h1;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_dst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_cdc.u_src_to_dst_req.rst_src_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.qe  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.qs  = \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.we  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_duty_cycle_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.we  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [31:16];
  assign \u_pwm.u_reg.u_pwm_param_duty_cycle_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.qe  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.qs  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.we  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.d  = 16'h0000;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.de  = 1'h0;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.gen_w.unused_q  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.q  = \u_pwm.u_reg.u_pwm_param_phase_delay_0.q ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wd  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.we  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_data  = \u_pwm.u_reg.u_pwm_param_cdc.src_q [15:0];
  assign \u_pwm.u_reg.u_pwm_param_phase_delay_0.wr_en_data_arb.wr_en  = \u_pwm.u_reg._pwm_param_we ;
  assign \u_pwm.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [3:2], 2'h0 };
  assign \u_pwm.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_pwm.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_reg_if.d_ack  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \u_pwm.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_pwm.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.error  = \u_pwm.u_reg.u_reg_if.error_q ;
  assign \u_pwm.u_reg.u_reg_if.error_i  = \u_pwm.u_reg.reg_error ;
  assign \u_pwm.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_pwm.u_reg.u_reg_if.rd_req  = \u_pwm.u_reg.reg_re ;
  assign \u_pwm.u_reg.u_reg_if.rdata  = \u_pwm.u_reg.u_reg_if.rdata_q ;
  assign \u_pwm.u_reg.u_reg_if.re_o  = \u_pwm.u_reg.reg_re ;
  assign \u_pwm.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_reg_if.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.tl_o_pre  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_pwm.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_pwm.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_pwm.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_pwm.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_reg_if.wdata_o  = \u_pwm.u_reg.reg_wdata ;
  assign \u_pwm.u_reg.u_reg_if.we_o  = \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_reg_if.wr_req  = \u_pwm.u_reg.reg_we ;
  assign \u_pwm.u_reg.u_rsp_intg_gen.tl_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.u_rsp_intg_gen.tl_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \u_pwm.u_reg.unused__pwm_en_wdata  = \u_pwm.u_reg.u_pwm_en_cdc.src_q ;
  assign \u_rv_timer.active  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_core.active  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.gen_harts[0].u_core.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_core.intr  = \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.gen_harts[0].u_core.mtime  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  };
  assign \u_rv_timer.gen_harts[0].u_core.mtimecmp  = { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.gen_harts[0].u_core.prescaler  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.gen_harts[0].u_core.rst_ni  = rst_ni;
  assign \u_rv_timer.gen_harts[0].u_core.step  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.gen_harts[0].u_core.tick  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.clk_i  = clk_i;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_d_o  = \u_rv_timer.intr_timer_state_d ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.hw2reg_intr_state_de_o  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_enable_q_i  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_state_q_i  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_q_i  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.gen_harts[0].u_intr_hw.rst_ni  = rst_ni;
  assign \u_rv_timer.gen_harts[0].u_intr_hw.status  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.hw2reg  = { \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d , \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  };
  assign \u_rv_timer.intr_timer_en  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.intr_timer_set  = \u_rv_timer.gen_harts[0].u_intr_hw.event_intr_i ;
  assign \u_rv_timer.intr_timer_state_de  = \u_rv_timer.gen_harts[0].u_intr_hw.g_intr_event.new_event ;
  assign \u_rv_timer.intr_timer_state_q  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.intr_timer_test_q  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.intr_timer_test_qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.mtime  = { \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_timer_v_lower0.q  };
  assign \u_rv_timer.mtime_d  = \u_rv_timer.gen_harts[0].u_core.mtime_d ;
  assign \u_rv_timer.mtimecmp  = { \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q  };
  assign \u_rv_timer.prescaler  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.reg2hw  = { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0], \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i , \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_cfg0_prescale.q , \u_rv_timer.u_reg.u_timer_v_lower0.q , \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q , \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o , \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  };
  assign \u_rv_timer.rst_ni  = rst_ni;
  assign \u_rv_timer.step  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.tick  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.cfg0_prescale_qs  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.cfg0_prescale_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.cfg0_step_qs  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.cfg0_step_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.compare_lower0_0_flds_we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_lower0_0_qe  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.compare_lower0_0_qs  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.compare_lower0_0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.compare_lower0_0_we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_upper0_0_flds_we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.compare_upper0_0_qe  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o ;
  assign \u_rv_timer.u_reg.compare_upper0_0_qs  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.compare_upper0_0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.compare_upper0_0_we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.ctrl_qs  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.ctrl_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.devmode_i  = 1'h1;
  assign \u_rv_timer.u_reg.hw2reg  = { \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d , \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de , \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32], \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de  };
  assign \u_rv_timer.u_reg.intr_enable0_qs  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.intr_enable0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_state0_qs  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.intr_state0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_state0_we  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.intr_test0_flds_we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.intr_test0_qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.intr_test0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.intr_test0_we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.reg2hw  = { \u_rv_timer.u_reg.u_ctrl.q , \u_rv_timer.u_reg.u_intr_enable0.q , \u_rv_timer.u_reg.u_intr_state0.q , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0], \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i , \u_rv_timer.u_reg.u_cfg0_step.q , \u_rv_timer.u_reg.u_cfg0_prescale.q , \u_rv_timer.u_reg.u_timer_v_lower0.q , \u_rv_timer.u_reg.u_timer_v_upper0.q , \u_rv_timer.u_reg.u_compare_lower0_0.q , \u_rv_timer.u_reg.u_compare_lower0_00_qe.q_o , \u_rv_timer.u_reg.u_compare_upper0_0.q , \u_rv_timer.u_reg.u_compare_upper0_00_qe.q_o  };
  assign \u_rv_timer.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.reg_busy  = 1'h0;
  assign \u_rv_timer.u_reg.reg_rdata  = \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \u_rv_timer.u_reg.reg_rdata_next  = \u_rv_timer.u_reg.u_reg_if.rdata_i ;
  assign \u_rv_timer.u_reg.reg_wdata  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.shadow_busy  = 1'h0;
  assign \u_rv_timer.u_reg.timer_v_lower0_qs  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.timer_v_lower0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.timer_v_lower0_we  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.timer_v_upper0_qs  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.timer_v_upper0_wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.timer_v_upper0_we  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_o_pre  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_reg_d2h  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_cfg0_prescale.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.d  = 12'h000;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.qe  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.qs  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.d  = 12'h000;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_cfg0_prescale.q ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [11:0];
  assign \u_rv_timer.u_reg.u_cfg0_prescale.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_cfg0_step.d  = 8'h00;
  assign \u_rv_timer.u_reg.u_cfg0_step.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_step.qe  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.qs  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_cfg0_step.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.d  = 8'h00;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_cfg0_step.q ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.we  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [23:16];
  assign \u_rv_timer.u_reg.u_cfg0_step.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.cfg0_we ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.qe  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.qs  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_compare_lower0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.we  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_lower0_0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_compare_lower0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_lower0_00_qe.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.qe  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.qs  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.d  = 32'd0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_compare_upper0_0.q ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.we  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_compare_upper0_0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_compare_upper0_00_qe.d_i ;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_compare_upper0_00_qe.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_ctrl.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_ctrl.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.qe  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.qs  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_ctrl.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.we  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_ctrl.q ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.we  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_ctrl.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.ctrl_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_intr_enable0.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.qe  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.qs  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_intr_enable0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.we  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.de  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_intr_enable0.q ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.we  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_enable0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.intr_enable0_we ;
  assign \u_rv_timer.u_reg.u_intr_state0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_intr_state0.d  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.d ;
  assign \u_rv_timer.u_reg.u_intr_state0.de  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_intr_state0.qs  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.u_intr_state0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_intr_state0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_state0.we  = \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en  = \u_rv_timer.u_reg.u_intr_state0.qe ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_intr_state0.q ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_intr_state0.wr_data ;
  assign \u_rv_timer.u_reg.u_intr_state0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_intr_state0.qe ;
  assign \u_rv_timer.u_reg.u_intr_test0.d  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.ds  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.q  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_test0.qe  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.u_intr_test0.qre  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.qs  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.re  = 1'h0;
  assign \u_rv_timer.u_reg.u_intr_test0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd [0];
  assign \u_rv_timer.u_reg.u_intr_test0.we  = \u_rv_timer.gen_harts[0].u_intr_hw.reg2hw_intr_test_qe_i ;
  assign \u_rv_timer.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [8:2], 2'h0 };
  assign \u_rv_timer.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_rv_timer.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_reg_if.d_ack  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \u_rv_timer.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_rv_timer.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.error  = \u_rv_timer.u_reg.u_reg_if.error_q ;
  assign \u_rv_timer.u_reg.u_reg_if.error_i  = \u_rv_timer.u_reg.reg_error ;
  assign \u_rv_timer.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_rv_timer.u_reg.u_reg_if.rd_req  = \u_rv_timer.u_reg.reg_re ;
  assign \u_rv_timer.u_reg.u_reg_if.rdata  = \u_rv_timer.u_reg.u_reg_if.rdata_q ;
  assign \u_rv_timer.u_reg.u_reg_if.re_o  = \u_rv_timer.u_reg.reg_re ;
  assign \u_rv_timer.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_reg_if.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.tl_o_pre  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_rv_timer.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [108], \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [104:0] } = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_reg_if.wdata_o  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_reg_if.we_o  = \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_reg_if.wr_req  = \u_rv_timer.u_reg.reg_we ;
  assign \u_rv_timer.u_reg.u_rsp_intg_gen.tl_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_rsp_intg_gen.tl_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \u_rv_timer.u_reg.u_timer_v_lower0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_lower0.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.qs  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.we  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en  = \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [31:0];
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_timer_v_lower0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_data ;
  assign \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_timer_v_lower0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.clk_i  = clk_i;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.qs  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.rst_ni  = rst_ni;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.we  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.we ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en  = \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.d  = \u_rv_timer.gen_harts[0].u_core.mtime_d [63:32];
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.de  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.de ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.gen_w.unused_q  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.q  = \u_rv_timer.u_reg.u_timer_v_upper0.q ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wd  = \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_data  = \u_rv_timer.u_reg.u_timer_v_upper0.wr_data ;
  assign \u_rv_timer.u_reg.u_timer_v_upper0.wr_en_data_arb.wr_en  = \u_rv_timer.u_reg.u_timer_v_upper0.qe ;
  assign \u_uart.addr_o  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \u_uart.be_o  = \u_uart.u_bridge.be_q ;
  assign \u_uart.cio_rx_i  = cio_rx_i;
  assign \u_uart.cio_tx_en_o  = 1'h1;
  assign \u_uart.cio_tx_o  = cio_tx_o;
  assign \u_uart.clk_i  = clk_i;
  assign \u_uart.err_i  = \xbar.u_s1n_6.tl_t_p [1];
  assign \u_uart.gnt_i  = \uart_host_adapter.gnt_o ;
  assign \u_uart.hw2reg  = { \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 4'h0, \u_uart.u_uart_core.tx_fifo_depth , 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign { \u_uart.reg2hw [56:33], \u_uart.reg2hw [31:0] } = { \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 2'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  };
  assign \u_uart.req_o  = \u_uart.u_bridge.req_q ;
  assign \u_uart.rst_ni  = rst_ni;
  assign \u_uart.rx_data  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.rx_pop  = \u_uart.u_uart_core.rx_pop_i ;
  assign \u_uart.rx_valid  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.tx_data  = \u_uart.u_uart_core.tx_data_i ;
  assign \u_uart.tx_ready  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.tx_valid  = \u_uart.u_uart_core.tx_valid_i ;
  assign \u_uart.u_bridge.addr_o  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \u_uart.u_bridge.be_o  = \u_uart.u_bridge.be_q ;
  assign \u_uart.u_bridge.clk_i  = clk_i;
  assign \u_uart.u_bridge.err_i  = \xbar.u_s1n_6.tl_t_p [1];
  assign \u_uart.u_bridge.gnt_i  = \uart_host_adapter.gnt_o ;
  assign \u_uart.u_bridge.rdata_i  = \u_uart.rdata_i ;
  assign \u_uart.u_bridge.req_o  = \u_uart.u_bridge.req_q ;
  assign \u_uart.u_bridge.rst_ni  = rst_ni;
  assign \u_uart.u_bridge.rx_pop_o  = \u_uart.u_uart_core.rx_pop_i ;
  assign \u_uart.u_bridge.tx_data_o  = \u_uart.u_uart_core.tx_data_i ;
  assign \u_uart.u_bridge.tx_ready_i  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_bridge.tx_valid_o  = \u_uart.u_uart_core.tx_valid_i ;
  assign \u_uart.u_bridge.valid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \u_uart.u_bridge.wdata_o  = \u_uart.u_bridge.wdata_q ;
  assign \u_uart.u_bridge.we_o  = \u_uart.u_bridge.we_q ;
  assign \u_uart.u_reg.addr_hit  = \u_gpio.u_reg.addr_hit [5:0];
  assign \u_uart.u_reg.clk_i  = clk_i;
  assign \u_uart.u_reg.ctrl_llpbk_qs  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.ctrl_llpbk_wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.ctrl_nco_qs  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.ctrl_nco_wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.ctrl_nf_qs  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.ctrl_nf_wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.ctrl_parity_en_qs  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.ctrl_parity_en_wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.ctrl_parity_odd_qs  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.ctrl_parity_odd_wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.ctrl_rx_qs  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.ctrl_rx_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.ctrl_slpbk_qs  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.ctrl_slpbk_wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.ctrl_tx_qs  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.ctrl_tx_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.devmode_i  = 1'h1;
  assign \u_uart.u_reg.fifo_ctrl_flds_we  = { \u_uart.u_reg.u_fifo_ctrl0_qe.d_i , \u_uart.u_reg.u_fifo_ctrl0_qe.d_i  };
  assign \u_uart.u_reg.fifo_ctrl_qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.q_o ;
  assign \u_uart.u_reg.fifo_ctrl_rxrst_wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.fifo_ctrl_txrst_wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.fifo_ctrl_we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.fifo_status_rxlvl_qs  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.fifo_status_txlvl_qs  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.hw2reg  = { \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 4'h0, \u_uart.u_uart_core.tx_fifo_depth , 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.rdata_qs  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.reg2hw  = { \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  };
  assign \u_uart.u_reg.reg_addr  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_uart.u_reg.reg_be  = \u_rv_timer.u_reg.reg_be ;
  assign \u_uart.u_reg.reg_busy  = 1'h0;
  assign \u_uart.u_reg.reg_rdata  = \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_reg.reg_rdata_next  = \u_uart.u_reg.u_reg_if.rdata_i ;
  assign \u_uart.u_reg.rst_ni  = rst_ni;
  assign \u_uart.u_reg.shadow_busy  = 1'h0;
  assign \u_uart.u_reg.status_re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.status_rxidle_qs  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_o_pre  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_reg_d2h  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.tl_reg_h2d  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_ctrl_llpbk.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_llpbk.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.qs  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_llpbk.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [5];
  assign \u_uart.u_reg.u_ctrl_llpbk.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_nco.d  = 16'h0000;
  assign \u_uart.u_reg.u_ctrl_nco.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nco.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.qs  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_nco.wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_data  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.d  = 16'h0000;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_nco.q ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [31:16];
  assign \u_uart.u_reg.u_ctrl_nco.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_nf.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.qs  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_nf.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [2];
  assign \u_uart.u_reg.u_ctrl_nf.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_parity_en.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.qs  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_parity_en.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [6];
  assign \u_uart.u_reg.u_ctrl_parity_en.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_parity_odd.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.qs  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7];
  assign \u_uart.u_reg.u_ctrl_parity_odd.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_rx.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.qs  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_rx.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_rx.q ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_ctrl_rx.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_slpbk.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.qs  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_slpbk.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [4];
  assign \u_uart.u_reg.u_ctrl_slpbk.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.clk_i  = clk_i;
  assign \u_uart.u_reg.u_ctrl_tx.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.qe  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.qs  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_ctrl_tx.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.q  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.we  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_ctrl_tx.wr_en_data_arb.wr_en  = \u_uart.u_reg.ctrl_we ;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl0_qe.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.qs  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_rxrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [0];
  assign \u_uart.u_reg.u_fifo_ctrl_rxrst.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.clk_i  = clk_i;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.qe  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.qs  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.d  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.q  = \u_uart.u_reg.u_fifo_ctrl_txrst.q ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.we  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [1];
  assign \u_uart.u_reg.u_fifo_ctrl_txrst.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_fifo_ctrl0_qe.d_i ;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.d  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.ds  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.q  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.qe  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.qs  = { 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_rxlvl.wd  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_rxlvl.we  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_txlvl.d  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.ds  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.q  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_txlvl.qe  = 1'h0;
  assign \u_uart.u_reg.u_fifo_status_txlvl.qs  = { 4'h0, \u_uart.u_uart_core.tx_fifo_depth  };
  assign \u_uart.u_reg.u_fifo_status_txlvl.wd  = 8'h00;
  assign \u_uart.u_reg.u_fifo_status_txlvl.we  = 1'h0;
  assign \u_uart.u_reg.u_rdata.d  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.ds  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.q  = 8'h00;
  assign \u_uart.u_reg.u_rdata.qe  = 1'h0;
  assign \u_uart.u_reg.u_rdata.qre  = \u_uart.u_reg.rdata_re ;
  assign \u_uart.u_reg.u_rdata.qs  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_reg.u_rdata.re  = \u_uart.u_reg.rdata_re ;
  assign \u_uart.u_reg.u_rdata.wd  = 8'h00;
  assign \u_uart.u_reg.u_rdata.we  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.addr_align_err  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.addr_o  = { \u_uart.u_bridge.addr_q [4:2], 2'h0 };
  assign \u_uart.u_reg.u_reg_if.be_o  = \u_rv_timer.u_reg.reg_be ;
  assign \u_uart.u_reg.u_reg_if.busy_i  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.clk_i  = clk_i;
  assign \u_uart.u_reg.u_reg_if.d_ack  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \u_uart.u_reg.u_reg_if.en_ifetch_i  = 4'h9;
  assign \u_uart.u_reg.u_reg_if.err_internal  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.error  = \u_uart.u_reg.u_reg_if.error_q ;
  assign \u_uart.u_reg.u_reg_if.error_i  = \u_uart.u_reg.reg_error ;
  assign \u_uart.u_reg.u_reg_if.intg_error  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.intg_error_o  = 1'h0;
  assign \u_uart.u_reg.u_reg_if.rd_req  = \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.u_reg_if.rdata  = \u_uart.u_reg.u_reg_if.rdata_q ;
  assign \u_uart.u_reg.u_reg_if.re_o  = \u_uart.u_reg.reg_re ;
  assign \u_uart.u_reg.u_reg_if.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_reg_if.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_reg_if.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.tl_o_pre  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.u_err.clk_i  = clk_i;
  assign \u_uart.u_reg.u_reg_if.u_err.mask  = 4'h1;
  assign \u_uart.u_reg.u_reg_if.u_err.op_full  = \u_gpio.u_reg.u_reg_if.u_err.op_full ;
  assign \u_uart.u_reg.u_reg_if.u_err.op_get  = \u_gpio.u_reg.u_reg_if.u_err.op_get ;
  assign \u_uart.u_reg.u_reg_if.u_err.op_partial  = \u_gpio.u_reg.u_reg_if.u_err.op_partial ;
  assign \u_uart.u_reg.u_reg_if.u_err.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_reg_if.u_err.tl_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.u_rsp_intg_gen.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_reg_if.wdata_o  = \u_uart.u_reg.reg_wdata ;
  assign \u_uart.u_reg.u_reg_if.we_o  = \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_reg_if.wr_req  = \u_uart.u_reg.reg_we ;
  assign \u_uart.u_reg.u_rsp_intg_gen.tl_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_rsp_intg_gen.tl_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \u_uart.u_reg.u_status_rxempty.d  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.ds  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxempty.qs  = \u_uart.u_reg.status_rxempty_qs ;
  assign \u_uart.u_reg.u_status_rxempty.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxempty.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxempty.we  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.d  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.ds  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxfull.qs  = \u_uart.u_reg.status_rxfull_qs ;
  assign \u_uart.u_reg.u_status_rxfull.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxfull.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxfull.we  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.d  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.ds  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.q  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxidle.qs  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_reg.u_status_rxidle.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_rxidle.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_rxidle.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.d  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.ds  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txempty.qs  = \u_uart.u_reg.status_txempty_qs ;
  assign \u_uart.u_reg.u_status_txempty.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txempty.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txempty.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.d  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.ds  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txfull.qs  = \u_uart.u_reg.status_txfull_qs ;
  assign \u_uart.u_reg.u_status_txfull.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txfull.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txfull.we  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.d  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.ds  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.q  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.qe  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.qre  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txidle.qs  = \u_uart.u_reg.status_txidle_qs ;
  assign \u_uart.u_reg.u_status_txidle.re  = \u_uart.reg2hw [32];
  assign \u_uart.u_reg.u_status_txidle.wd  = 1'h0;
  assign \u_uart.u_reg.u_status_txidle.we  = 1'h0;
  assign \u_uart.u_reg.u_wdata.clk_i  = clk_i;
  assign \u_uart.u_reg.u_wdata.d  = 8'h00;
  assign \u_uart.u_reg.u_wdata.de  = 1'h0;
  assign \u_uart.u_reg.u_wdata.qe  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.qs  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.rst_ni  = rst_ni;
  assign \u_uart.u_reg.u_wdata.wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_data  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.d  = 8'h00;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.de  = 1'h0;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.gen_w.unused_q  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.q  = \u_uart.u_reg.u_wdata.q ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_data  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.u_wdata.wr_en_data_arb.wr_en  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.u_wdata0_qe.clk_i  = clk_i;
  assign \u_uart.u_reg.u_wdata0_qe.rst_ni  = rst_ni;
  assign \u_uart.u_reg.wdata_flds_we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_reg.wdata_qe  = \u_uart.u_reg.u_wdata0_qe.q_o ;
  assign \u_uart.u_reg.wdata_wd  = \u_uart.u_reg.reg_wdata [7:0];
  assign \u_uart.u_reg.wdata_we  = \u_uart.u_reg.u_wdata0_qe.d_i ;
  assign \u_uart.u_uart_core.clk_i  = clk_i;
  assign \u_uart.u_uart_core.hw2reg  = { \u_uart.u_reg.status_txfull_qs , \u_uart.u_reg.status_rxfull_qs , \u_uart.u_reg.status_txempty_qs , \u_uart.u_reg.status_txidle_qs , \u_uart.u_uart_core.uart_rx.idle_q , \u_uart.u_reg.status_rxempty_qs , \u_uart.u_bridge.rx_data_i , 4'h0, \u_uart.u_uart_core.tx_fifo_depth , 3'h0, \u_uart.u_uart_core.rx_fifo_depth  };
  assign \u_uart.u_uart_core.line_loopback  = \u_uart.u_reg.u_ctrl_llpbk.q ;
  assign \u_uart.u_uart_core.reg2hw  = { \u_uart.u_reg.u_ctrl_nco.q , \u_uart.u_reg.u_ctrl_parity_odd.q , \u_uart.u_reg.u_ctrl_parity_en.q , \u_uart.u_reg.u_ctrl_llpbk.q , \u_uart.u_reg.u_ctrl_slpbk.q , \u_uart.u_reg.u_ctrl_nf.q , \u_uart.u_reg.u_ctrl_rx.q , \u_uart.u_reg.u_ctrl_tx.q , 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 1'h0, \u_uart.reg2hw [32], 8'h00, \u_uart.u_reg.rdata_re , \u_uart.u_reg.u_wdata.q , \u_uart.u_reg.u_wdata0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_txrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o , \u_uart.u_reg.u_fifo_ctrl_rxrst.q , \u_uart.u_reg.u_fifo_ctrl0_qe.q_o  };
  assign \u_uart.u_uart_core.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.rx  = cio_rx_i;
  assign \u_uart.u_uart_core.rx_data_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.rx_enable  = 1'h1;
  assign \u_uart.u_uart_core.rx_fifo_data  = \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  assign \u_uart.u_uart_core.rx_fifo_pop  = \u_uart.u_uart_core.u_uart_rxfifo.rready_i ;
  assign \u_uart.u_uart_core.rx_fifo_rvalid  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.rx_fifo_wvalid  = \u_uart.u_uart_core.u_uart_rxfifo.wvalid_i ;
  assign \u_uart.u_uart_core.rx_in  = \u_uart.u_uart_core.uart_rx.rx ;
  assign \u_uart.u_uart_core.rx_sync  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \u_uart.u_uart_core.rx_tick_baud  = \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \u_uart.u_uart_core.rx_uart_idle  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_uart_core.rx_valid  = \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \u_uart.u_uart_core.rx_valid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.rxnf_enable  = \u_uart.u_reg.u_ctrl_nf.q ;
  assign \u_uart.u_uart_core.sync_rx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.d_i  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.d_o  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.intq  = \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  assign \u_uart.u_uart_core.sync_rx.q_o  = \u_uart.u_uart_core.sync_rx.u_sync_2.q_o ;
  assign \u_uart.u_uart_core.sync_rx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.d_i  = cio_rx_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_1.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.clk_i  = clk_i;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.d_i  = \u_uart.u_uart_core.sync_rx.u_sync_1.q_o ;
  assign \u_uart.u_uart_core.sync_rx.u_sync_2.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.sync_rx.unused_sig  = 1'h1;
  assign \u_uart.u_uart_core.sys_loopback  = \u_uart.u_reg.u_ctrl_slpbk.q ;
  assign \u_uart.u_uart_core.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.tx  = cio_tx_o;
  assign \u_uart.u_uart_core.tx_enable  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.tx_fifo_rready  = \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \u_uart.u_uart_core.tx_fifo_wdata  = \u_uart.u_uart_core.u_uart_txfifo.wdata_i ;
  assign \u_uart.u_uart_core.tx_fifo_wvalid  = \u_uart.u_uart_core.u_uart_txfifo.wvalid_i ;
  assign \u_uart.u_uart_core.tx_out  = \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \u_uart.u_uart_core.tx_ready_o  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_rxfifo.depth_o  = \u_uart.u_uart_core.rx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_empty  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_wptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_wptr  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.storage_rdata  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.rdata_int ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.clr_i  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.depth_o  = \u_uart.u_uart_core.rx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.empty_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.full_o  = \u_uart.u_uart_core.u_uart_rxfifo.full_o ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [3:0] = 4'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_o  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3:0];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb  = \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [4];
  assign \u_uart.u_uart_core.u_uart_rxfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [3:0] = 4'h0;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rdata_o  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_rxfifo.rvalid_o  = \u_uart.u_bridge.rx_valid_i ;
  assign \u_uart.u_uart_core.u_uart_rxfifo.wready_o  = \u_uart.u_uart_core.rx_fifo_wready ;
  assign \u_uart.u_uart_core.u_uart_txfifo.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_txfifo.depth_o  = \u_uart.u_uart_core.tx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_txfifo.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_empty  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_rptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_rptr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.incr_wptr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_rptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.storage_rdata  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.rdata_int ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clk_i  = clk_i;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.clr_i  = \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.depth_o  = \u_uart.u_uart_core.tx_fifo_depth ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.empty_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.empty ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.err_o  = 1'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.full_o  = \u_uart.u_uart_core.u_uart_txfifo.full_o ;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_msb  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_cnt_q [3];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rptr_wrap_set_cnt [2:0] = 3'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_o  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [2:0];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_msb  = \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_cnt_q [3];
  assign \u_uart.u_uart_core.u_uart_txfifo.gen_normal_fifo.u_fifo_cnt.wptr_wrap_set_cnt [2:0] = 3'h0;
  assign \u_uart.u_uart_core.u_uart_txfifo.rdata_o  = \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.u_uart_core.u_uart_txfifo.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.u_uart_txfifo.rvalid_o  = \u_uart.u_uart_core.tx_fifo_rvalid ;
  assign \u_uart.u_uart_core.u_uart_txfifo.wready_o  = \u_uart.u_uart_core.tx_fifo_wready ;
  assign \u_uart.u_uart_core.uart_fifo_rxrst  = \u_uart.u_uart_core.u_uart_rxfifo.clr_i ;
  assign \u_uart.u_uart_core.uart_fifo_txrst  = \u_uart.u_uart_core.u_uart_txfifo.clr_i ;
  assign \u_uart.u_uart_core.uart_rdata  = \u_uart.u_bridge.rx_data_i ;
  assign \u_uart.u_uart_core.uart_rx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.uart_rx.frame_err  = \u_uart.u_uart_core.event_rx_frame_err ;
  assign \u_uart.u_uart_core.uart_rx.idle  = \u_uart.u_uart_core.uart_rx.idle_q ;
  assign \u_uart.u_uart_core.uart_rx.parity_enable  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_uart_core.uart_rx.parity_odd  = \u_uart.u_reg.u_ctrl_parity_odd.q ;
  assign \u_uart.u_uart_core.uart_rx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.uart_rx.rx_data  = \u_uart.u_uart_core.u_uart_rxfifo.wdata_i ;
  assign \u_uart.u_uart_core.uart_rx.rx_enable  = 1'h1;
  assign \u_uart.u_uart_core.uart_rx.rx_parity_err  = \u_uart.u_uart_core.event_rx_parity_err ;
  assign \u_uart.u_uart_core.uart_rx.rx_valid  = \u_uart.u_uart_core.uart_rx.rx_valid_q ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud  = \u_uart.u_uart_core.uart_rx.tick_baud_q ;
  assign \u_uart.u_uart_core.uart_rx.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.uart_tx.clk_i  = clk_i;
  assign \u_uart.u_uart_core.uart_tx.idle  = \u_uart.u_uart_core.tx_uart_idle ;
  assign \u_uart.u_uart_core.uart_tx.parity_enable  = \u_uart.u_reg.u_ctrl_parity_en.q ;
  assign \u_uart.u_uart_core.uart_tx.rst_ni  = rst_ni;
  assign \u_uart.u_uart_core.uart_tx.tick_baud_x16  = \u_uart.u_uart_core.nco_sum_q [16];
  assign \u_uart.u_uart_core.uart_tx.tx  = \u_uart.u_uart_core.uart_tx.tx_q ;
  assign \u_uart.u_uart_core.uart_tx.tx_enable  = \u_uart.u_reg.u_ctrl_tx.q ;
  assign \u_uart.u_uart_core.uart_tx.wr  = \u_uart.u_uart_core.u_uart_txfifo.rready_i ;
  assign \u_uart.u_uart_core.uart_tx.wr_data  = \u_uart.u_uart_core.tx_fifo_data ;
  assign \u_uart.valid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \u_uart.wdata_o  = \u_uart.u_bridge.wdata_q ;
  assign \u_uart.we_o  = \u_uart.u_bridge.we_q ;
  assign uart_addr = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign uart_be = \u_uart.u_bridge.be_q ;
  assign uart_err = \xbar.u_s1n_6.tl_t_p [1];
  assign uart_gnt = \uart_host_adapter.gnt_o ;
  assign \uart_host_adapter.addr_i  = { \u_uart.u_bridge.addr_q [31:2], 2'h0 };
  assign \uart_host_adapter.be_i  = \u_uart.u_bridge.be_q ;
  assign \uart_host_adapter.clk_i  = clk_i;
  assign \uart_host_adapter.err_o  = \xbar.u_s1n_6.tl_t_p [1];
  assign \uart_host_adapter.instr_type_i  = 4'h9;
  assign \uart_host_adapter.intg_err  = 1'h0;
  assign \uart_host_adapter.intg_err_o  = 1'h0;
  assign \uart_host_adapter.intg_err_q  = 1'h0;
  assign \uart_host_adapter.rdata_intg_o  = \xbar.u_s1n_6.tl_t_p [8:2];
  assign \uart_host_adapter.rdata_o  = \u_uart.rdata_i ;
  assign \uart_host_adapter.req_i  = \u_uart.u_bridge.req_q ;
  assign \uart_host_adapter.rst_ni  = rst_ni;
  assign \uart_host_adapter.tl_be  = \u_rv_timer.u_reg.reg_be ;
  assign \uart_host_adapter.tl_i  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \uart_host_adapter.tl_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.tl_out  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.tl_source  = { 7'h00, \uart_host_adapter.g_multiple_reqs.source_q  };
  assign \uart_host_adapter.u_cmd_intg_gen.cmd_intg  = 7'h00;
  assign \uart_host_adapter.u_cmd_intg_gen.data_final  = \u_uart.u_bridge.wdata_q ;
  assign \uart_host_adapter.u_cmd_intg_gen.data_intg  = 7'h00;
  assign \uart_host_adapter.u_cmd_intg_gen.tl_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.u_cmd_intg_gen.tl_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \uart_host_adapter.unused_addr_bottom_bits  = 1'h0;
  assign \uart_host_adapter.valid_o  = \xbar.u_s1n_6.tl_t_p [65];
  assign \uart_host_adapter.wdata_i  = \u_uart.u_bridge.wdata_q ;
  assign \uart_host_adapter.wdata_intg_i  = 7'h00;
  assign \uart_host_adapter.we_i  = \u_uart.u_bridge.we_q ;
  assign uart_rdata = \u_uart.rdata_i ;
  assign uart_req = \u_uart.u_bridge.req_q ;
  assign uart_rvalid = \xbar.u_s1n_6.tl_t_p [65];
  assign uart_wdata = \u_uart.u_bridge.wdata_q ;
  assign uart_we = \u_uart.u_bridge.we_q ;
  assign \xbar.clk_i  = clk_i;
  assign \xbar.dev_sel_s1n_6  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.rst_ni  = rst_ni;
  assign \xbar.scanmode_i  = 4'h9;
  assign \xbar.tl_gpio_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_gpio_o  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.tl_pwm_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_pwm_o  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.tl_rv_timer_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_rv_timer_o  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.tl_s1n_6_ds_d2h  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_s1n_6_ds_h2d  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.tl_s1n_6_us_d2h  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.tl_s1n_6_us_h2d  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.tl_uart_host_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.tl_uart_host_o  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.tl_uart_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.tl_uart_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.accept_t_rsp  = \xbar.u_s1n_6.tl_t_p [65];
  assign { \xbar.u_s1n_6.blanked_auser [22:14], \xbar.u_s1n_6.blanked_auser [6:0] } = 16'h04d5;
  assign \xbar.u_s1n_6.clk_i  = clk_i;
  assign \xbar.u_s1n_6.dev_select_i  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.full_o  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 23'h024000, \xbar.u_s1n_6.dev_select_t  };
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rready_i  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.rvalid_o  = \u_uart.u_bridge.req_q ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 23'h024000, \xbar.u_s1n_6.dev_select_t  };
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wready_o  = \uart_host_adapter.gnt_o ;
  assign \xbar.u_s1n_6.fifo_h.reqfifo.wvalid_i  = \u_uart.u_bridge.req_q ;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rdata_o  = { \xbar.u_s1n_6.tl_t_p [64:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], 1'h0 };
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.rvalid_o  = \xbar.u_s1n_6.tl_t_p [65];
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wdata_i  = { \xbar.u_s1n_6.tl_t_p [64:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], 1'h0 };
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.fifo_h.rspfifo.wvalid_i  = \xbar.u_s1n_6.tl_t_p [65];
  assign \xbar.u_s1n_6.fifo_h.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.fifo_h.spare_req_i  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.spare_req_o  = \xbar.u_s1n_6.dev_select_t ;
  assign \xbar.u_s1n_6.fifo_h.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.fifo_h.tl_d_i  = { \xbar.u_s1n_6.tl_t_p [65:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.fifo_h.tl_d_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.fifo_h.tl_h_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.fifo_h.tl_h_o  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [15:0] } = { \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 15'h0000, \u_uart.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rvalid_o  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wdata_i  = { \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.wvalid_i  = \u_uart.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[0].fifo_d.tl_h_o  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [15:0] } = { \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 15'h0000, \u_pwm.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rvalid_o  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wdata_i  = { \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.wvalid_i  = \u_pwm.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_i  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[1].fifo_d.tl_h_o  = { \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [15:0] } = { \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 15'h0000, \u_gpio.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rvalid_o  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wdata_i  = { \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.wvalid_i  = \u_gpio.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_i  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[2].fifo_d.tl_h_o  = { \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rdata_o  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rready_i  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wready_o  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.wvalid_i  = \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.clr_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.depth_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.err_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.full_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.gen_passthru_fifo.unused_clr  = 1'h0;
  assign { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [64:48], \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [15:0] } = { \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 15'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rready_i  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rvalid_o  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wdata_i  = { \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , 1'h0 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wready_o  = 1'h1;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.wvalid_i  = \u_rv_timer.u_reg.u_reg_if.outstanding_q ;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_req_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_i  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.spare_rsp_o  = 1'h0;
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_i  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_i  = { \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.gen_dfifo[3].fifo_d.tl_h_o  = { \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.clk_i  = clk_i;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [107:0] = { \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign { \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [65], \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [61:48], \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [15:0] } = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 16'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [65:1] = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001 };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_i  = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.gen_err_resp.err_resp.u_intg_gen.tl_o  = { \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.rst_ni  = rst_ni;
  assign \xbar.u_s1n_6.tl_d_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \u_uart.u_reg.u_reg_if.rdata_q , 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \u_pwm.u_reg.u_reg_if.rdata_q , 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \u_gpio.u_reg.u_reg_if.rdata_q , 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \u_rv_timer.u_reg.u_reg_if.rdata_q , 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o  };
  assign \xbar.u_s1n_6.tl_d_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1 };
  assign \xbar.u_s1n_6.tl_h_i  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.tl_h_o  = { \xbar.u_s1n_6.tl_t_p [65:48], \u_uart.rdata_i , \xbar.u_s1n_6.tl_t_p [15:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.tl_t_i  = { \xbar.u_s1n_6.tl_t_p [65:1], \uart_host_adapter.gnt_o  };
  assign \xbar.u_s1n_6.tl_t_o  = { \u_uart.u_bridge.req_q , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.u_s1n_6.tl_u_i  = { \u_uart.u_reg.u_reg_if.outstanding_q , \u_uart.u_reg.u_reg_if.rspop_q , 3'h0, \u_uart.u_reg.u_reg_if.reqsz_q , \u_uart.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[0].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_uart.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.full_o , \u_pwm.u_reg.u_reg_if.outstanding_q , \u_pwm.u_reg.u_reg_if.rspop_q , 3'h0, \u_pwm.u_reg.u_reg_if.reqsz_q , \u_pwm.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_pwm.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.full_o , \u_gpio.u_reg.u_reg_if.outstanding_q , \u_gpio.u_reg.u_reg_if.rspop_q , 3'h0, \u_gpio.u_reg.u_reg_if.reqsz_q , \u_gpio.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_gpio.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.full_o , \u_rv_timer.u_reg.u_reg_if.outstanding_q , \u_rv_timer.u_reg.u_reg_if.rspop_q , 3'h0, \u_rv_timer.u_reg.u_reg_if.reqsz_q , \u_rv_timer.u_reg.u_reg_if.reqid_q , 1'h0, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.rspfifo.rdata_o [47:16], 14'h0000, \u_rv_timer.u_reg.u_reg_if.error_q , \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.full_o , \xbar.u_s1n_6.gen_err_resp.err_resp.err_rsp_pending , \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [64:62], 3'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.err_size , \xbar.u_s1n_6.gen_err_resp.err_resp.err_source , 1'h0, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o [47:16], 15'h0001, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_o_int [0] };
  assign \xbar.u_s1n_6.tl_u_o  = { \xbar.u_s1n_6.gen_dfifo[0].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_reg.reg_wdata , tl_uart_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[1].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_pwm.u_reg.reg_wdata , tl_pwm_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[2].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_gpio.u_reg.reg_wdata , tl_gpio_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_dfifo[3].fifo_d.reqfifo.rvalid_o , \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_rv_timer.u_reg.u_timer_v_lower0.wr_en_data_arb.wd , tl_rv_timer_h2d[23:1], 1'h1, \xbar.u_s1n_6.gen_err_resp.err_resp.tl_h_i [108], \u_rv_timer.u_reg.u_reg_if.u_err.tl_i [107:105], 12'h100, \uart_host_adapter.g_multiple_reqs.source_q , \u_uart.u_bridge.addr_q [31:2], 2'h0, \u_rv_timer.u_reg.reg_be , \u_uart.u_bridge.wdata_q , 24'h048001 };
  assign \xbar.unused_scanmode  = 1'h0;
  assign \$338y  = \$auto$bmuxmap.cc:84:execute$1970 ;
  assign \$499y  = \$auto$bmuxmap.cc:84:execute$1989 ;
endmodule
